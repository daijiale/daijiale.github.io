<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[DaiJiale's Blog]]></title>
  <subtitle><![CDATA[只有汗水不会欺骗你 || Only sweat will not fail you]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://daijiale.github.io/"/>
  <updated>2016-12-07T12:53:31.000Z</updated>
  <id>http://daijiale.github.io/</id>
  
  <author>
    <name><![CDATA[Jiale Dai]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[【后端】设计高并发场景下的高可用后端系统]]></title>
    <link href="http://daijiale.github.io/2016/12/07/%E3%80%90%E5%90%8E%E7%AB%AF%E3%80%91%E8%AE%BE%E8%AE%A1%E9%AB%98%E5%B9%B6%E5%8F%91%E5%9C%BA%E6%99%AF%E4%B8%8B%E7%9A%84%E5%90%8E%E7%AB%AF%E7%B3%BB%E7%BB%9F/"/>
    <id>http://daijiale.github.io/2016/12/07/【后端】设计高并发场景下的后端系统/</id>
    <published>2016-12-07T12:15:31.000Z</published>
    <updated>2016-12-07T12:53:31.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>PS：前段时间和Mentor们一起参与研发”百度地图百城千店感恩节AR游戏送大礼”的后端项目，积累了一些高并发情景下的系统设计经验，这里统一抽象成【秒杀情景下的后端系统】，归纳总结一下学习到的知识点。</p>
</blockquote>
<a id="more"></a>
<h1 id="背景">背景</h1><h2 id="为什么要构建一个高并发场景下的后端系统？">为什么要构建一个高并发场景下的后端系统？</h2><ul>
<li><p>技术角度：业务规模覆盖用户群大，数据联通实时性强，响应时间要求极短，需要高可用，高并发。</p>
</li>
<li><p>市场角度：用户体验、曝光度、促销（秒杀）等。</p>
</li>
</ul>
<p><strong>简而言之，就是让自己编写的系统应用做到如何更优雅的”接客”。</strong></p>
<p><strong>好，现在我们来看看，如何用正确的”姿势”来”接客”？</strong></p>
<h1 id="设计思路">设计思路</h1><h2 id="设计层面需要考虑的Points">设计层面需要考虑的Points</h2><h3 id="Point1:静态页面设计">Point1:静态页面设计</h3><ul>
<li>cdn托管</li>
<li>网址隐藏</li>
<li>页面压缩</li>
<li>缓存机制</li>
</ul>
<h3 id="Point2:动态页面设计">Point2:动态页面设计</h3><ul>
<li>队列设置</li>
<li>乐观锁（利用redis原子操作实现）</li>
<li>异步调用</li>
<li>资质抢购</li>
</ul>
<h3 id="Point3:高可用（双活）">Point3:高可用（双活）</h3><p><strong>双活：</strong>让主备两个数据中心都同时承担用户的业务，此时，主备两个数据中心互为备份，并且进行实时备份，尤其是在缓存层和DB层。</p>
<h3 id="Point4:高并发（负载均衡，安全过滤）">Point4:高并发（负载均衡，安全过滤）</h3><p><strong>负载均衡：</strong>分软件层、硬件层、链路层，但不管哪一层，主要有两种通用常用技术思路：第一种是将大量的同时发送的数据流在多个节点上进行处理。第二种是将单一负载的大量分担在多个节点上进行并行处理，并且在所有节点都完成处理后将结果合并起来输出给用户。而现在，负载均衡技术已经不是什么新鲜技术，一般维护过服务器，或有两台以上的服务器都可以使用负载均衡技术。</p>
<p><strong>安全过滤：</strong>设置比较完备的rules过滤器。</p>
<h3 id="Point5:_数据库设计注意静态配置和动态数据分离">Point5: 数据库设计注意静态配置和动态数据分离</h3><p><strong>静态配置：</strong>在前端页面主要呈现内容为主，在接口层主要<code>只读</code>的数据字段。</p>
<p><strong>动态数据：</strong>频繁更新，频繁检索的数据字段。</p>
<h3 id="Point6：缓存雪崩">Point6：缓存雪崩</h3><p>注意设置缓存失效时间，不然超出redis缓存最大内存，溢出讲导致雪崩。</p>
<h3 id="Point7：缓存击穿">Point7：缓存击穿</h3><p>注意设置缓存失效时间的随机性，别同一时间同时失效，瞬间同时失效将导致密集的IO读写操作，容易导致缓存击穿。</p>
<h3 id="Point8:脱离原站点部署">Point8:脱离原站点部署</h3><p><strong>简而言之就是：千万不要把鸡蛋放在一个篮子里！！！</strong></p>
<h4 id="分业务分布式部署">分业务分布式部署</h4><ul>
<li><strong>定义：</strong>一个业务分拆成多个子业务，部署在不同的服务器上。</li>
<li><strong>好处：</strong>强调机器间的协作，其重点是任务可拆分，如：某个任务需要一个机器运行10个小时， 将该该任务用10台机器的分布式跑，可能2个小时就跑完了。（子任务之间有依赖关系）。</li>
<li><strong>坏处：</strong>中心化带来的主要问题是可靠性，若中心节点宕机则整个系统不可用，分布式除了解决部分中心化问题，也倾向于分散负载，但分布式会带来很多的其他问题，最主要的就是一致性。</li>
</ul>
<h4 id="分容器分布式部署">分容器分布式部署</h4><ul>
<li><strong>定义：</strong>俗称”集群”，同一个业务，部署在多个服务器容器上。为的</li>
<li><strong>好处：</strong>同一个业务部署在多台机器上，提高系统可用性。如：某个任务需要一个机器运行10个小时，那任务放到 处理该任务的集群上 还是需要10个小时。 假如有10个这样的任务， 放到同一个集群上， 仍然需要10个小时，但是由于挂载的机器来自不同地域节点，可以提升带宽上的物理传输速度，一台服务器垮了，其它的服务器可以顶上来。</li>
<li><strong>坏处：</strong>整体性能难得到显著得提升，受业务内极端需求峰值限制。</li>
</ul>
<p><strong>PS： “没有最好的方式，只有最适合的方式”，不同的业务场景需求，不同的模块：数据库、缓存、消息中间件、媒体资源、系统应用等，需要选用不同的部署方案才能达到高可用，当然，一般更建议两种方式组合部署。</strong></p>
<h3 id="Point9:监控+监控+监控（总要事情说三遍！）">Point9:监控+监控+监控（总要事情说三遍！）</h3><p>系统研发完成，测试通过并不代表就结束了，一个高并发系统最关键的时期往往是在活动的峰值期间，为了不让RD们24小时目不转睛地盯着所有可能出现问题的地方，最好在关键处加上异常监控信息，以便及时对异常事件做出响应。</p>
<p><strong>这里介绍两个开源监控项目：</strong></p>
<ul>
<li><a href="https://github.com/ParryQiu/GuGuJianKong" target="_blank" rel="external">咕咕监控</a></li>
<li><a href="http://www.zabbix.com/" target="_blank" rel="external">Zabbix</a></li>
</ul>
<h2 id="大厂的成熟解决方案">大厂的成熟解决方案</h2><ul>
<li>在百度的解决方案：<a href="https://cloud.baidu.com/" target="_blank" rel="external">百度云</a>、<code>opcode缓存</code>、<code>BigPipe</code>、<code>BDRP（RedisV3）集群</code>、<code>ORP集群</code>、<code>CDN分流</code>,<code>hiphoto</code>等更大的云实例。</li>
</ul>
<ul>
<li>从阿里同学那得知的一些那边的解决方案：活用<a href="https://www.aliyun.com/?utm_medium=text&amp;utm_source=bdbrand&amp;utm_campaign=bdbrand&amp;utm_content=se_32492" target="_blank" rel="external">阿里云服务</a>，譬如<code>云监控</code>、<code>云盾</code>、<code>ECS</code>、<code>OSS</code>、<code>RDS</code>、<code>CDN</code>分流，这些大都已经是面向大众的商业产品。</li>
</ul>
<h2 id="个人开发者/创业公司的解决方案">个人开发者/创业公司的解决方案</h2><p>回头单开一篇文章介绍，留个<a href="">传送门</a>。</p>
<h1 id="研发策略">研发策略</h1><h2 id="一、认清业务的环境、形式">一、认清业务的环境、形式</h2><ul>
<li>用户纬度：超大量，正常用户/恶意用户。</li>
<li>地域：全国各地。</li>
<li>业务流程：<ul>
<li>【前台】卡券、奖品展示，领用登记等。<ul>
<li>【后台】数据接入、数据处理、数据同步、数据录入、库存管理。</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>通用的业务场景如下：</strong></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/%E7%A7%92%E6%9D%80%E4%B8%9A%E5%8A%A1%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84.jpg" alt=""></p>
<h2 id="二、分析业务的状态">二、分析业务的状态</h2><h3 id="商品/奖品展示层">商品/奖品展示层</h3><ul>
<li>商品/奖品展示：秒杀倒计时页面。</li>
<li>秒杀进行中：点击进入秒杀页面。</li>
<li>秒杀活动结束：提示活动已结束。</li>
</ul>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblog%E7%A7%92%E6%9D%80%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF2.jpg" alt=""></p>
<h4 id="技术细节">技术细节</h4><p>页面/服务器优化，依赖包cdn网络加速部署，隐藏跳转页面，状态切换（sh脚本设置定时任务实现）,这里就不扩展了，现在应对大型Web系统的成熟前端页面技术栈特别多。</p>
<h3 id="用户登记层">用户登记层</h3><ul>
<li>秒杀进行中：秒杀登记页面。</li>
<li>秒杀结束了：秒杀结束页面。<br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblog%E7%A7%92%E6%9D%80%E4%B8%9A%E5%8A%A1%E6%B5%81%E7%A8%8B3.jpg" alt=""></li>
</ul>
<h4 id="技术细节-1">技术细节</h4><h5 id="token加/解密（加密协议自己拟订）">token加/解密（加密协议自己拟订）</h5><p><a href="http://doc.okbase.net/MR-YY/archive/255709.html" target="_blank" rel="external">比较常见的token加/解密算法和协议</a></p>
<h5 id="ajax跨域（常用jsonp）">ajax跨域（常用jsonp）</h5><p><a href="http://www.cnblogs.com/chopper/archive/2012/03/24/2403945.html" target="_blank" rel="external">比较常见的ajax跨域处理方式</a></p>
<h3 id="数据接入层">数据接入层</h3><ul>
<li>数据校验：完成对数据、用户验证（安全和速度均要考虑）。</li>
<li>存入nosql消息队列：去重/排序/缓存/检索数据。</li>
<li>检测商品最大数量：提示活动已结束。</li>
</ul>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblog%E7%A7%92%E6%9D%80%E4%B8%9A%E5%8A%A1%E6%B5%81%E7%A8%8B4.jpg" alt=""><br><strong>简而言之：就是”一言不合就反馈，功成名就须尽人皆知”。</strong></p>
<h4 id="技术细节-2">技术细节</h4><h5 id="数据校验">数据校验</h5><p><a href="http://www.2cto.com/kf/201305/214039.html" target="_blank" rel="external">数据校验器示例写法</a></p>
<h5 id="存入nosql消息队列">存入nosql消息队列</h5><p><a href="http://blog.csdn.net/sunxinhere/article/details/7968886" target="_blank" rel="external">比较常见的nosql消息中间件</a></p>
<h3 id="数据处理层">数据处理层</h3><ul>
<li>数据持久化：转存nosql数据到mysql数据库，主要为dao层DB操作。</li>
<li>DB优化：DB分表，DB表扩展，DB迁移。</li>
<li>转存：sql转存，导出excel打印审核。</li>
</ul>
<h4 id="技术细节-3">技术细节</h4><h2 id="三、根据状态进行代码模块层面的设计">三、根据状态进行代码模块层面的设计</h2><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblog%E7%A7%92%E6%9D%80%E4%BB%A3%E7%A0%81%E6%A8%A1%E5%9D%97%E6%A8%A1%E5%9E%8B.png" alt=""></p>
<h2 id="四、全量的压力测试">四、全量的压力测试</h2><p><strong>简而言之：正式表演前，请务必带装彩排一轮</strong></p>
<p><a href="http://www.oschina.net/news/30374/10-free-tools-to-loadstress-test-your-web?from=rss" target="_blank" rel="external">十个免费的 Web 压力测试工具</a></p>
<h1 id="参考文档">参考文档</h1><ul>
<li><a href="https://www.zhihu.com/question/21177474" target="_blank" rel="external">怎样学习才能拥有所谓“高并发”的经验？</a></li>
<li><a href="http://blog.csdn.net/yangbutao/article/details/12242441" target="_blank" rel="external">构建高并发高可用的电商平台架构实践</a></li>
<li><a href="http://www.csdn.net/article/2014-11-28/2822858" target="_blank" rel="external">徐汉彬：Web系统大规模并发——电商秒杀与抢购</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>PS：前段时间和Mentor们一起参与研发”百度地图百城千店感恩节AR游戏送大礼”的后端项目，积累了一些高并发情景下的系统设计经验，这里统一抽象成【秒杀情景下的后端系统】，归纳总结一下学习到的知识点。</p>
</blockquote>]]>
    
    </summary>
    
      <category term="PHP" scheme="http://daijiale.github.io/tags/PHP/"/>
    
      <category term="Redis" scheme="http://daijiale.github.io/tags/Redis/"/>
    
      <category term="高并发" scheme="http://daijiale.github.io/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Docker】CaaS、laaS平台集成解决方案]]></title>
    <link href="http://daijiale.github.io/2016/10/12/%E3%80%90%E4%BA%91%E8%AE%A1%E7%AE%97%E3%80%91CaaS%20laaS%E5%B9%B3%E5%8F%B0%E9%9B%86%E6%88%90%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://daijiale.github.io/2016/10/12/【云计算】CaaS laaS平台集成解决方案/</id>
    <published>2016-10-11T17:14:01.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>PS：之前把自己的整站迁移到了阿里云ECS上，在重新配置laaS的过程中，遇到了一些基础工作流建立的问题，包括裸机的自动化运维配置，持续集成配置，这一套整下来，花费的时间成本和人力成本很多，想到以后如果每迁移一次整站，都需要经历这样一遍过程，确实恼火。基于之前<a href="http://duwear.baidu.com" target="_blank" rel="external">Duwear</a>的ROM持续集成工作经验，想在自己的ECS上引入Docker技术，并创建自己的Docker镜像，所以就有了Caas平台Daocloud的邂逅。</p>
</blockquote>
<a id="more"></a>
<h1 id="常见云平台">常见云平台</h1><h2 id="laaS平台">laaS平台</h2><p>Infrastructure-as-a-Service</p>
<p>第一层叫做IaaS，有时候也叫做Hardware-as-a-Service，几年前如果你想在办公室或者公司的网站上运行一些企业应用，你需要去买服务器，或者别的高昂的硬件来控制本地应用，让你的业务运行起来。</p>
<p>但是现在有IaaS，你可以将硬件外包到别的地方去。IaaS公司会提供场外服务器，存储和网络硬件，你可以租用。节省了维护成本和办公场地，公司可以在任何时候利用这些硬件来运行其应用。</p>
<p>一些大的IaaS公司包括Amazon, Microsoft, VMWare, Rackspace和Red Hat.不过这些公司又都有自己的专长，比如Amazon和微软给你提供的不只是IaaS，他们还会将其计算能力出租给你来host你的网站。</p>
<h2 id="PaaS平台">PaaS平台</h2><p>Platform-as-a-Service</p>
<p>第二层就是所谓的PaaS，某些时候也叫做中间件。你公司所有的开发都可以在这一层进行，节省了时间和资源。</p>
<p>PaaS公司在网上提供各种开发和分发应用的解决方案，比如虚拟服务器和操作系统。这节省了你在硬件上的费用，也让分散的工作室之间的合作变得更加容易。网页应用管理，应用设计，应用虚拟主机，存储，安全以及应用开发协作工具等。</p>
<p>一些大的PaaS提供者有BAE,SAE,Google App Engine,Microsoft Azure，Force.com,Heroku，Engine Yard。最近兴起的公司有AppFog, Mendix 和 Standing Cloud。</p>
<h2 id="SaaS平台">SaaS平台</h2><p>Software-as-a-Service</p>
<p>第三层也就是所谓SaaS。这一层是和你的生活每天接触的一层，大多是通过网页浏览器来接入。任何一个远程服务器上的应用都可以通过网络来运行，就是SaaS了。</p>
<p>你消费的服务完全是从网页如Netflix, MOG, Google Apps, Box.net, Dropbox或者苹果的iCloud、百度云盘等那里进入这些分类。尽管这些网页服务是用作商务和娱乐或者两者都有，但这也算是云技术的一部分。</p>
<h2 id="比较">比较</h2><p>如果你采用IaaS服务，那么意味着你就不用自己买服务器了，随便在哪家购买虚拟机，但是还是需要自己装服务器软件。</p>
<p>而如果你采用PaaS的服务，那么意味着你既不需要买服务器，也不需要自己装服务器软件，只需要自己开发网站程序。</p>
<p>如果你再进一步，购买某些在线论坛或者在线网店的服务,这意味着你也不用自己开发网站程序，只需要使用它们开发好的程序，而且他们会负责程序的升级、维护、增加服务器等，而你只需要专心运营即可，此即为SaaS。</p>
<h2 id="BaaS平台">BaaS平台</h2><p>Backend as a Service</p>
<p>主要为移动应用开发者提供整合云后端的边界服务。</p>
<p>技术上讲，BaaS关键问题是要保持REST Web服务模型接口的优势。这些接口呈现出一个简单的PUT或GET事务处理模式，但并不会一直保持在调用的处理状态中。多数PUT/GET方法显示出了他们自己的服务API，作为RESTful 接口，这些接口使用XML数据结构来接收和响应。XML处理是一件琐碎的事情，然而，在每个目标移动设备中，接受一个简单的数据结构或者提供编程逻辑来重复使用该界面都会有所帮助。<br>创建一个BaaS服务，拥有正确功能级别的粒度，也同样重要。移动用户通常希望设备能够快速响应一个请求，而且有一些接口时间问题：将具有较长执行时间的复杂功能转移到一个单独的服务上是不合适的。因为RESTful接口预计是无状态的，因此在把复杂功能转化为一系列可以单独使用的元素时要高度注意，但是当需要时这些功能又可以聚集到一起。每个请求必须是独立的，并且可以将数据反馈给特定的需求。如果稍后还会需求，就必须将其存储到设备中，或者通过设备返回、维护并更新。</p>
<p>国内比较典型的厂商有：AppCan、Bmob、Leancloud等</p>
<h2 id="CaaS平台">CaaS平台</h2><p>Container as a Service</p>
<p>如果大家知道virtualization很多人都会想到虚拟机。然而实现virtualization的方法不只有虚拟机。现在很火的容器就是另外一种实现virtualization的方法，也被很多公司执行。容器拥有等同于虚拟机资源隔离与配置的好处，但是其结构方法会比虚拟机更加便捷与高效，并更加节约资源。就拿Docker来说（一个容器技术的实现，更加易用，有兴趣的朋友可以自己去他们的官网看看），是在服务器的操作系统上安装docker engine，从而通过命名空间隔离运行很多进程，每一个进程就是所谓的一个容器，这些容器可以运行你的服务，最终维持一个树形进程列表从而得到一定的隔离性（虽然不完美，但其实虚拟机被攻破的事也不少）。这些容器技术的实现其实最早来自apache foundation service的开源项目。</p>
<p>容器这么火了自然也要搬到云上来了。这才有了我们如今的container-as-a-service。刚才我们说了，容器更加便捷和高效。首先容器非常节约资源，虚拟机成本是很高的。我记得Sam Newman的一本书上说的很形象。把服务器比作一个抽屉，把虚拟机比作袜子，虽然在袜子里可以可以放你想要的，但如果你在抽屉里放太多的袜子，最后也会“空虚的”占满空间啊。。。而容器却非常light weight, 共享同一个kernal，比完整的虚拟机要快速。用过的朋友就会发现，启动云上面的虚拟机非常慢，Azure的VM、Cloud Service，AWS的EC2、Elastic Beanstalk启动的话的时间真是等的花都谢了。 个人经验部署一个服务至少需要15分钟。哭。。。而容器服务因为作为进程运行，则是快到以秒为计时单位，而且资源上的控制也非常便捷。如果要深究，可以去读读paper。。再说说DevOps，如何做到持续交付，持续集成，速度效率第一呀！你部署个测试环境每次花那么久，测试不过再部署真是不嫌蛋疼啊。现在云上面的microservice/微服务就非常支持使用容器的做法，每一个服务都不大，分布开来难道每一个小服务你都要用一个虚拟机来运行吗。。实在惭愧，我们现在在做一个大规模微服务系统，但是我们每个微服务都是由虚拟机来跑的（有一些内部原因所以是强制的），所有我深知其痛点。这时候容器就是很理想，把他们分配在每一个轻微的容器里来管理实现灵活高效的开发。。But其实容器也是有限制的。有一些权限也是拿不到的或者说很麻烦拿到吧。具体全都是什么还没完全搞清楚（这也是技术不完善时我们还无法全部使用容器技术的原因之一）。最近在开发的一个服务就必须跑在虚拟机上因为一个logging和health monitoring agent的原因可能容器或者其他非虚拟机技术不支持某些权限吧。</p>
<p>说说container-as-a-service现在的实现，大哥要是有钱可以有一个数据中心，每台电脑直接在host OS上装上容器管理引擎运行容器而不装任何虚拟机。。。 貌似目前没见有这么大规模的成熟的提供商。。。但是在云上可以使用云服务商提供的虚拟机将很多容器们包装在里面，然后扩展到多部虚拟机，从一个服务器到多个。灵雀云现在就是这样做的，不过当然他们要自己实现资源的调配，以及容器和容器之间的沟通，一种container orchestration engine。 还有微软， 现在其容器服务的分布式管理调配的技术是通过集成Apache Mesos来实现，你可以把它理解为云的kernal。还有Google的Kubernete也是同样的技术。</p>
<h1 id="基于阿里云ECS建立Daocloud服务">基于阿里云ECS建立Daocloud服务</h1><p>持续更新</p>
<h1 id="参考文献">参考文献</h1><ul>
<li><a href="http://dockone.io/article/1506" target="_blank" rel="external">哪种云架构适合你</a></li>
<li><a href="https://www.zhihu.com/question/23048744" target="_blank" rel="external">BaaS与IaaS、PaaS、SaaS的区别和关系要如何理解？</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>PS：之前把自己的整站迁移到了阿里云ECS上，在重新配置laaS的过程中，遇到了一些基础工作流建立的问题，包括裸机的自动化运维配置，持续集成配置，这一套整下来，花费的时间成本和人力成本很多，想到以后如果每迁移一次整站，都需要经历这样一遍过程，确实恼火。基于之前<a href="http://duwear.baidu.com">Duwear</a>的ROM持续集成工作经验，想在自己的ECS上引入Docker技术，并创建自己的Docker镜像，所以就有了Caas平台Daocloud的邂逅。</p>
</blockquote>]]>
    
    </summary>
    
      <category term="Docker" scheme="http://daijiale.github.io/tags/Docker/"/>
    
      <category term="laaS" scheme="http://daijiale.github.io/tags/laaS/"/>
    
      <category term="CaaS" scheme="http://daijiale.github.io/tags/CaaS/"/>
    
      <category term="Daocloud" scheme="http://daijiale.github.io/tags/Daocloud/"/>
    
      <category term="阿里云" scheme="http://daijiale.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【PHP】高级特性以及设计模式归纳]]></title>
    <link href="http://daijiale.github.io/2016/09/29/%E3%80%90PHP%E3%80%91%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%BB%A5%E5%8F%8A%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%BD%92%E7%BA%B3/"/>
    <id>http://daijiale.github.io/2016/09/29/【PHP】高级特性以及设计模式归纳/</id>
    <published>2016-09-29T07:33:11.000Z</published>
    <updated>2016-12-05T10:39:39.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>PS：之前在和Mentor一起开发新项目时候，接触到了一些很经典的PHP设计模式和高级特性，通过项目沉淀和业余时间的学习，想对常用设计模式进行一个归纳，进行新知识的梳理，方便服务于未来更大型的后端项目，以及帮助更多的PHPer上路。</p>
</blockquote>
<a id="more"></a>
<h1 id="PSR">PSR</h1><p>FIG制定的PHP规范，简称PSR，是PHP开发的事实标准，现在主流的PHP框架：symfony、laravel、yii、thinkphp、百度odp等都严格遵守这个规范。</p>
<h2 id="PSR-0_自动加载">PSR-0 自动加载</h2><ul>
<li>命名空间必须与绝对路径一致。</li>
<li>类名首字母必须大写。</li>
<li>除入口文件外，其他”.php”必须只有一个类。</li>
</ul>
<h3 id="开发符合PSR-0规范的基础框架">开发符合PSR-0规范的基础框架</h3><ul>
<li>严格全部使用命名空间。</li>
<li>所有PHP文件必须自动载入，不能有include/require。</li>
<li>单一入口。</li>
</ul>
<h2 id="PSR-1_基本代码规范">PSR-1 基本代码规范</h2><p><a href="https://segmentfault.com/a/1190000002521577" target="_blank" rel="external">PSR-1规范详细介绍</a></p>
<h2 id="PSR-2_代码样式">PSR-2 代码样式</h2><p><a href="https://my.oschina.net/u/1420250/blog/193971" target="_blank" rel="external">PSR-2代码样式详细介绍</a></p>
<h2 id="PSR-3_日志接口">PSR-3 日志接口</h2><p><a href="https://segmentfault.com/a/1190000002521644" target="_blank" rel="external">PSR-3日志接口详细介绍</a></p>
<h2 id="PSR-4_自动加载升级版">PSR-4 自动加载升级版</h2><p><a href="https://segmentfault.com/a/1190000000380008" target="_blank" rel="external">PSR-4 PHP规范</a></p>
<h1 id="SPL">SPL</h1><h2 id="SPL（PHP标准库）">SPL（PHP标准库）</h2><ul>
<li>SqlStack，SqlQueue，SplHeap，SqlFixedArray等数据结构类。</li>
<li>ArrayIterator、AppendIterator、Countable、ArrayObject。</li>
<li>SPL提供的函数。</li>
</ul>
<h3 id="Eg">Eg</h3><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/YIIsudu.jpg" alt=""></p>
<p><code>YII</code>之所以能成为最快的PHP框架，源于使用了<code>SPL</code>提供的<code>LazyLoading</code>技术，即：vendor/yiisoft/yii2/Yii.php中<code>sql_autoload_register</code>的使用，例如：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_loader</span><span class="params">($class)</span></span>&#123;</span><br><span class="line">	<span class="keyword">require</span>(<span class="string">'class\\'</span>.$class.<span class="string">'.php'</span>);<span class="comment">//对象new时候发现未定义，会自动到指定目录下加载对应对象</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">spl_autoload_register(<span class="string">'my_loader'</span>);</span><br><span class="line"></span><br><span class="line">$is_girl = $_GET[<span class="string">'sex'</span>] == <span class="number">0</span> ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($is_girl)&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">'this is a girl'</span>;</span><br><span class="line">	$class1 = <span class="keyword">new</span> Class1;<span class="comment">//未定义对象，不会报错，会反向调用my_loader去加载对象</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">'not a girl'</span>;</span><br><span class="line">	$class2 = <span class="keyword">new</span> Class2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>PS：想深入了解SPL标准库的话，这里有一篇<a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="external">一峰</a>前辈的博文<a href="http://www.ruanyifeng.com/blog/2008/07/php_spl_notes.html" target="_blank" rel="external">SPL笔记</a>，国内应该找不到比这更好的中文参考文献了，同时我自己也整理了一篇关于SPL的博文，有兴趣的同学也可以看一看：<a href="">传送门</a>。</p>
<h1 id="PHP链式操作">PHP链式操作</h1><p><strong>eg:</strong> $db -&gt;where()-&gt;limit()-&gt;order();</p>
<p>不过多解释了，天天用的。</p>
<h1 id="PHP魔术方法">PHP魔术方法</h1><h2 id="__get/__set"><code>__get/__set</code></h2><p> 常用于类的构造方法，当对象的属性不存在时，将自动调用<code>__set</code>初始化属性，<code>__get</code>返回对象初始化属性。</p>
<h2 id="__call/__callStatic"><code>__call/__callStatic</code></h2><p> 常用于类的构造方法，当对象的方法不存在时，将自动回调<code>__call</code>初始化方法，<code>__callStatic</code>针对静态方法。</p>
<h2 id="__toString"><code>__toString</code></h2><p> 将对象转换成字符串类型。</p>
<h2 id="__invoke"><code>__invoke</code></h2><p>把对象当成函数去使用，则自动回调<code>__invoke</code>方法，返回对象传入的参数。</p>
<h1 id="工厂模式">工厂模式</h1><p>工厂模式的最大优点在于创建对象上面，就是把创建对象的过程封装起来，这样随时可以产生一个新的对象。<br>减少代码进行复制粘帖，耦合关系重，牵一发动其他部分代码。</p>
<p>通俗的说，以前创建一个对象要使用new，现在把这个过程封装起来了。<br>假设不使用工厂模式：那么很多地方调用类a，代码就会这样子创建一个实例：new a(),假设某天需要把a类的名称修改，意味着很多调用的代码都要修改。</p>
<p>工厂模式的优点就在创建对象上。<br>工厂模式的优点就在创建对象上。建立一个工厂（一个函数或一个类方法）来制造新的对象,它的任务就是把对象的创建过程都封装起来，<br>创建对象不是使用new的形式了。而是定义一个方法，用于创建对象实例。</p>
<p>每个类可能会需要连接数据库。那么就将连接数据库封装在一个类中。以后在其他类中通过类名:</p>
<p>为什么引入抽象的概念？<br>想一想，在现实生活中，当我们无法确定某个具体的东西的时候，往往把一类东西归于抽象类别。<br>工厂方法：<br>比如你的工厂叫做“香烟工厂”，那么可以有“七匹狼工厂”“中华工厂”等，但是，这个工厂只生厂一种商品：香烟；<br>抽象工厂：无法描述它到底生产什么产品，它生产很多类型的产品(所以抽象工厂就会生成子工厂)。<br>你的工厂是综合型的，是生产“一系列”产品，而不是“一个”，比如：生产“香烟”，还有“啤酒”等。然后它也可以有派生出来的具体的工厂，但这些工厂都是生产这一系列产品，只是可能因为地域不一样，为了适应当地人口味，味道也不太一样。<br>工厂模式：理解成只生成一种产品的工厂。比如生产香烟的。<br>工厂方法：工厂的一种产品生产线 。比如键盘的生成过程。</p>
<p>别人会反驳：吃饱了没事干，一定要修改类名称呢？这个说不定。一般都不会去修改类名称。</p>
<p>其实工厂模式有很多变体，抓住精髓才是关键：只要是可以根据不同的参数生成不同的类实例，那么就符合工厂模式的设计思想。</p>
<h1 id="单例模式">单例模式</h1><p>单例模式的要点有三个：</p>
<p>一是某个类只能有一个实例；</p>
<p>二是它必须自行创建这个实例；</p>
<p>三是它必须自行向整个系统提供这个实例。</p>
<p>下面我们讨论下为什么要使用PHP单例模式？</p>
<p>多数人都是从单例模式的字面上的意思来理解它的用途, 认为这是对系统资源的节省, 可以避免重复实例化, 是一种”计划生育”. 而PHP每次执行完页面都是会从内存中清理掉所有的资源. 因而PHP中的单例实际每次运行都是需要重新实例化的, 这样就失去了单例重复实例化的意义了. 单单从这个方面来说, PHP的单例的确有点让各位失望. 但是单例仅仅只有这个功能和应用吗? 答案是否定的,我们一起来看看。</p>
<ol>
<li><p>php的应用主要在于数据库应用, 所以一个应用中会存在大量的数据库操作, 在使用面向对象的方式开发时(废话), 如果使用单例模式, 则可以避免大量的new 操作消耗的资源。</p>
</li>
<li><p>如果系统中需要有一个类来全局控制某些配置信息, 那么使用单例模式可以很方便的实现. 这个可以参看zend Framework的FrontController部分。</p>
</li>
<li><p>在一次页面请求中, 便于进行调试, 因为所有的代码(例如数据库操作类db)都集中在一个类中, 我们可以在类中设置钩子, 输出日志，从而避免到处var_dump, echo。</p>
</li>
</ol>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EasyFramework_Easy_Mysql</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> $_instance = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>::$_instance === <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">self</span>::$_instance = <span class="keyword">new</span> <span class="keyword">self</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>::$_instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$x = EasyFramework_Easy_Mysql::getInstance();</span><br><span class="line">var_dump($x);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span><br><span class="line"> * 1.第一步：</span><br><span class="line"> * 既然是单例，也就是只能实例化一次，也就代表在实例化时</span><br><span class="line"> * 不可能使用new关键字！！！！</span><br><span class="line"> * 在使用new关键字时，类中的构造函数将自动调用。</span><br><span class="line"> * 但是，如果我们将构造函数的访问控制符设置为protected或private</span><br><span class="line"> * 那么就不可能直接使用new关键字了！！！</span><br><span class="line"> * 第二步：</span><br><span class="line"> * 无论protected/private修饰的属性或方法，请问在当前类的</span><br><span class="line"> * 内部是否可以访问？---&gt; 可以</span><br><span class="line"> * 第三步：</span><br><span class="line"> * 现在我们根本没有办法得到对象（因为你不能使用new关键字了），</span><br><span class="line"> * 第四步：静态成员(包括属性或方法)在访问时，只能通过</span><br><span class="line"> * 类名称::属性()</span><br><span class="line"> * 类名称::方法()</span><br><span class="line"> * 第五步：如果我现在存在一个静态方法--&gt; getInstance()</span><br><span class="line"> * 那么在调用时就应写成</span><br><span class="line"> * $object = EasyFramework_Easy_Mysql::getInstance()</span><br><span class="line"> * 如果，getInstance()方法可以得到唯一的一个对象</span><br><span class="line"> * 也就代表是所谓的单例模式了！！！</span><br><span class="line"> * 第六步，怎么让getInstace()只得到一个对象呢？</span><br><span class="line"> * 既然要得到对象，那么肯定是：</span><br><span class="line"> * $variabl = new ????();</span><br><span class="line"> * 我们又知道静态属性的值是可以所有的对象来继承的！！！</span><br><span class="line"> * 静态成员是属于类的，而非对象的！</span><br><span class="line"> * 所以</span><br><span class="line"> * 第七步：声明一个静态的属性，用其存储实例化的对象</span><br><span class="line"> * protectd static $_instance</span><br><span class="line"> *</span><br><span class="line"> * 并且初始值为null</span><br><span class="line"> * 那么我在调用getInstance()方法时，只需要判断其值是否为空即可\</span><br><span class="line"> *</span><br><span class="line"> * public static function getInstance()&#123;</span><br><span class="line"> *     if(self::_instance === null)&#123;</span><br><span class="line"> *      self::_instance = new self();</span><br><span class="line"> *  &#125;</span><br><span class="line"> *  return self::_instance;</span><br><span class="line"> * &#125;</span><br><span class="line"> * 在实例时，一定是这样写：</span><br><span class="line"> * $x = EasyFramework_Easy_Mysql::getInstance();</span><br><span class="line"> * 在第一时调用时,类的$_instance这个静态属性值为null,</span><br><span class="line"> * 那么也就代表,getInstance()方法的判断条件为真了，</span><br><span class="line"> * 也就意味着</span><br><span class="line"> * self::$_instance这个成员有了值了！！！</span><br><span class="line"> * 并且还返回这个值</span><br><span class="line"> * $y = EasyFramework_Easy_Mysql::getInstance();</span><br><span class="line"> * 在第二次或第N次调用时，self::$_instance已经有了值了</span><br><span class="line"> * 也就代表getInstance()方法的条件为假了！！！</span><br><span class="line"> * 也就代表其中的程序代表不可能执行了！！！</span><br><span class="line"> * 也就代表将直接返回以前的值了！！！</span><br><span class="line"> */</span></span><br></pre></td></tr></table></figure>
<h1 id="注册器模式">注册器模式</h1><p>单例模式解决的是如何在整个项目中创建唯一对象实例的问题，工厂模式解决的是如何不通过new建立实例对象的方法。 那么注册树模式想解决什么问题呢？ 在考虑这个问题前，我们还是有必要考虑下前两种模式目前面临的局限。 首先，单例模式创建唯一对象的过程本身还有一种判断，即判断对象是否存在。存在则返回对象，不存在则创建对象并返回。 每次创建实例对象都要存在这么一层判断。 工厂模式更多考虑的是扩展维护的问题。 总的来说，单例模式和工厂模式可以产生更加合理的对象。怎么方便调用这些对象呢？而且在项目内如此建立的对象好像散兵游勇一样，不便统筹管理安排埃因而，注册树模式应运而生。不管你是通过单例模式还是工厂模式还是二者结合生成的对象，都统统给我“插到”注册树上。我用某个对象的时候，直接从注册树上取一下就好。这和我们使用全局变量一样的方便实用。 而且注册树模式还为其他模式提供了一种非常好的想法。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">static</span> $objects;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span><span class="params">($alias,$object)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">self</span>::$objects[$alias]=$object;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($alias)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">self</span>::$objects[$alias];</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">_unset</span><span class="params">($alias)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">unset</span>(<span class="keyword">self</span>::$objects[$alias]);</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Register::set(<span class="string">'rand'</span>,RandFactory::factory());</span><br><span class="line"></span><br><span class="line">$object=Register::get(<span class="string">'rand'</span>);</span><br></pre></td></tr></table></figure>
<h1 id="适配器模式">适配器模式</h1><ul>
<li>可以将截然不同的函数接口封装成统一的API。</li>
<li><p>实际应用举例，PHP的数据库操作有mysql、mysqli、pdo3种、可以用适配器模式统一成一致。类似的场景还有cache适配器，将memcache、redis、file、apc等不同的缓存函数，统一成一致。 </p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//目标角色  </span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Target</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">simpleMethod1</span><span class="params">()</span></span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">simpleMethod2</span><span class="params">()</span></span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//源角色  </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Adaptee</span> </span>&#123;  </span><br><span class="line">      </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">simpleMethod1</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Adapter simpleMethod1'</span>.<span class="string">"&lt;br&gt;"</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//类适配器角色  </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Adapter</span> <span class="keyword">implements</span> <span class="title">Target</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">private</span> $adaptee;  </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(Adaptee $adaptee)</span> </span>&#123;  </span><br><span class="line">        $this-&gt;adaptee = $adaptee;   </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//委派调用Adaptee的sampleMethod1方法  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">simpleMethod1</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">echo</span> $this-&gt;adaptee-&gt;simpleMethod1();  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">simpleMethod2</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Adapter simpleMethod2'</span>.<span class="string">"&lt;br&gt;"</span>;     </span><br><span class="line">    &#125;   </span><br><span class="line">      </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//客户端  </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;  </span><br><span class="line">      </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        $adaptee = <span class="keyword">new</span> Adaptee();  </span><br><span class="line">        $adapter = <span class="keyword">new</span> Adapter($adaptee);  </span><br><span class="line">        $adapter-&gt;simpleMethod1();  </span><br><span class="line">        $adapter-&gt;simpleMethod2();   </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">Client::main();</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="策略模式">策略模式</h1><ul>
<li>将一组特定的行为和算法封装成类，以适应某些特定的上下文环境，这种模式就是策略模式。</li>
<li>实际应用举例，假如一个电商网站系统，针对男性女性用户要各自跳转到不同的商品类目，并且所有广告位展示不同的广告。</li>
<li>实现Ioc，依赖倒置，控制反转。</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="comment">/** </span><br><span class="line">* 策略模式 </span><br><span class="line">* 定义一系列的算法,把每一个算法封装起来, 并且使它们可相互替换。本模式使得算法可独立于使用它的客户而变化 </span><br><span class="line">* </span><br><span class="line">*/</span>   </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">/** </span><br><span class="line">* 出行旅游 </span><br><span class="line">* </span><br><span class="line">*  </span><br><span class="line">*/</span>  </span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">TravelStrategy</span></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">travelAlgorithm</span><span class="params">()</span></span>;  </span><br><span class="line">&#125;   </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">/** </span><br><span class="line"> * 具体策略类(ConcreteStrategy)1：乘坐飞机 </span><br><span class="line"> */</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AirPlanelStrategy</span> <span class="keyword">implements</span> <span class="title">TravelStrategy</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">travelAlgorithm</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"travel by AirPlain"</span>, <span class="string">"&lt;BR&gt;\r\n"</span>;   </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;   </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">/** </span><br><span class="line"> * 具体策略类(ConcreteStrategy)2：乘坐火车 </span><br><span class="line"> */</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TrainStrategy</span> <span class="keyword">implements</span> <span class="title">TravelStrategy</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">travelAlgorithm</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"travel by Train"</span>, <span class="string">"&lt;BR&gt;\r\n"</span>;   </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;   </span><br><span class="line">  </span><br><span class="line"><span class="comment">/** </span><br><span class="line"> * 具体策略类(ConcreteStrategy)3：骑自行车 </span><br><span class="line"> */</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BicycleStrategy</span> <span class="keyword">implements</span> <span class="title">TravelStrategy</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">travelAlgorithm</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"travel by Bicycle"</span>, <span class="string">"&lt;BR&gt;\r\n"</span>;   </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;   </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">/** </span><br><span class="line"> *  </span><br><span class="line"> * 环境类(Context):用一个ConcreteStrategy对象来配置。维护一个对Strategy对象的引用。可定义一个接口来让Strategy访问它的数据。 </span><br><span class="line"> * 算法解决类，以提供客户选择使用何种解决方案： </span><br><span class="line"> */</span></span><br><span class="line">   </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PersonContext</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">private</span> $_strategy = <span class="keyword">null</span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(TravelStrategy $travel)</span></span>&#123;  </span><br><span class="line">        $this-&gt;_strategy = $travel;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">/** </span><br><span class="line">    * 旅行 </span><br><span class="line">    */</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setTravelStrategy</span><span class="params">(TravelStrategy $travel)</span></span>&#123;  </span><br><span class="line">        $this-&gt;_strategy = $travel;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">/** </span><br><span class="line">    * 旅行 </span><br><span class="line">    */</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">travel</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> $this-&gt;_strategy -&gt;travelAlgorithm();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;   </span><br><span class="line">  </span><br><span class="line"><span class="comment">// 乘坐火车旅行  </span></span><br><span class="line">$person = <span class="keyword">new</span> PersonContext(<span class="keyword">new</span> TrainStrategy());  </span><br><span class="line">$person-&gt;travel();  </span><br><span class="line">  </span><br><span class="line"><span class="comment">// 改骑自行车  </span></span><br><span class="line">$person-&gt;setTravelStrategy(<span class="keyword">new</span> BicycleStrategy());  </span><br><span class="line">$person-&gt;travel();  </span><br><span class="line">  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="控制反转(IOC)，依赖注入（DI）">控制反转(IOC)，依赖注入（DI）</h2><p>eg：<a href="https://my.oschina.net/cxz001/blog/533166" target="_blank" rel="external">谈谈PHP实现依赖注入(控制反转)</a></p>
<h1 id="数据对象映射模式（ORM）">数据对象映射模式（ORM）</h1><ul>
<li>数据对象映射模式，是将对象和数据存储映射起来，对一个对象的操作会映射为对数据存储的操作。</li>
<li>在代码中实现数据对象映射模式，我们将实现一个ORM类，将复杂的SQL语句映射成对象属性的操作。</li>
<li>结合使用数据对象映射模式，工厂模式，注册模式。</li>
</ul>
<h1 id="观察者模式">观察者模式</h1><ul>
<li>观察者模式（Observer），当一个对象状态发生改变时，依赖它的对象全部会收到通知，并自动更新。</li>
<li>场景：一个事件发生后，要执行一连串更新操作。传统的编程方法，就是在事件的代码之后直接加入处理逻辑。当更新的逻辑增多之后，代码会变得难以维护。这种方式是耦合的，侵入式的，增加新的逻辑需要修改事件主体的代码。</li>
<li>观察者模式实现了低耦合，非侵入式的通知与更新机制。</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 观察者模式</span><br><span class="line"> * <span class="doctag">@author</span>: Mac</span><br><span class="line"> * <span class="doctag">@date</span>: 2012/02/22</span><br><span class="line"> */</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Paper</span></span>&#123; </span><br><span class="line">	<span class="comment">/* 主题    */</span></span><br><span class="line">    <span class="keyword">private</span> $_observers = <span class="keyword">array</span>();</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span><span class="params">($sub)</span></span>&#123; <span class="comment">/*  注册观察者 */</span></span><br><span class="line">        $this-&gt;_observers[] = $sub;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">     </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">trigger</span><span class="params">()</span></span>&#123;  <span class="comment">/*  外部统一访问    */</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($this-&gt;_observers))&#123;</span><br><span class="line">            <span class="keyword">foreach</span>($this-&gt;_observers <span class="keyword">as</span> $observer)&#123;</span><br><span class="line">                $observer-&gt;update();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 观察者要实现的接口</span><br><span class="line"> */</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Observerable</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Subscriber</span> <span class="keyword">implements</span> <span class="title">Observerable</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Callback\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">下面是测试代码</span><br><span class="line"></span><br><span class="line"><span class="comment">/*  测试    */</span></span><br><span class="line">$paper = <span class="keyword">new</span> Paper();</span><br><span class="line">$paper-&gt;register(<span class="keyword">new</span> Subscriber());</span><br><span class="line"><span class="comment">//$paper-&gt;register(new Subscriber1());</span></span><br><span class="line"><span class="comment">//$paper-&gt;register(new Subscriber2());</span></span><br><span class="line">$paper-&gt;trigger();</span><br></pre></td></tr></table></figure>
<h1 id="原型模式">原型模式</h1><ul>
<li>与工厂模式作用类似，都是用来创建对象的。</li>
<li>与工厂模式的实现不同，原型模式是先创建好一个原型对象，然后通过clone原型对象来创建新的对象。这样就免去了类创建时重复的初始化操作。</li>
<li>原型模式适用于大对象的创建，创建一个大对象需要很大的开销，如果每次new就会消耗很大，原型模式仅需内存拷贝即可。</li>
</ul>
<h1 id="装饰器模式">装饰器模式</h1><ul>
<li>装饰器模式（Decorator），可以动态地添加修改类的功能。</li>
<li>一个类提供了一项功能，如果要在修改并增加额外的功能，传统的编程模式，需要写一个子类继承它，并重新实现类的方法。</li>
<li>使用装饰器模式，仅仅需在运行时添加一个装饰器对象即可实现，可以实现最大的灵活性。</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Beverage</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $_name;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Cost</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 被装饰者类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Coffee</span> <span class="keyword">extends</span> <span class="title">Beverage</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $this-&gt;_name = <span class="string">'Coffee'</span>;</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Cost</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1.00</span>;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 以下三个类是装饰者相关类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CondimentDecorator</span> <span class="keyword">extends</span> <span class="title">Beverage</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $this-&gt;_name = <span class="string">'Condiment'</span>;</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Cost</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0.1</span>;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Milk</span> <span class="keyword">extends</span> <span class="title">CondimentDecorator</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $_beverage;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($beverage)</span></span>&#123;</span><br><span class="line">        $this-&gt;_name = <span class="string">'Milk'</span>;</span><br><span class="line">        <span class="keyword">if</span>($beverage <span class="keyword">instanceof</span> Beverage)&#123;</span><br><span class="line">            $this-&gt;_beverage = $beverage;</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">'Failure'</span>);</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Cost</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $this-&gt;_beverage-&gt;Cost() + <span class="number">0.2</span>;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sugar</span> <span class="keyword">extends</span> <span class="title">CondimentDecorator</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $_beverage;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($beverage)</span></span>&#123;</span><br><span class="line">        $this-&gt;_name = <span class="string">'Sugar'</span>;</span><br><span class="line">        <span class="keyword">if</span>($beverage <span class="keyword">instanceof</span> Beverage)&#123;</span><br><span class="line">            $this-&gt;_beverage = $beverage;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">'Failure'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Cost</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $this-&gt;_beverage-&gt;Cost() + <span class="number">0.2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// Test Case</span></span><br><span class="line"><span class="comment">//1.拿杯咖啡</span></span><br><span class="line">$coffee = <span class="keyword">new</span> Coffee();</span><br><span class="line"> </span><br><span class="line"><span class="comment">//2.加点牛奶</span></span><br><span class="line">$coffee = <span class="keyword">new</span> Milk($coffee);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//3.加点糖</span></span><br><span class="line">$coffee = <span class="keyword">new</span> Sugar($coffee);</span><br><span class="line"> </span><br><span class="line">printf(<span class="string">"Coffee Total:%0.2f元\n"</span>,$coffee-&gt;Cost());</span><br></pre></td></tr></table></figure>
<h1 id="迭代器模式">迭代器模式</h1><ul>
<li>迭代器模式，在不需要了解内部实现的前提下，遍历一个聚合对象的内部元素。</li>
<li>相比于传统的编程模式，迭代器模式可以隐藏遍历元素的所需的操作。</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="comment">/** </span><br><span class="line"> * Created by PhpStorm. </span><br><span class="line"> * User: Jiang </span><br><span class="line"> * Date: 2015/6/8 </span><br><span class="line"> * Time: 21:31 </span><br><span class="line"> */</span>  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//抽象迭代器  </span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">IIterator</span>  </span><br><span class="line"></span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">First</span><span class="params">()</span></span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">Next</span><span class="params">()</span></span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">IsDone</span><span class="params">()</span></span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">CurrentItem</span><span class="params">()</span></span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//具体迭代器  </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteIterator</span> <span class="keyword">extends</span> <span class="title">IIterator</span>  </span><br><span class="line"></span>&#123;  </span><br><span class="line">    <span class="keyword">private</span> $aggre;  </span><br><span class="line">    <span class="keyword">private</span> $current = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(array $_aggre)</span>  </span><br><span class="line">    </span>&#123;  </span><br><span class="line">        $this-&gt;aggre = $_aggre;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">//返回第一个  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">First</span><span class="params">()</span>  </span><br><span class="line">    </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> $this-&gt;aggre[<span class="number">0</span>];  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//返回下一个  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">Next</span><span class="params">()</span>  </span><br><span class="line">    </span>&#123;  </span><br><span class="line">        $this-&gt;current++;  </span><br><span class="line">        <span class="keyword">if</span>($this-&gt;current&lt;count($this-&gt;aggre))  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">return</span> $this-&gt;aggre[$this-&gt;current];  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//返回是否IsDone  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">IsDone</span><span class="params">()</span>  </span><br><span class="line">    </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> $this-&gt;current&gt;=count($this-&gt;aggre)?<span class="keyword">true</span>:<span class="keyword">false</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//返回当前聚集对象  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">CurrentItem</span><span class="params">()</span>  </span><br><span class="line">    </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> $this-&gt;aggre[$this-&gt;current];  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//客户端调用</span></span><br><span class="line"></span><br><span class="line">header(<span class="string">"Content-Type:text/html;charset=utf-8"</span>);  </span><br><span class="line"><span class="comment">//--------------------------迭代器模式-------------------  </span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"./Iterator/Iterator.php"</span>;  </span><br><span class="line">$iterator= <span class="keyword">new</span> ConcreteIterator(<span class="keyword">array</span>(<span class="string">'周杰伦'</span>,<span class="string">'王菲'</span>,<span class="string">'周润发'</span>));  </span><br><span class="line">$item = $iterator-&gt;First();  </span><br><span class="line"><span class="keyword">echo</span> $item.<span class="string">"&lt;br/&gt;"</span>;  </span><br><span class="line"><span class="keyword">while</span>(!$iterator-&gt;IsDone())  </span><br><span class="line">&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&#123;$iterator-&gt;CurrentItem()&#125;：请买票！&lt;br/&gt;"</span>;  </span><br><span class="line">    $iterator-&gt;Next();  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="代理模式">代理模式</h1><ul>
<li><p>在客户端与实体之间建立一个代理对象（proxy），客户端对实体进行操作全部委派给代理对象，隐藏实体的具体实现细节。</p>
</li>
<li><p>Proxy还可以与业务代码分离，部署到另外的服务器，业务代码中通过RPC来委派任务。</p>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Printer</span> </span>&#123;   <span class="comment">//代理对象,一台打印机</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">printSth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      	 <span class="keyword">echo</span> <span class="string">'I can print &lt;br&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">                </span><br><span class="line">    <span class="comment">// some more function below</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line">             </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TextShop</span> </span>&#123;    <span class="comment">//这是一个文印处理店,只文印,卖纸,不照相</span></span><br><span class="line">	<span class="keyword">private</span> $printer;</span><br><span class="line">                </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(Printer $printer)</span> </span>&#123;</span><br><span class="line">         $this-&gt;printer = $printer;</span><br><span class="line">    &#125;</span><br><span class="line">                </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sellPaper</span><span class="params">()</span> </span>&#123;    <span class="comment">//卖纸</span></span><br><span class="line">          <span class="keyword">echo</span> <span class="string">'give you some paper &lt;br&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">                </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($method, $args)</span> </span>&#123;    <span class="comment">//将代理对象有的功能交给代理对象处理</span></span><br><span class="line">         <span class="keyword">if</span>(method_exists($this-&gt;printer, $method)) &#123;</span><br><span class="line">            $this-&gt;printer-&gt;$method($args);</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">             </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PhotoShop</span> </span>&#123;    <span class="comment">//这是一个照相店,只文印,拍照,不卖纸</span></span><br><span class="line">      <span class="keyword">private</span> $printer;</span><br><span class="line">                </span><br><span class="line">      <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(Printer $printer)</span> </span>&#123;</span><br><span class="line">           $this-&gt;printer = $printer;</span><br><span class="line">      &#125;</span><br><span class="line">                </span><br><span class="line">      <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">takePhotos</span><span class="params">()</span> </span>&#123;    <span class="comment">//照相</span></span><br><span class="line">           <span class="keyword">echo</span> <span class="string">'take photos for you &lt;br&gt;'</span>;</span><br><span class="line">      &#125;</span><br><span class="line">                </span><br><span class="line">      <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($method, $args)</span> </span>&#123;    <span class="comment">//将代理对象有的功能交给代理对象处理</span></span><br><span class="line">           <span class="keyword">if</span>(method_exists($this-&gt;printer, $method)) &#123;</span><br><span class="line">               $this-&gt;printer-&gt;$method($args);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line">            </span><br><span class="line">     $printer = <span class="keyword">new</span> Printer();</span><br><span class="line">     $textShop = <span class="keyword">new</span> TextShop($printer);</span><br><span class="line">     $photoShop = <span class="keyword">new</span> PhotoShop($printer);</span><br><span class="line">            </span><br><span class="line">     $textShop-&gt;printSth();</span><br><span class="line">     $photoShop-&gt;printSth();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="面向对象编程的基本原则">面向对象编程的基本原则</h1><ul>
<li>1.单一职责：一个类，只需要做好一件事情。</li>
<li>2.开放封闭：一个类，应该是可扩展的，而不可修改的。</li>
<li>3.依赖倒置：一个类，不应该强依赖另一个类，每个类对于另一个类都是可替换的。</li>
<li>4.配置化：尽可能地使用配置，而不是硬编码。</li>
<li>5.面向接口编程：只需要关心接口，不需要关心实现。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>PS：之前在和Mentor一起开发新项目时候，接触到了一些很经典的PHP设计模式和高级特性，通过项目沉淀和业余时间的学习，想对常用设计模式进行一个归纳，进行新知识的梳理，方便服务于未来更大型的后端项目，以及帮助更多的PHPer上路。</p>
</blockquote>]]>
    
    </summary>
    
      <category term="PHP" scheme="http://daijiale.github.io/tags/PHP/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【后端】HTTPS化]]></title>
    <link href="http://daijiale.github.io/2016/08/08/%E3%80%90%E5%90%8E%E7%AB%AF%E3%80%91https/"/>
    <id>http://daijiale.github.io/2016/08/08/【后端】https/</id>
    <published>2016-08-08T08:27:32.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>PS：Https学习，业务接口更换。</p>
</blockquote>
<a id="more"></a>
<h1 id="正文">正文</h1><h1 id="什么是HTTPS？">什么是HTTPS？</h1><p>HTTPS的诞生源于HTTP协议传输隐私数据的不安全，为了保证这些隐私数据能加密传输，于是，网景公司设计了SSL协议用于对HTTP协议传输的数据进行加密，从而诞生了HTTPS。SSL最后的一个版本是3.0，现在我们实际使用的HTTPS都是用的TLS协议，今后TLS将会继承SSL优良血统继续为我们进行加密服务。</p>
<h1 id="为什么要调整业务线为HTTPS">为什么要调整业务线为HTTPS</h1><p>答案是来源于用户对安全，隐私，可用性的需求。对于使用百度众产品的庞大用户群，我们的同事每天都需要处理很多用户反馈：</p>
<ul>
<li>页面出现白页or奇怪的东西。</li>
<li>返回了403的页面，但是webserver并不是我们的服务器。</li>
<li>搜索总是跳错误页/搜索什么都是 &ldquo;{wd}&rdquo;这个字段/想翻页却回到上一页</li>
<li>搜索url带了小尾巴,页面总要闪几次</li>
<li>页面弹窗广告</li>
<li><p>搜索个汽车就有人给我打电话推销4s店和保险什么的</p>
<p>各种千奇百怪的情况，查来查去，很大一部分原因是有运营商/劫持商在数据的传输过程中（WIFI热点、路由器、防火墙、反向代理、缓存服务器等）修改百度的页面内容，窃听用户的搜索内容。直到我厂顺利完成全站（baidu.com域名下所有链接和主要功能都是https，而不是只有登录，支付等环节https了）HTTPS的部署后，这一情况才得以好转。总体来说，HTTPS协议提供了三个强大的功能来对抗上述的劫持行为：</p>
</li>
<li><p>1.内容加密：浏览器到产品线服务器的内容都是以加密形式传输，中间者无法直接查看原始内容。</p>
</li>
<li>2.身份认证：保证用户访问的是产品线服务，即使被DNS劫持到了第三方站点，也会提醒用户没有访问对应产品线服务，有可能被劫持。</li>
<li>3.数据完整性：防止内容被第三方冒充或者篡改。</li>
</ul>
<h1 id="HTTPS原理">HTTPS原理</h1><p>加密算法一般分为两种，对称加密和非对称加密。所谓<strong>对称加密</strong>（也叫密钥加密）就是指加密和解密使用的是相同的密钥。而<strong>非对称加密（也叫公钥加密）</strong>就是指加密和解密使用了不同的密钥。</p>
<p>对称内容加密强度非常高，一般破解不了。但存在一个很大的问题就是无法安全地生成和保管密钥。假如客户端软件和服务器之间每次会话都使用固定的，相同的密钥加密和解密，肯定存在很大的安全隐患。如果有人从客户端端获取到了对称密钥，整个内容就不存在安全性了，而且管理海量的客户端密钥也是一件很复杂的事情。</p>
<p>非对称加密主要用于密钥交换（也叫密钥协商），能够很好地解决这个问题。浏览器和服务器每次新建会话时都使用非对称密钥交换算法协商出对称密钥，使用这些对称密钥完成应用数据的加解密和验证，整个会话过程中的密钥只在内存中生成和保存，而且每个会话的对称密钥都不相同（除非会话复用），中间者无法窃取。</p>
<p>非对称密钥交换很安全，但同时也是 HTTPS 性能和速度严重降低的“罪魁祸首”。想要知道 HTTPS 为什么影响速度，为什么消耗资源，就一定要理解非对称密钥交换的整个过程。</p>
<h2 id="对称内容加密">对称内容加密</h2><p>非对称密钥交换过程结束之后就得出了本次会话需要使用的对称密钥。对称加密又分为两种模式：流式加密和分组加密。流式加密现在常用的就是 RC4，不过 RC4 已经不再安全，微软也建议网站尽量不要使用 RC4 流式加密。</p>
<p>一种新的替代 RC4 的流式加密算法叫 ChaCha20，它是 google 推出的速度更快，更安全的加密算法。目前已经被 android 和 chrome 采用，也编译进了 google 的开源 openssl 分支 —boring ssl，并且nginx 1.7.4 也支持编译 boringssl。</p>
<p>分组加密以前常用的模式是 AES-CBC，但是 CBC 已经被证明容易遭受BEAST和LUCKY13 攻击。目前建议使用的分组加密模式是 AES-GCM，不过它的缺点是计算量大，性能和电量消耗都比较高，不适用于移动电话和平板电脑。</p>
<h2 id="非对称内容加密">非对称内容加密</h2><p>在非对称密钥交换算法出现以前，对称加密一个很大的问题就是不知道如何安全生成和保管密钥。非对称密钥交换过程主要就是为了解决这个问题，使得对称密钥的生成和使用更加安全。</p>
<p>密钥交换算法本身非常复杂，密钥交换过程涉及到随机数生成，模指数运算，空白补齐，加密，签名等操作。<br>常见的密钥交换算法有 RSA，ECDHE，DH，DHE 等算法。它们的特性如下：</p>
<p> RSA：算法实现简单，诞生于 1977 年，历史悠久，经过了长时间的破解测试，安全性高。缺点就是需要比较大的素数（目前常用的是 2048 位）来保证安全强度，很消耗 CPU 运算资源。RSA 是目前唯一一个既能用于密钥交换又能用于证书签名的算法。</p>
<p>DH：diffie-hellman 密钥交换算法，诞生时间比较早（1977 年），但是 1999 年才公开。缺点是比较消耗 CPU 性能。</p>
<p>ECDHE：使用椭圆曲线（ECC）的 DH 算法，优点是能用较小的素数（256 位）实现 RSA 相同的安全等级。缺点是算法实现复杂，用于密钥交换的历史不长，没有经过长时间的安全攻击测试。</p>
<p> ECDH：不支持 PFS，安全性低，同时无法实现 false start。</p>
<p> DHE：不支持 ECC。非常消耗 CPU 资源。</p>
<p>建议优先支持 RSA 和 ECDH_RSA 密钥交换算法。原因是：</p>
<ul>
<li>1，  ECDHE 支持 ECC 加速，计算速度更快。支持 PFS，更加安全。支持 false start，用户访问速度更快。</li>
<li>2，  目前还有至少 20% 以上的客户端不支持 ECDHE，我们推荐使用 RSA 而不是 DH 或者 DHE，因为 DH 系列算法非常消耗 CPU（相当于要做两次 RSA 计算）。</li>
</ul>
<p>需要注意通常所说的 ECDHE 密钥交换默认都是指 ECDHE_RSA，使用 ECDHE 生成 DH 算法所需的公私钥，然后使用 RSA 算法进行签名最后再计算得出对称密钥。<br>非对称加密相比对称加密更加安全，但也存在两个明显缺点：</p>
<ul>
<li>1，  CPU 计算资源消耗非常大。一次完全 TLS 握手，密钥交换时的非对称解密计算量占整个握手过程的 90% 以上。而对称加密的计算量只相当于非对称加密的 0.1%，如果应用层数据也使用非对称加解密，性能开销太大，无法承受。</li>
<li>2，  非对称加密算法对加密内容的长度有限制，不能超过公钥长度。比如现在常用的公钥长度是 2048 位，意味着待加密内容不能超过 256 个字节。<br>所以公钥加密目前只能用来作密钥交换或者内容签名，不适合用来做应用层传输内容的加解密。<br>非对称密钥交换算法是整个 HTTPS 得以安全的基石，充分理解非对称密钥交换算法是理解 HTTPS 协议和功能的关键。</li>
</ul>
<h2 id="身份认证">身份认证</h2><p>身份认证主要涉及到 PKI 和数字证书。通常来讲 PKI（公钥基础设施）包含如下部分：</p>
<ul>
<li>End entity：终端实体，可以是一个终端硬件或者网站。</li>
<li>CA：证书签发机构。</li>
<li>RA：证书注册及审核机构。比如审查申请网站或者公司的真实性。</li>
<li>CRL issuer：负责证书撤销列表的发布和维护。</li>
<li>Repository：负责数字证书及 CRL 内容存储和分发。</li>
<li>申请一个受信任的数字证书通常有如下流程：<ul>
<li>1.终端实体生成公私钥和证书请求。</li>
<li>2.RA 检查实体的合法性。如果个人或者小网站，这一步不是必须的。</li>
<li>3.CA 签发证书，发送给申请者。</li>
<li>4.证书更新到 repository，终端后续从 repository 更新证书，查询证书状态等。</li>
</ul>
</li>
</ul>
<p>数字证书有两个作用：</p>
<ul>
<li>1.身份授权。确保浏览器访问的网站是经过 CA 验证的可信任的网站。</li>
<li>2.分发公钥。每个数字证书都包含了注册者生成的公钥。在 SSL 握手时会通过 certif icate 消息传输给客户端。比如前文提到的 RSA 证书公钥加密及 ECDHE 的签名都是使用的这个公钥。</li>
</ul>
<p>申请者拿到 CA 的证书并部署在网站服务器端，那浏览器发起握手接收到证书后，如何确认这个证书就是 CA 签发的呢？怎样避免第三方伪造这个证书？</p>
<p>答案就是数字签名（digital signature）。数字签名是证书的防伪标签，目前使用最广泛的 SHA-RSA 数字签名的制作和验证过程如下：</p>
<ul>
<li>1.数字签名的签发。首先是使用哈希函数对待签名内容进行安全哈希，生成消息摘要，然后使用 CA 自己的私钥对消息摘要进行加密。</li>
<li>2.数字签名的校验。使用 CA 的公钥解密签名，然后使用相同的签名函数对待签名证书内容进行签名并和服务端数字签名里的签名内容进行比较，如果相同就认为校验成功。</li>
</ul>
<h1 id="HTTPS使用成本">HTTPS使用成本</h1><p>   证书费用以及更新维护。大家觉得申请证书很麻烦，证书也很贵，可是证书其实一点都不贵，便宜的一年几十块钱，最多也就几百。而且现在也有了免费的证书机构，比如著名的 mozilla 发起的免费证书项目：<a href="https://letsencrypt.org/" target="_blank" rel="external">Let’s encrypt</a>就支持免费证书安装和自动更新。这个项目将于今年中旬投入正式使用。</p>
<p>数字证书的费用其实也不高，对于中小网站可以使用便宜甚至免费的数字证书服务（可能存在安全隐患），像著名的 verisign 公司的证书一般也就几千到几万块一年不等。当然如果公司对证书的需求比较大，定制性要求高，可以建立自己的 CA 站点，比如 google，能够随意签发 google 相关证书。</p>
<p>HTTPS 降低用户访问速度。HTTPS 对速度会有一定程度的降低，但是只要经过合理优化和部署，HTTPS 对速度的影响完全可以接受。在很多场景下，HTTPS 速度完全不逊于 HTTP，如果使用 SPDY，HTTPS 的速度甚至还要比 HTTP 快。</p>
<p>大家现在使用百度 HTTPS 安全搜索，有感觉到慢吗？</p>
<p>HTTPS 消耗 CPU 资源，需要增加大量机器。前面介绍过非对称密钥交换，这是消耗 CPU 计算资源的大户，此外，对称加解密，也需要 CPU 的计算。</p>
<p>同样地，只要合理优化，HTTPS 的机器成本也不会明显增加。对于中小网站，完全不需要增加机器也能满足性能需求。</p>
<h1 id="参考文献">参考文献</h1><ul>
<li><a href="http://wiki.baidu.com/pages/viewpage.action?pageId=112554133" target="_blank" rel="external">HTTPS构建大型网站</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>PS：Https学习，业务接口更换。</p>
</blockquote>]]>
    
    </summary>
    
      <category term="HTTPS" scheme="http://daijiale.github.io/tags/HTTPS/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Redis】Redis入门]]></title>
    <link href="http://daijiale.github.io/2016/08/01/%E3%80%90Redis%E3%80%91redis%E5%85%A5%E9%97%A8/"/>
    <id>http://daijiale.github.io/2016/08/01/【Redis】redis入门/</id>
    <published>2016-08-01T03:15:21.000Z</published>
    <updated>2016-11-23T03:44:39.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>PS：最近公司业务需要使用redis做部分数据的缓存，特此学习一下。</p>
</blockquote>
<a id="more"></a>
<h1 id="概述">概述</h1><p>Redis是一个开源，先进的key-value存储，并用于构建高性能，可扩展的Web应用程序的完美解决方案。</p>
<p>Redis从它的许多竞争继承来的三个主要特点：</p>
<ul>
<li>Redis数据库完全在内存中，使用磁盘仅用于持久性。</li>
<li>性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。</li>
<li>相比许多键值数据存储，Redis拥有一套较为丰富的数据类型，因为值（value）可以是 字符串(String), 哈希(Map), 列表(list), 集合(sets) 和 有序集合(sorted sets)等类型。</li>
<li>Redis可以将数据复制到任意数量的从服务器，即master-slave模式的数据备份。</li>
</ul>
<h1 id="Redis安装">Redis安装</h1><h2 id="Ubuntu下：">Ubuntu下：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install redis-server</span><br></pre></td></tr></table></figure>
<h2 id="两种方式测试redis是否启动成功，选择任意一种即可">两种方式测试redis是否启动成功，选择任意一种即可</h2><h3 id="（1）检测6379端口是否在监听">（1）检测6379端口是否在监听</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntp | grep 6379</span><br></pre></td></tr></table></figure>
<h3 id="（2）检测后台进程是否存在">（2）检测后台进程是否存在</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep redis</span><br></pre></td></tr></table></figure>
<h2 id="启动Redis:">启动Redis:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server</span><br></pre></td></tr></table></figure>
<h2 id="通过新进程测试redis是否启动：">通过新进程测试redis是否启动：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br></pre></td></tr></table></figure>
<p>127.0.0.1 是本机 IP ，6379 是 redis 服务端口。</p>
<h2 id="现在我们输入_PING_命令来测试一下：">现在我们输入 PING 命令来测试一下：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis 127.0.0.1:6379&gt;ping</span><br><span class="line">PONG</span><br></pre></td></tr></table></figure>
<h1 id="Redis数据类型">Redis数据类型</h1><p>Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。</p>
<p><a href="http://www.redis.net.cn/tutorial/3505.html" target="_blank" rel="external">使用方法</a></p>
<h1 id="Redis命令">Redis命令</h1><p><a href="http://www.redis.net.cn/tutorial/3506.html" target="_blank" rel="external">使用方法</a></p>
<h1 id="Redis事务">Redis事务</h1><p><a href="http://www.redis.net.cn/tutorial/3515.html" target="_blank" rel="external">使用方法</a></p>
<h1 id="Redis_数据备份与恢复">Redis 数据备份与恢复</h1><p><a href="http://www.redis.net.cn/tutorial/3519.html" target="_blank" rel="external">使用方法</a></p>
<h1 id="Redis_PHP扩展">Redis PHP扩展</h1><p><a href="http://www.redis.net.cn/tutorial/3526.html" target="_blank" rel="external">Demo</a></p>
<h1 id="参考文档">参考文档</h1><ul>
<li><a href="http://www.cnblogs.com/w58480513/p/4226176.html?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="external">redis脚本实例讲解</a></li>
<li><a href="https://github.com/ukko/phpredis-phpdoc" target="_blank" rel="external">redis_php库</a></li>
<li><a href="http://www.redis.net.cn/tutorial/3501.html" target="_blank" rel="external">redis中文网</a></li>
<li><a href="https://yq.aliyun.com/articles/61759?spm=5176.100239.blogcont55729.12.JviAMl" target="_blank" rel="external">redis mongoDB阿里云上的部署</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>PS：最近公司业务需要使用redis做部分数据的缓存，特此学习一下。</p>
</blockquote>]]>
    
    </summary>
    
      <category term="数据库" scheme="http://daijiale.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="Redis" scheme="http://daijiale.github.io/tags/Redis/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【SQL】复杂条件查询]]></title>
    <link href="http://daijiale.github.io/2016/07/29/%E3%80%90SQL%E3%80%91SQL%E5%A4%8D%E6%9D%82%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/"/>
    <id>http://daijiale.github.io/2016/07/29/【SQL】SQL复杂条件查询/</id>
    <published>2016-07-29T03:24:32.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>PS：SQL进行复杂条件运算，连表，内连，交集，并集等。</p>
</blockquote>
<a id="more"></a>
<h1 id="正文">正文</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//设置查询区间为一天</span></span><br><span class="line">$unix_end_time = $unix_start_time+<span class="number">86400</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询当天下单并且已购买的用户</span></span><br><span class="line">$condition1 = <span class="string">"SELECT mobile,total_amount FROM $this-&gt;_order_table  WHERE create_time &gt; $unix_start_time AND create_time &lt;=$unix_end_time AND status = 4"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询当天下单并且未购买的用户</span></span><br><span class="line">$condition2 = <span class="string">"SELECT mobile,pid,total_amount FROM $this-&gt;_order_table  WHERE create_time &gt; $unix_start_time AND create_time &lt;=$unix_end_time AND status != 4 "</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">//取当天下单并且已购买和当天下单未购买的用户交集,得到同一手机号重复下单用户</span></span><br><span class="line">$condition3 = <span class="string">"SELECT table2.mobile FROM ($condition1) AS table1 INNER JOIN ($condition2)AS table2 ON table1.mobile = table2.mobile"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//取$condition2 和 $condition3 的差集,得到下单未购买的发券精准用户,并取所下单金额的最大值</span></span><br><span class="line">$condition = <span class="string">"SELECT table3.mobile,pid,MAX(table3.total_amount) FROM ($condition2) AS table3 WHERE table3.mobile NOT IN ($condition3) GROUP BY table3.mobile"</span>;</span><br><span class="line"></span><br><span class="line">$result = $this-&gt;_db-&gt;query($condition);</span><br></pre></td></tr></table></figure>
<h1 id="参考文献">参考文献</h1><ul>
<li><p><a href="http://www.phpstudy.net/e/sql/" target="_blank" rel="external">w3cSchool_SQL</a></p>
</li>
<li><p><a href="http://www.cnblogs.com/zerocc/archive/2011/08/31/2161383.html" target="_blank" rel="external">实例SQL 简单，复杂查询，基本函数查询</a></p>
</li>
<li><p><a href="http://blog.csdn.net/woshisap/article/details/7348676/" target="_blank" rel="external">SQL多表连接查询与集合的并、交、差运算查询</a></p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>PS：SQL进行复杂条件运算，连表，内连，交集，并集等。</p>
</blockquote>]]>
    
    </summary>
    
      <category term="SQL" scheme="http://daijiale.github.io/tags/SQL/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【开发工具】敏捷开发Scrum极其应用工具]]></title>
    <link href="http://daijiale.github.io/2016/06/08/%E3%80%90%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E3%80%91%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91Scrum%E6%9E%81%E5%85%B6%E5%BA%94%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    <id>http://daijiale.github.io/2016/06/08/【开发工具】敏捷开发Scrum极其应用工具/</id>
    <published>2016-06-08T13:34:01.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>PS：记录之前BIT学院培训后的积累，梳理了敏捷开发之Scrum的知识，并且推荐一些对于初创团队低成本高可用的团队协作工具。</p>
</blockquote>
<a id="more"></a>
<h1 id="Scrum？">Scrum？</h1><p>Scrum的英文意思是橄榄球运动的一个专业术语，表示“争球”的动作；把一个开发流程的名字取名为Scrum，我想你一定能想象出你的开发团队在开发一个项目时，大家像打橄榄球一样迅速、富有战斗激情、人人你争我抢地完成它，你一定会感到非常兴奋的。</p>
<p>它是一种开发方法，也就是一种软件开发的流程，它会指导我们用规定的环节去一步一步完成项目的开发；而这种开发方式的主要驱动核心是人；它采用的是迭代式开发。</p>
<h1 id="Sprint？">Sprint？</h1><p>Sprint是短距离赛跑的意思，这里面指的是一次迭代，而一次迭代的周期是1个月时间（即4个星期），也就是我们要把一次迭代的开发内容以最快的速度完成它，这个过程我们称它为Sprint。</p>
<h1 id="3Roles">3Roles</h1><h2 id="产品负责人（Product_Owner）">产品负责人（Product Owner）</h2><p>主要负责确定产品的功能和达到要求的标准，指定软件的发布日期和交付的内容，同时有权力接受或拒绝开发团队的工作成果。</p>
<h2 id="流程管理员（Scrum_Master）">流程管理员（Scrum Master）</h2><p>主要负责整个Scrum流程在项目中的顺利实施和进行，以及清除挡在客户和开发工作之间的沟通障碍，使得客户可以直接驱动开发。</p>
<h2 id="开发团队（Scrum_Team）">开发团队（Scrum Team）</h2><p>主要负责软件产品在Scrum规定流程下进行开发工作，人数控制在5~10人左右，每个成员可能负责不同的技术方面，但要求每成员必须要有很强的自我管理能力，同时具有一定的表达能力；成员可以采用任何工作方式，只要能达到Sprint的目标。</p>
<h1 id="4Meetings">4Meetings</h1><h2 id="Sprint_Planning">Sprint Planning</h2><h3 id="目标">目标</h3><ul>
<li>关键里程碑</li>
<li>确定产品发布周期</li>
<li>确定Sprint周期</li>
</ul>
<h3 id="步骤">步骤</h3><ul>
<li>PO讲解需求 </li>
<li>估算Story相对工作量</li>
<li>评估优先级</li>
<li>确定迭代Backlog</li>
</ul>
<h2 id="Daily_Scrum">Daily Scrum</h2><h3 id="每日例会：对Sprint进行检查和调整。">每日例会：对Sprint进行检查和调整。</h3><ul>
<li>每天15分钟的状态汇报会议。</li>
<li>每天在同一个时间同一个地点。</li>
<li>每人三个问题：<ul>
<li>上次会议之后做了什么。</li>
<li>下次会议之前要做什么。</li>
<li>有什么困难？</li>
</ul>
</li>
<li>团队更新Sprint Backlog和Sprint燃尽图。</li>
<li>对所有人开放，但是只有PO可以说话。</li>
</ul>
<h2 id="Showcase">Showcase</h2><h3 id="Sprint_评审会议：对产品的检查和调整。">Sprint 评审会议：对产品的检查和调整。</h3><ul>
<li>团队演示完成的工作和未完成的工作。</li>
<li>从产品负责人和干系人那里得到反馈。</li>
<li>更新产品Backlog和发布燃尽图。</li>
</ul>
<h2 id="Retro">Retro</h2><h3 id="Sprint_回顾会议：对流程的检查和调整。">Sprint 回顾会议：对流程的检查和调整。</h3><ul>
<li>团队对过去一个Sprint中的人、关系、流程和工具做检查。</li>
<li>团队确定可能的改进并对这些改进在下一个Sprint的度量标准达成共识。</li>
</ul>
<h1 id="3Tools">3Tools</h1><h2 id="Product_Backlog">Product Backlog</h2><p>产品功能需求列表：</p>
<ul>
<li>演进的，排序的，预估的。</li>
<li>越高优先级越详细。</li>
<li>产品负责人来维护，但是任何人都可以贡献想法。</li>
<li>每个产品一个列表。</li>
</ul>
<h2 id="Sprint_Backlog">Sprint Backlog</h2><p>能够把product backlog变成可用产品功能的任务。</p>
<ul>
<li>由团队创建并在sprint中维护。</li>
<li>每个人都可以添加、删除、改变Sprint Backlog。</li>
<li>团队成员自发认领任务，而没有人指派。</li>
<li>任务用小时估计，通常是1-16小时。</li>
<li>每天估计剩余工作量。</li>
</ul>
<h2 id="Burndown_Charts">Burndown Charts</h2><p>Sprint燃尽图：显示Sprint中的剩余工作量。</p>
<ul>
<li>以小时计算。</li>
<li>每日更新</li>
</ul>
<h1 id="Scrum_Start">Scrum Start</h1><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/ScrumModel.jpg" alt=""></p>
<ul>
<li><p>1、我们首先需要确定一个Product Backlog（按优先顺序排列的一个产品需求列表），这个是由Product Owner 负责的；</p>
</li>
<li><p>2、Scrum Team根据Product Backlog列表，做工作量的预估和安排；</p>
</li>
<li><p>3、有了Product Backlog列表，我们需要通过 Sprint Planning Meeting（Sprint计划会议） 来从中挑选出一个Story作为本次迭代完成的目标，这个目标的时间周期是1~4个星期，然后把这个Story进行细化，形成一个Sprint Backlog；</p>
</li>
<li><p>4、Sprint Backlog是由Scrum Team去完成的，每个成员根据Sprint Backlog再细化成更小的任务（细到每个任务的工作量在2天内能完成）；</p>
</li>
<li><p>5、在Scrum Team完成计划会议上选出的Sprint Backlog过程中，需要进行 Daily Scrum Meeting（每日站立会议），每次会议控制在15分钟左右，每个人都必须发言，并且要向所有成员当面汇报你昨天完成了什么，并且向所有成员承诺你今天要完成什么，同时遇到不能解决的问题也可以提出，每个人回答完成后，要走到黑板前更新自己的 Sprint burn down（Sprint燃尽图）；</p>
</li>
<li><p>6、做到每日集成，也就是每天都要有一个可以成功编译、并且可以演示的版本；很多人可能还没有用过自动化的每日集成，其实TFS就有这个功能，它可以支持每次有成员进行签入操作的时候，在服务器上自动获取最新版本，然后在服务器中编译，如果通过则马上再执行单元测试代码，如果也全部通过，则将该版本发布，这时一次正式的签入操作才保存到TFS中，中间有任何失败，都会用邮件通知项目管理人员；</p>
</li>
<li><p>7、当一个Story完成，也就是Sprint Backlog被完成，也就表示一次Sprint完成，这时，我们要进行 Srpint Review Meeting（演示会议），也称为评审会议，产品负责人和客户都要参加（最好本公司老板也参加），每一个Scrum Team的成员都要向他们演示自己完成的软件产品（这个会议非常重要，一定不能取消）；</p>
</li>
<li><p>8、最后就是 Sprint Retrospective Meeting（回顾会议），也称为总结会议，以轮流发言方式进行，每个人都要发言，总结并讨论改进的地方，放入下一轮Sprint的产品需求中；</p>
</li>
</ul>
<h1 id="Scrum场景图">Scrum场景图</h1><h2 id="任务卡片">任务卡片</h2><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/%E4%BB%BB%E5%8A%A1%E5%8D%A1%E7%89%87.png" alt=""></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/%E4%BB%BB%E5%8A%A1%E5%8D%A1%E7%89%872.png" alt=""><br>eg:Product Backlog示例。</p>
<h2 id="每日站会">每日站会</h2><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/%E6%AF%8F%E6%97%A5%E7%AB%99%E4%BC%9A.png" alt=""></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/%E7%AB%99%E4%BC%9A:%E8%AF%84%E5%AE%A1%E4%BC%9A.png" alt=""><br>eg:参会人员可以随意姿势站立，任务看板要保证让每个人看到，当每个人发言完后，要走到任务版前更新自己的燃尽图.</p>
<h2 id="任务看板">任务看板</h2><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/%E4%BB%BB%E5%8A%A1%E7%9C%8B%E6%9D%BF.png" alt=""></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/%E4%BB%BB%E5%8A%A1%E7%9C%8B%E6%9D%BF2.png" alt=""><br>eg:任务看版包含 未完成、正在做、已完成 的工作状态，假设你今天把一个未完成的工作已经完成，那么你要把小卡片从未完成区域贴到已完成区域。</p>
<h2 id="计划纸牌">计划纸牌</h2><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/%E8%AE%A1%E5%88%92%E7%BA%B8%E7%89%8C.png" alt=""><br>eg：它的作用是项目在开发过程中，让成员被能人所领导。怎么用的呢？比如A程序员开发一个功能，需要5个小时，B程序员认为只需要半小时，那他们各自取相应的牌，藏在手中，最后摊牌，如果时间差距很大，那么A和B就可以讨论A为什么要5个小时…</p>
<h2 id="燃尽图">燃尽图</h2><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/%E7%87%83%E5%B0%BD%E5%9B%BE.png" alt=""><br>eg: 任务看版包含 未完成、正在做、已完成 的工作状态，假设你今天把一个未完成的工作已经完成，那么你要把小卡片从未完成区域贴到已完成区域。</p>
<h1 id="Intro_Some_Economic_and_Effective_Cases_And_Tools">Intro Some Economic and Effective Cases And Tools</h1><h2 id="In_Baidu">In Baidu</h2><ul>
<li>icafe：Scrum推动工具</li>
<li>Agile：持续集成工具</li>
<li>iCode：版本控制工具</li>
<li>Cooder：代码评审工具</li>
<li>BaiduWiki：Wiki/周报工具</li>
<li>BaiduHi：IM工具</li>
</ul>
<h2 id="For_More_Entrepreneurial_Teams_Like_Fundin">For More Entrepreneurial Teams Like <a href="http://www.fundin.cn" target="_blank" rel="external">Fundin</a></h2><p>如果追求分布式开展工作模块：</p>
<ul>
<li><a href="https://worktile.com/blog/pro/agile-management?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" target="_blank" rel="external">Worktile</a>/<a href="https://easypm.cn/team/2281/filter/-280" target="_blank" rel="external">EasyPM</a>：Scrum推动工具</li>
<li><a href="https://travis-ci.org/" target="_blank" rel="external">TravisCI</a>：持续集成工具</li>
<li><a href="">Coding</a>/<a href="https://github.com/" target="_blank" rel="external">Github</a>：版本控制工具</li>
<li><a href="https://reviewable.io/" target="_blank" rel="external">Reviewable</a>：代码评审工具</li>
<li><a href="https://tower.im/" target="_blank" rel="external">Tower</a>：Wiki/周报工具</li>
<li><a href="https://slack.com/" target="_blank" rel="external">Slack</a>：IM工具</li>
</ul>
<p>如果追求集中式开展工作模块：<a href="http://git.oschina.net/" target="_blank" rel="external">码云</a></p>
<h1 id="参考文献">参考文献</h1><ul>
<li><a href="http://blog.csdn.net/orclight/article/details/8642585" target="_blank" rel="external">瀑布/迭代/敏捷模型对比</a></li>
<li><a href="http://www.cnblogs.com/taven/archive/2010/10/17/1853386.html" target="_blank" rel="external">Scrum扫盲篇</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>PS：记录之前BIT学院培训后的积累，梳理了敏捷开发之Scrum的知识，并且推荐一些对于初创团队低成本高可用的团队协作工具。</p>
</blockquote>]]>
    
    </summary>
    
      <category term="敏捷开发" scheme="http://daijiale.github.io/tags/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【OCR/机器学习/搜索引擎】基于 Tesseract的图文识别搜索引擎]]></title>
    <link href="http://daijiale.github.io/2016/06/01/%E3%80%90OCR_%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%91%E5%9F%BA%E4%BA%8E%20Tesseract%E7%9A%84%E5%AD%97%E4%BD%93%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
    <id>http://daijiale.github.io/2016/06/01/【OCR_机器学习】基于 Tesseract的字体搜索引擎/</id>
    <published>2016-06-01T11:37:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="一、前言：">一、前言：</h1><p>这是一篇图像识别OCR技术、机器学习、以及简易搜索引擎构建相关的技术Blog，是自己在做毕设的同时，每天不断记录研究成果和心得的地方。</p>
<a id="more"></a>
<h1 id="二、选题背景">二、选题背景</h1><p>OCR（Optical Character Recognition 光学字符识别）技术，是指电子设备（例如扫描仪或数码相机）检查纸上打印的字符，通过检测暗、亮的模式确定其形状，然后用字符识别方法将形状翻译成计算机文字的过程。 </p>
<p>Tesseract的OCR引擎最先由HP实验室于1985年开始研发，至1995年时已经成为OCR业内最准确的三款识别引擎之一。然而，HP不久便决定放弃OCR业务，Tesseract也从此尘封。<br>数年以后，HP意识到，与其将Tesseract束之高阁，不如贡献给开源软件业，让其重焕新生－－2005年，Tesseract由美国内华达州信息技术研究所获得，并求诸于Google对Tesseract进行改进、消除Bug、优化工作。 Tesseract目前已作为开源项目发布在Google Project，其最新版本3.0已经支持中文OCR。</p>
<p>在这样成熟的技术背景下，我很想利用这项OCR技术，再结合当下热门的移动互联网的开发技术和信息检索技术，实现一个能将图片中文字成功识别的移动Web搜索引擎，旨在为更多朋友能更加快捷、准确地从图片中获取想要的信息。</p>
<h1 id="三、需求分析">三、需求分析</h1><p>随着互联网的快速发展，大数据的到来，人们对数据和信息依赖程度越来越大。然而，如今的互联网数据十分庞大，数据的准确性，和数据的合理分类一直存在着很大的问题，针对如此现状，越来越多的人们期望在日常工作、生活中能找到更加便捷获取准确数据的方式，能更加具有效率地找到自己所求信息的方式。同时，如今随着智能手机的普及，越来越多的人们更习惯于用拍照这样一种效率极高的方式，代替以前的抄写，打字方式，去记录生活、工作上需要记录的数据。<br>由此启发，想利用当下比较成熟的OCR（光学字符识别）技术，以及结合当下热门的互联网的开发技术和信息检索技术，实现一个能将图片语言字体成功识别的Web搜索引擎，旨在为更多朋友能通过拍照、截图这样便捷的方式，更加快捷、准确地从图片中搜索、获取到想要的信息。</p>
<h1 id="四、用例设计">四、用例设计</h1><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/case1.png" alt=""></p>
<h1 id="五、应用领域">五、应用领域</h1><ul>
<li>海报信息云检索</li>
<li>广告图信息云检索</li>
<li>云翻译</li>
<li>名片云检索</li>
</ul>
<h1 id="六、架构设计">六、架构设计</h1><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/ocr-search%E6%9E%B6%E6%9E%84%E5%9B%BE.png" alt=""></p>
<h1 id="七、技术点分析">七、技术点分析</h1><h1 id="八、工程实现">八、工程实现</h1><h2 id="后端工程实现">后端工程实现</h2><h3 id="简介">简介</h3><p>后端的架构，主要分为三大模块：OCR模块、搜索引擎模块、PHP消息中间件模块。</p>
<ul>
<li>OCR模块：<ul>
<li>Tesseract在Mac下的搭建部署<ul>
<li>字体语言样本数据训练</li>
</ul>
</li>
</ul>
</li>
<li>搜索引擎模块：<ul>
<li>Nutch模块部署配置</li>
<li>Solr模块部署配置 </li>
</ul>
</li>
<li>PHP消息中间件模块：又分为三大消息模块<ul>
<li>Tesseract-OCR-PHP中间件</li>
<li>PHP图片传输中间件</li>
<li>PHP云检索中间件</li>
</ul>
</li>
</ul>
<h3 id="开源库">开源库</h3><ul>
<li>使用<a href="http://daijiale.github.io/2016/03/08/%E3%80%90PHP%E3%80%91%20Composer%E5%85%A5%E9%97%A8%E5%AE%9E%E8%B7%B5/">Composer</a> 依赖；<ul>
<li><a href="http://silex.sensiolabs.org/doc/intro.html" target="_blank" rel="external">Silex framework </a>;</li>
<li><a href="https://github.com/thiagoalessio/tesseract-ocr-for-php" target="_blank" rel="external">thiagoalessio</a>;</li>
</ul>
</li>
<li><a href="http://nutch.apache.org/downloads.html" target="_blank" rel="external">Nutch1.10+Solr4.10.4</a>;</li>
</ul>
<h3 id="第一个模块：OCR模块">第一个模块：OCR模块</h3><h4 id="Tesseract在Mac下的搭建部署">Tesseract在Mac下的搭建部署</h4><h5 id="1-先翻墙">1.先翻墙</h5><h5 id="2-打开Mac_OS的终端，键入">2.打开Mac OS的终端，键入</h5><pre><code><span class="comment"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install tesseract</span><br></pre></td></tr></table></figure></span>
</code></pre><h5 id="3-如果未同意Xcode协议许可，需要先键入协议许可，同意。">3.如果未同意Xcode协议许可，需要先键入协议许可，同意。</h5><pre><code><span class="comment"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo xcodebuild -license</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">agree</span><br></pre></td></tr></table></figure></span>
</code></pre><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/%E6%AF%95%E8%AE%BEtesseract%E5%AE%89%E8%A3%85.png" alt=""></p>
<h5 id="4-继续使用Homebrew安装">4.继续使用Homebrew安装</h5><pre><code><span class="comment"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install tesseract</span><br></pre></td></tr></table></figure></span>
</code></pre><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/%E6%AF%95%E8%AE%BEtesseract%E5%AE%89%E8%A3%852.png" alt=""></p>
<h5 id="5-安装成功后，进行测试，看Tesseract能否在Mac_OS上正常运行,如下图所示。">5.安装成功后，进行测试，看Tesseract能否在Mac OS上正常运行,如下图所示。</h5><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/%E6%AF%95%E8%AE%BEtesseract%E5%AE%89%E8%A3%853.png" alt=""></p>
<h5 id="6-这里解释下Tesseract终端下的用法：">6.这里解释下Tesseract终端下的用法：</h5><pre><code><span class="comment"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">	Usage:tesseract imagename outputbase [-l lang] [-psm pagesegmode] [configfile...]</span><br><span class="line">pagesegmode values are:</span><br><span class="line">0 = Orientation and script detection (OSD) only.</span><br><span class="line">1 = Automatic page segmentation with OSD.</span><br><span class="line">2 = Automatic page segmentation, but no OSD, or OCR</span><br><span class="line">3 = Fully automatic page segmentation, but no OSD. (Default)</span><br><span class="line">4 = Assume a single column of text of variable sizes.</span><br><span class="line">5 = Assume a single uniform block of vertically aligned text.</span><br><span class="line">6 = Assume a single uniform block of text.</span><br><span class="line">7 = Treat the image as a single text line.</span><br><span class="line">8 = Treat the image as a single word.</span><br><span class="line">9 = Treat the image as a single word in a circle.</span><br><span class="line">10 = Treat the image as a single character.</span><br><span class="line">-l lang and/or -psm pagesegmode must occur before anyconfigfile.</span><br></pre></td></tr></table></figure></span>
</code></pre><ul>
<li><p>其中：    </p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tesseract imagename outputbase [-l lang] [-psm pagesegmode] [configfile...]</span><br></pre></td></tr></table></figure>
<p> 表示 <code>tesseract    图片名  输出文件名 -l 字库文件 -psm pagesegmode 配置文件</code>。</p>
</li>
<li><p>例如：<code>tesseract code.jpg result  -l chi_sim -psm 7 nobatch</code></p>
<ul>
<li><code>-l chi_sim</code> 表示用简体中文字库（需要下载中文字库文件，解压后，存放到<code>tessdata</code>目录下去,字库文件扩展名为 <code>.raineddata</code>简体中文字库文件名为:  <code>chi_sim.traineddata</code>）。</li>
<li><code>-psm 7</code>表示告诉tesseract <code>code.jpg</code>图片是一行文本  这个参数可以减少识别错误率.  默认为 <code>3</code>。</li>
<li>configfile 参数值为tessdata\configs 和  tessdata\tessconfigs 目录下的文件名。</li>
</ul>
</li>
</ul>
<h5 id="7-现在我们来使用测试一下，如下图">7.现在我们来使用测试一下，如下图</h5><p><strong>英文字体测试：</strong><br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/%E6%AF%95%E8%AE%BEtess%E5%AE%89%E8%A3%854.png" alt=""></p>
<p><strong>中文字体测试：</strong><br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/%E6%AF%95%E8%AE%BEocr-php-test.png" alt=""></p>
<h4 id="字体语言样本数据训练">字体语言样本数据训练</h4><p>现在我们来建立字体语言库以及字体语言样本数据的训练</p>
<h5 id="字体库建立的官方原版说明：">字体库建立的官方原版说明：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">**font_properties (new in 3.01)**</span><br><span class="line"></span><br><span class="line">A new requirement for training in 3.01 is a font_properties file. The purpose of this file is to provide font style information that will appear in the output when the font is recognized. The font_properties file is a text file specified by the -F filename option to mftraining.</span><br><span class="line"></span><br><span class="line">Each line of the font_properties file is formatted as follows:</span><br><span class="line"></span><br><span class="line">&lt;fontname&gt; &lt;italic&gt; &lt;bold&gt; &lt;fixed&gt; &lt;serif&gt; &lt;fraktur&gt;</span><br><span class="line">where &lt;fontname&gt; is a string naming the font (no spaces allowed!), and &lt;italic&gt;, &lt;bold&gt;, &lt;fixed&gt;, &lt;serif&gt; and &lt;fraktur&gt; are all simple 0 or 1 flags indicating whether the font has the named property.</span><br><span class="line"></span><br><span class="line">When running mftraining, each .tr filename must match an entry in the font_properties file, or mftraining will abort. At some point, possibly before the release of 3.01, this matching requirement is likely to shift to the font name in the .tr file itself. The name of the .tr file may be either fontname.tr or [lang].[fontname].exp[num].tr.</span><br><span class="line"></span><br><span class="line">**Example:**</span><br><span class="line"></span><br><span class="line">font_properties file:</span><br><span class="line"></span><br><span class="line">timesitalic 1 0 0 1 0</span><br><span class="line">shapeclustering -F font_properties -U unicharset eng.timesitalic.exp0.tr</span><br><span class="line">mftraining -F font_properties -U unicharset -O eng.unicharset eng.timesitalic.exp0.tr </span><br><span class="line">Note that in 3.03, there is a default font_properties file, that covers 3000 fonts (not necessarily accurately) in training/langdata/font_properties.</span><br><span class="line"></span><br><span class="line">**Clustering**</span><br><span class="line"></span><br><span class="line">When the character features of all the training pages have been extracted, we need to cluster them to create the prototypes.</span><br><span class="line"></span><br><span class="line">The character shape features can be clustered using the shapeclustering, mftraining and cntraining programs:</span><br><span class="line"></span><br><span class="line">**shapeclustering (new in 3.02)**</span><br><span class="line"></span><br><span class="line">shapeclustering should not be used except for the Indic languages.</span><br><span class="line"></span><br><span class="line">shapeclustering -F font_properties -U unicharset lang.fontname.exp0.tr lang.fontname.exp1.tr ...</span><br><span class="line">shapeclustering creates a master shape table by shape clustering and writes it to a file named shapetable.</span><br><span class="line"></span><br><span class="line">**mftraining**</span><br><span class="line"></span><br><span class="line">mftraining -F font_properties -U unicharset -O lang.unicharset lang.fontname.exp0.tr lang.fontname.exp1.tr ...</span><br><span class="line">The -U file is the unicharset generated by unicharset_extractor above, and lang.unicharset is the output unicharset that will be given to combine_tessdata.</span><br><span class="line"></span><br><span class="line">mftraining will output two other data files: inttemp (the shape prototypes) and pffmtable (the number of expected features for each character). In versions 3.00/3.01, a third file called Microfeat is also written by this program, but it is not used. Later versions don&apos;t produce this file.</span><br><span class="line"></span><br><span class="line">NOTE: mftraining will produce a shapetable file if you didn&apos;t run shapeclustering. You must include this shapetable in your traineddata file, whether or not shapeclustering was used.</span><br><span class="line"></span><br><span class="line">**cntraining**</span><br><span class="line"></span><br><span class="line">cntraining lang.fontname.exp0.tr lang.fontname.exp1.tr ...</span><br><span class="line">This will output the normproto data file (the character normalization sensitivity prototypes).</span><br></pre></td></tr></table></figure>
<h5 id="如何进行机器学习，训练自定义新数据：">如何进行机器学习，训练自定义新数据：</h5><ul>
<li><a href="https://github.com/tesseract-ocr/tesseract/wiki/TrainingTesseract" target="_blank" rel="external">官方wiki</a></li>
</ul>
<ul>
<li><a href="http://wangjunle23.blog.163.com/blog/static/117838171201323031458171/" target="_blank" rel="external">中文指导</a></li>
</ul>
<h5 id="实践过程：">实践过程：</h5><ul>
<li>首先可以从Tesseract官方Github上下载官方的语言包进行参考：<a href="https://github.com/tesseract-ocr/tessdata" target="_blank" rel="external">传送门</a></li>
</ul>
<h3 id="第二个模块：搜索引擎模块">第二个模块：搜索引擎模块</h3><h4 id="Nutch模块部署配置">Nutch模块部署配置</h4><h5 id="安装配置开发包">安装配置开发包</h5><p>Mac下，用Spotlight开启Terminal</p>
<h6 id="JDK安装部署">JDK安装部署</h6><ul>
<li>介绍：这个就不解释了。</li>
<li>版本选用：1.8.0_77</li>
<li>下载地址：<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="external">JD下载官网</a></li>
<li>启动安装：我记得Mac版的java安装包有dmg，直接双击安装，图形界面操作即可。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure>
<p>这时按下键盘上字母i进入编辑模式，在终端下方输入以下两行命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_77</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure>
<p>然后按esc结束编辑，再输入:wq!退出</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure>
<p>出现 java版本信息 则证明安装成功！</p>
<h6 id="Ant安装部署">Ant安装部署</h6><ul>
<li><p>介绍：当一个代码项目大了以后，每次重新编译，打包，测试等都会变得非常复杂而且重复，因此c语言中有make脚本来帮助这些工作的批量完成。在Java 中应用是平台无关性的，当然不会用平台相关的make脚本来完成这些批处理任务了，ANT本身就是这样一个流程脚本引擎，用于自动化调用程序完成项目的编译，打包，测试等。除了基于JAVA是平台无关的外，脚本的格式是基于XML的，比make脚本来说还要好维护一些。</p>
</li>
<li><p>版本选用：apache-ant-1.9.6-bin.zip</p>
</li>
<li>下载地址：<a href="http://ant.apache.org/bindownload.cgi" target="_blank" rel="external">Ant官网</a></li>
<li>启动安装：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo sh</span><br><span class="line">cd /usr/local/</span><br><span class="line">chown YourUserName:staff apache-ant-1.9.6</span><br><span class="line">ln -s apache-ant-1.9.6 ant</span><br><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure>
<p>这时按下键盘上字母i进入编辑模式，在终端下方输入以下两行命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export ANT_HOME=/usr/local/ant</span><br><span class="line">export PATH=$&#123;PATH&#125;:$&#123;ANT_HOME&#125;/bin</span><br></pre></td></tr></table></figure>
<p>然后按esc结束编辑，再输入:wq!退出</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br><span class="line">ant -version</span><br></pre></td></tr></table></figure>
<p>出现 Apache Ant(TM) version 1.9.6 compiled on … 这个显示则证明安装成功！</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/ocrsearchAntForMac.png" alt=""></p>
<h6 id="Nutch安装部署">Nutch安装部署</h6><ul>
<li><p>介绍：目前Nutch分为两个大版本1.x和2.x，Apache分别对这两个大版本进行独立开发和维护。其中，1.x和2.x最大的不同点在于，1.x是基于hadoop的HDFS文件系统的，而2.x将数据的存储层抽象出来，可以将数据保存在Hbase、MySQL等数据库中。还有一点很重要，Nutch在1.2以及之前，都是作为一个完整的搜索引擎进行发布的，而从1.3开始，Nutch本身就主要只有爬虫功能，若需要对抓取的数据建立索引并进行搜索，还要用到Solr全文检索服务器。由于Nutch和Solr都是基于Lucene开发的，因此Nutch抓取的数据可以轻松地在Solr中建立索引。Nutch官网可以下载到编译好的1.x包，但2.x只提供源码，需要自己编译。Nutch使用Ant来构建的，若自己编译的话，需要安装Ant来编译源码。对于如何选择Nutch的版本，主要考虑一下以下问题：如果只需要抓取少量的网站，并对其建立索引，使用1.x和2.x都可以，甚至都可以使用单机的，而不需分布式。但如果要抓取大量网站，甚至是全网爬行，那么最好选择1.x，并且采用分布式，因为1.x是基于hadoop文件系统的，而hadoop又是专门为处理大数据而生。若抓取大量网站时采用2.x，可能会遇到一些性能问题，要是使用MySQL来存储数据，网页数据上百亿时，性能将是一个噩梦。Nutch1.x不同的版本变化也比较大，执行命令发生过较大改变，因此，建议初学者下载本教程对应的版本1.10，等到熟悉使用Nutch的时候，那些改变对你而言就没太大影响了。Nutch作为当今最流行的开源爬虫之一，已被企业广泛使用。Nutch的插件机制使得开发者可以灵活地定制网页抓取策略。Nutch有着悠久的历史，当今大名鼎鼎的Hadoop就是由Nutch发展而来。Nutch不仅可以运行在单机模式下，还可以运行在分布式模式下。Nutch仅支持在Linux环境下工作，因此，在类Linux的OS X下可以直接使用。</p>
</li>
<li><p>版本选用：apache-nutch-1.10-src.zip</p>
</li>
<li>下载地址：<a href="http://archive.apache.org/dist/nutch/" target="_blank" rel="external">Nutch官网</a></li>
<li>启动安装：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">unzip apache-nutch-1.10-src.zip</span><br><span class="line">cd apache-nutch-1.10</span><br><span class="line">vi conf/nutch-default.xml</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>找到http.agent.name这个属性，将其拷贝到conf/nutch-site.xml中，并修改value值不能为空，这里自定义为为：  <value>HD nutch agent</value>，不然后续抓取命令会报错，修改后的nutch-site.xml如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">  &lt;name&gt;http.agent.name&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;myNutch&lt;/value&gt;</span><br><span class="line">      &lt;description&gt;HTTP &apos;User-Agent&apos; request header. MUST NOT be empty -</span><br><span class="line">        please set this to a single word uniquely related to your organization.</span><br><span class="line">  NOTE: You should also check other related properties:</span><br><span class="line">    http.robots.agents</span><br><span class="line">        http.agent.description</span><br><span class="line">            http.agent.url</span><br><span class="line">                http.agent.email</span><br><span class="line">                    http.agent.version</span><br><span class="line">  and set their values appropriately.</span><br><span class="line">  &lt;/description&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
<p><code>http.agent.name</code>这个属性是用于标记爬虫的，便于被爬的网站对其进行识别。</p>
<p><code>nutch-site.xml</code>中配置的属性会覆盖<code>nutch-default</code>中的默认属性，在这里我们仅修改<code>http.agent.name</code>这个属性，其它的不作改变。</p>
<p>到此，我们就配置好Nutch了，接着，在Nutch的主目录使用以下命令对源码进行编译。</p>
<h5 id="启动服务">启动服务</h5><h6 id="Ant_编译_Nutch源码">Ant 编译 Nutch源码</h6><p>切换到Nutch主目录下执行：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ant</span><br></pre></td></tr></table></figure>
<p>首次编译过程会耗费较多时间，因为需要下载较多的依赖包，具体时间根据实际网络情况而定，快的话需要5-10分钟，慢的话需要20分钟以上。</p>
<p>编译开始时会报如下警告：</p>
<p>Could not load definitions from resource org/sonar/ant/antlib.xml. It could not be found.</p>
<p>这个警告不影响编译结果，因此可以忽略。</p>
<p>编译过程中也有可能因为网络问题而出现编译失败，只需要使用如下命令清除上次编译结果（不会删除已经下载好的依赖包）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ant clean</span><br></pre></td></tr></table></figure>
<p>在网络较差的情况下，可能会重复上面两步操作多次。</p>
<p>当出现如下类似信息时，也就意味着编译成功了：</p>
<p>BUILD SUCCESSFUL</p>
<p>Total time: 1 minute 7 seconds</p>
<p>如下图所示：</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/ocrsearchnutch%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E6%88%90%E5%8A%9F.png" alt=""></p>
<p>Nutch编译成功之后，会在主目录下生成一个runtime文件夹。其中包含deploy和local两个子文件夹。deploy用于分布式抓取，而local用于本地单机抓取。本节内容先讲解使用本地单机抓取，分布式抓取放到后续教程。</p>
<p>进入local文件夹，再进入bin文件夹。这里包含两个脚本文件，一个是nutch，另一个是crawl。其中，nutch包含了所需的全部命令，而crawl主要用于一站式抓取。</p>
<p>如下图所示：<br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/ocrsearchnutch_runtime.png" alt=""></p>
<h4 id="Solr模块部署配置">Solr模块部署配置</h4><ul>
<li>介绍：<a href="http://www.blogjava.net/RongHao/archive/2007/11/06/158621.html" target="_blank" rel="external">Solr</a>是一款优秀的基于Lucene的全文检索服务器，它对<a href="http://www.cnblogs.com/xing901022/p/3933675.html" target="_blank" rel="external">Lucene</a>进行了扩展，提供了非常丰富的查询语言，并对查询进行了性能优化。</li>
<li>版本选用：solr-4.10.4.zip</li>
<li>下载地址：<a href="http://archive.apache.org/dist/lucene/solr/" target="_blank" rel="external">Solr官网</a></li>
<li>启动安装：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip solr-4.10.4.zip</span><br></pre></td></tr></table></figure>
<p>得到文件夹solr-4.10.4，将Nutch目录下的runtime/local/conf/schema-solr4.xml拷贝到solr的配置文件目录example/solr/collection1/conf下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp apache-nutch-1.10/runtime/local/conf/schema-solr4.xml solr-4.10.4/example/solr/collection1/conf</span><br></pre></td></tr></table></figure>
<p>删除solr原schema.xml文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm –f solr-4.10.4/example/solr/collection1/conf/schema.xml</span><br></pre></td></tr></table></figure>
<p>并注释掉schema-solr4.xml中的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;copyField source=&quot;latLon&quot; dest=&quot;location&quot;/&gt;</span><br></pre></td></tr></table></figure></p>
<p>将schema-solr4.xml改名为schema.xml：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv solr-4.10.4/example/solr/collection1/conf/ schema-solr4.xml solr-4.10.4/example/solr/collection1/conf/ schema.xml</span><br></pre></td></tr></table></figure>
<p>到此，Solr就配置完毕了，进入solr-4.10.4/example目录：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd solr-4.10.4/example</span><br></pre></td></tr></table></figure>
<p>启动Solr：</p>
<figure class="highlight"><figcaption><span>–jar start.jar</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">此时就可以通过浏览器访问8983端口，查看Solr的控制界面：</span><br><span class="line"></span><br><span class="line">http://localhost:8983/solr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 利用Nutch爬虫进行数据抓取、Solr进行数据检索</span><br><span class="line"></span><br><span class="line">#####  一站式抓取</span><br><span class="line"></span><br><span class="line">进入Nutch的主目录，今后我们大部分执行命令的操作都是在Nutch主目录完成的，而不是在Nutch的bin目录里，因为这样可以更方便地执行一些复杂的命令。查看一站式抓取命令：</span><br></pre></td></tr></table></figure>
<p>bin/crawl<br>bin/nutch<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">输入以上两个命令显示了它们各自的使用方法，后面会详细讲解一部分常用的命令，如下图所示：</span><br><span class="line">![](http://7xi6qz.com1.z0.glb.clouddn.com/ocrsearchcrawl%E5%92%8Cnutch%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查看crawl的使用方法：</span><br><span class="line">&gt;-i|index用于告知nutch将抓取的结果添加到配置的索引器中。</span><br><span class="line"></span><br><span class="line">&gt;-D用于配置传递给Nutch调用的参数，我们可以将索引器配置到这里。</span><br><span class="line"></span><br><span class="line">&gt;Seed Dir种子文件目录，用于存放种子URL，即爬虫初始抓取的URL。</span><br><span class="line"></span><br><span class="line">&gt;Crawl Dir抓取数据的存放路径。</span><br><span class="line"></span><br><span class="line">&gt;Num Rounds循环抓取次数。</span><br><span class="line"></span><br><span class="line">使用示例：</span><br><span class="line"></span><br><span class="line">&gt;进入Nutch的runtime/local目录，新建一个urls文件夹：</span><br><span class="line"></span><br><span class="line">&gt;在urls文件夹中新建一个存放url的种子文件,seed.txt</span><br><span class="line"></span><br><span class="line">&gt;向urls/seed.txt添加初始抓取的URL：http://www.163.com</span><br><span class="line"></span><br><span class="line">&gt;开启Solr服务，否则不能正常在Solr中建立索引</span><br></pre></td></tr></table></figure></p>
<p>bin/crawl -i -D solr.server.url=<a href="http://localhost:8983/solr/" target="_blank" rel="external">http://localhost:8983/solr/</a> urls/ TestCrawl/  2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&gt;这条命令中，-i告知爬虫将抓取的内容添加到给定的索引中，solr.server.url=http://localhost:8983/solr/是Solr索引器的地址，urls/为种子URL文件路径，TestCrawl为Nutch用于存储抓取数据的文件夹（包含URL、抓取的内容等数据），这里的参数2表示循环抓取两次。</span><br><span class="line"></span><br><span class="line">&gt;通过执行上面一条命令，就可以开始抓取网页了。在浏览器中输入http://&lt;host&gt;:8983/solr，选择collection1，就可以在里面通过关键字搜索到已经建立索引的内容。这里需要注意的是，爬虫并没有将指定URL的全部页面抓取下来，查看抓取情况的具体方法请参考下面的分布式抓取。</span><br><span class="line"></span><br><span class="line">抓取成功后如下图所示：</span><br><span class="line"></span><br><span class="line">![](http://7xi6qz.com1.z0.glb.clouddn.com/ocrsearchnutch%E4%B8%80%E7%AB%99%E5%BC%8F%E6%8A%93%E5%8F%96%E6%88%90%E5%8A%9F.png)</span><br><span class="line"></span><br><span class="line">##### 分布式抓取</span><br><span class="line">有的时候，一站式抓取并不能很好的满足我们的需求，因此，这里给大家介绍一下分布式抓取的方法：分布式抓取的实际抓取过程包含多个命令的，为了简化操作，crawl把多个命令组合到一起提供给用户使用的。如果要深入学习Nutch爬虫技术，仅仅会使用crawl命令是不够的，还需要对抓取的过程非常熟悉，这里需要用到上一教程中seed.txt所保存的URL信息，还需删除data/crawldb，data/linkdb和data/segments文件夹下的内容，因为我们要分步重新抓取数据。</span><br><span class="line"></span><br><span class="line">###### Nutch数据文件夹组成</span><br><span class="line">执行crawl命令之后，会在Nutch的runtime/local下面生成一个TestCrawl文件夹，里面包含三个文件夹：crawldb、linkdb和segments。</span><br><span class="line"></span><br><span class="line">crawldb：它包含Nutch所发现的所有URL，它包含了URL是否被抓取、何时被抓取的信息。</span><br><span class="line"></span><br><span class="line">linkdb：它包含了Nutch所发现的crawldb中的URL所对应的全部链接，以及源URL和锚文本。</span><br><span class="line"></span><br><span class="line">segments：里面包含多个以时间命名的segment文件夹，每个segment就是一个抓取单元，包含一系列的URL，每个segment又包含如下文件夹：</span><br><span class="line"></span><br><span class="line">    crawl_generate：待抓取的URL</span><br><span class="line"></span><br><span class="line">    crawl_fetch：每个URL的抓取状态</span><br><span class="line"></span><br><span class="line">    content：从每个URL抓取到的原始内容</span><br><span class="line"></span><br><span class="line">    parse_text：从每个URL解析得到的文本</span><br><span class="line"></span><br><span class="line">    parse_data：从每个URL解析得到的外链和元数据</span><br><span class="line"></span><br><span class="line">    crawl_parse：包含外链URL，用来更新crawldb</span><br><span class="line">    </span><br><span class="line">###### 将URL列表注入到crawldb中</span><br></pre></td></tr></table></figure></p>
<p>bin/nutch inject data/crawldb urls<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###### 生成抓取列表</span><br><span class="line"></span><br><span class="line">为了抓取指定URL的页面，我们需要先从数据库（crawldb）里生成一个抓取列表：</span><br></pre></td></tr></table></figure></p>
<p>bin/nutch generate data/crawldb data/segments<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">generate命令执行之后，会生成一个待抓取页面的列表，抓取列表存放在一个新建的segment路径中。segment的文件夹根据创建的时间进行命名（本教程文件夹名为201507151245）。</span><br><span class="line"></span><br><span class="line">generate还有很多可选参数，读者可以通过以下命令自行查看（其它命令的查看方法也一样）：</span><br></pre></td></tr></table></figure></p>
<p>bin/nutch generate<br>`</p>
<h6 id="启动抓取">启动抓取</h6><p>根据generate生成的抓取列表抓取网页：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/nutch fetch data/segments/201507151245  #这里的201507151245为文件夹名，需要根据自己的情况进行更改，或者直接采用data/segments文件夹，这样的操作对segments文件夹下的所有子文件夹生效，后文同理。</span><br></pre></td></tr></table></figure></p>
<h6 id="解析">解析</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/nutch parse data/segments/201507151245</span><br></pre></td></tr></table></figure>
<h6 id="更新数据库">更新数据库</h6><p>根据抓取的结果更新数据库：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/nutch updated data/crawldb –dir data/segments/201507151245</span><br></pre></td></tr></table></figure>
<p>现在，数据库里包含所有初始页面更新后的入口，以及从初始集合中新发现的页面的新入口。</p>
<h6 id="反转链接">反转链接</h6><p>在建立索引之前，我们首先对所有的链接进行反转，这样我们才可以对页面的来源锚文本进行索引。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/nutch invertlinks data/linkdb –dir data/segments/201507151245</span><br></pre></td></tr></table></figure></p>
<h6 id="将抓取到的数据加入Solr索引">将抓取到的数据加入Solr索引</h6><p>启动Solr服务，现在，我们对抓取到的资源建立索引：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/nutch index data/crawldb -linkdb data/linkdb -params solr.server.url=http://localhost:8983/solr -dir data/segments/201507151245</span><br></pre></td></tr></table></figure></p>
<h6 id="去除重复URL">去除重复URL</h6><p>一旦建立了全文索引，它必须处理重复的URL，使得URL是唯一的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/nutch dedup</span><br></pre></td></tr></table></figure></p>
<p>这个命令基于签名查找重复的URL，对重复的URL标记为STATUS_DB_DUPLICATE，Cleaning和Indexing任务将会根据标记删除它们。</p>
<h6 id="清理">清理</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/nutch clean –D solr.server.url=http://192.168.1.11:8983/solr data/crawldb</span><br></pre></td></tr></table></figure>
<p>从solr移除HTTP301、404以及重复的文档。</p>
<p>到此为止，我们使用分步抓取的方式完成了所有抓取步骤，正常抓取的情况下，可以在<a href="http://localhost:8983/solr进行搜索了" target="_blank" rel="external">http://localhost:8983/solr进行搜索了</a></p>
<h5 id="抓取结果分析">抓取结果分析</h5><h6 id="readdb">readdb</h6><p>用于读取或者导出Nutch的抓取数据库，通常用于查看数据库的状态信息，查看readdb的用法：<br><figure class="highlight plain"><figcaption><span>readdb</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Usage: CrawlDbReader &lt;crawldb&gt; (-stats | -dump &lt;out_dir&gt; | -topN &lt;nnnn&gt; &lt;out_dir&gt; [&lt;min&gt;] | -url &lt;url&gt;)</span><br><span class="line">&lt;crawldb&gt;directory name where crawldb is located</span><br><span class="line">-stats [-sort] print overall statistics to System.out</span><br><span class="line">[-sort]list status sorted by host</span><br><span class="line">-dump &lt;out_dir&gt; [-format normal|csv|crawldb]dump the whole db to a text file in &lt;out_dir&gt;</span><br><span class="line">[-format csv]dump in Csv format</span><br><span class="line">[-format normal]dump in standard format (default option)</span><br><span class="line">[-format crawldb]dump as CrawlDB</span><br><span class="line">[-regex &lt;expr&gt;]filter records with expression</span><br><span class="line">[-retry &lt;num&gt;]minimum retry count</span><br><span class="line">[-status &lt;status&gt;]filter records by CrawlDatum status</span><br><span class="line">-url &lt;url&gt;print information on &lt;url&gt; to System.out</span><br><span class="line">-topN &lt;nnnn&gt; &lt;out_dir&gt; [&lt;min&gt;]dump top &lt;nnnn&gt; urls sorted by score to &lt;out_dir&gt;</span><br><span class="line">[&lt;min&gt;]skip records with scores below this value.</span><br><span class="line">This can significantly improve performance.</span><br></pre></td></tr></table></figure></p>
<p>这里的crawldb即为保存URL信息的数据库，-stats表示查看统计状态信息，-dump表示导出统计信息，url表示查看指定URL的信息，查看数据库状态信息：</p>
<figure class="highlight plain"><figcaption><span>readdb TestCrawl/crawldb -stats</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">得到的统计结果如下：</span><br></pre></td></tr></table></figure>
<p>MacBook-Pro:local root# bin/nutch readdb TestCrawl/crawldb -stats<br>CrawlDb statistics start: TestCrawl/crawldb<br>Statistics for CrawlDb: TestCrawl/crawldb<br>TOTAL urls:    290<br>retry 0:    290<br>min score:    0.0<br>avg score:    0.017355172<br>max score:    1.929<br>status 1 (db_unfetched):    270<br>status 2 (db_fetched):    17<br>status 3 (db_gone):    2<br>status 4 (db_redir_temp):    1<br>CrawlDb statistics: done<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">TOTAL urls表示URL总数，retry表示重试次数，mins score为最低分数，max score为最高分数，status 1 (db_unfetched)为未抓取的数目，status 2 (db_fetched)为已抓取的数目。</span><br><span class="line"></span><br><span class="line">###### readlinkdb</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">readlinkdb用于导出全部URL和锚文本，查看用法：</span><br></pre></td></tr></table></figure></p>
<p>bin/nutch readlinkdb<br>Usage: LinkDbReader <linkdb> (-dump <out_dir> [-regex <regex>]) | -url <url><br>-dump <out_dir>dump whole link db to a text file in <out_dir><br>-regex <regex>restrict to url’s matching expression<br>-url <url>print information about <url> to System.out<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这里的dump和url参数与readdb命令同理，导出数据：</span><br></pre></td></tr></table></figure></url></url></regex></out_dir></out_dir></url></regex></out_dir></linkdb></p>
<p>bin/nutch readlinkdb data/linkdb -dump linkdb_dump<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将数据导入到linkdb_dump这个文件夹中，查看导出的数据信息：</span><br></pre></td></tr></table></figure></p>
<p>cat linkdb_dump /*<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">可以看到，导出的信息类似以下格式：</span><br><span class="line">```http://archive.apache.org/dist/nutch/	Inlinks:</span><br><span class="line">fromUrl: http://www.sanesee.com/article/step-by-step-nutch-introduction anchor: http://archive.apache.org/dist/nutch/</span><br></pre></td></tr></table></figure></p>
<p>即记录了来源URL。</p>
<h6 id="readseg">readseg</h6><p>readseg用于查看或导出segment里面的数据，查看使用方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">bin/nutch readseg</span><br><span class="line">Usage: SegmentReader (-dump ... | -list ... | -get ...) [general options]</span><br><span class="line">* General options:</span><br><span class="line">-nocontentignore content directory</span><br><span class="line">-nofetchignore crawl_fetch directory</span><br><span class="line">-nogenerateignore crawl_generate directory</span><br><span class="line">-noparseignore crawl_parse directory</span><br><span class="line">-noparsedataignore parse_data directory</span><br><span class="line">-noparsetextignore parse_text directory</span><br><span class="line">* SegmentReader -dump &lt;segment_dir&gt; &lt;output&gt; [general options]</span><br><span class="line">  Dumps content of a &lt;segment_dir&gt; as a text file to &lt;output&gt;.</span><br><span class="line">&lt;segment_dir&gt;name of the segment directory.</span><br><span class="line">&lt;output&gt;name of the (non-existent) output directory.</span><br><span class="line">* SegmentReader -list (&lt;segment_dir1&gt; ... | -dir &lt;segments&gt;) [general options]</span><br><span class="line">  List a synopsis of segments in specified directories, or all segments in</span><br><span class="line">  a directory &lt;segments&gt;, and print it on System.out</span><br><span class="line">&lt;segment_dir1&gt; ...list of segment directories to process</span><br><span class="line">-dir &lt;segments&gt;directory that contains multiple segments</span><br><span class="line">* SegmentReader -get &lt;segment_dir&gt; &lt;keyValue&gt; [general options]</span><br><span class="line">  Get a specified record from a segment, and print it on System.out.</span><br><span class="line">&lt;segment_dir&gt;name of the segment directory.</span><br><span class="line">&lt;keyValue&gt;value of the key (url).</span><br><span class="line">Note: put double-quotes around strings with spaces.</span><br></pre></td></tr></table></figure></p>
<p>导出segment数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/nutch readseg -dump data/segments/20150715124521 segment_dump</span><br></pre></td></tr></table></figure></p>
<p>将数据导入到segment_dump这个文件夹中，查看导出的数据信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat segment_dump /*</span><br></pre></td></tr></table></figure></p>
<p>可以看到，里面包含非常具体的网页信息。</p>
<h3 id="第三个模块：PHP消息中间件模块">第三个模块：PHP消息中间件模块</h3><h4 id="Tesseract-OCR-PHP中间件的实现">Tesseract-OCR-PHP中间件的实现</h4><h5 id="1-_配置PHP和服务器环境">1. 配置PHP和服务器环境</h5><p>可以使用WAMP/MAMP，也可以用PHPStorm和其内置服务器。</p>
<h5 id="2-使用Composer进行PHP源工程的构建">2.使用Composer进行PHP源工程的构建</h5><p>具体操作可以参考：<a href="http://daijiale.github.io/2016/03/08/%E3%80%90PHP%E3%80%91%20Composer%E5%85%A5%E9%97%A8%E5%AE%9E%E8%B7%B5/">传送门</a></p>
<p>打开终端，切换到你的工程路径下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require silex/silex twig/twig thiagoalessio/tesseract_ocr:dev-master</span><br></pre></td></tr></table></figure>
<p>因为使用了PHP的微型框架<code>Silex Framework</code>，我们需要自己建立PHP源工程项目MVC（public，uploads，views）结构，如图所示：</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/%E6%AF%95%E8%AE%BEocr-php.png" alt=""></p>
<ul>
<li><strong>public:</strong>存放PHP脚本</li>
<li><strong>uploads：</strong>存放用户上传图片</li>
<li><strong>vendor：</strong>所有composer依赖包</li>
<li><strong>views：</strong>前端代码</li>
</ul>
<h5 id="3-用Sliex库建立PHP消息中间件">3.用Sliex库建立PHP消息中间件</h5><h6 id="启动初始化">启动初始化</h6><ul>
<li>public/index.php</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">//如果是在WAMP等其他集成环境下，需要重新获取环境变量的PATH，不然无法调用Tesseract</span></span><br><span class="line"></span><br><span class="line">$path = getenv(<span class="string">'PATH'</span>);</span><br><span class="line">putenv(<span class="string">"PATH=$path:/usr/local/bin"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="keyword">__DIR__</span>.<span class="string">'/../vendor/autoload.php'</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">HttpFoundation</span>\<span class="title">Request</span>; </span><br><span class="line"></span><br><span class="line">$app = <span class="keyword">new</span> Silex\Application(); </span><br><span class="line"></span><br><span class="line">$app-&gt;register(<span class="keyword">new</span> Silex\Provider\TwigServiceProvider(), [</span><br><span class="line">  <span class="string">'twig.path'</span> =&gt; <span class="keyword">__DIR__</span>.<span class="string">'/../views'</span>,</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line">$app[<span class="string">'debug'</span>] = <span class="keyword">true</span>; </span><br><span class="line"></span><br><span class="line">$app-&gt;get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> <span class="title">use</span> <span class="params">($app)</span> </span>&#123; </span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> $app[<span class="string">'twig'</span>]-&gt;render(<span class="string">'index.twig'</span>);</span><br><span class="line"></span><br><span class="line">&#125;); </span><br><span class="line"></span><br><span class="line">$app-&gt;post(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span><span class="params">(Request $request)</span> <span class="title">use</span> <span class="params">($app)</span> </span>&#123; </span><br><span class="line"></span><br><span class="line">    <span class="comment">//TODP</span></span><br><span class="line">    </span><br><span class="line">&#125;); </span><br><span class="line"></span><br><span class="line">$app-&gt;run();</span><br></pre></td></tr></table></figure>
<h6 id="文件上传并唯一标识存放">文件上传并唯一标识存放</h6><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Grab the uploaded file</span></span><br><span class="line">$file = $request-&gt;files-&gt;get(<span class="string">'upload'</span>); </span><br><span class="line"></span><br><span class="line"><span class="comment">// Extract some information about the uploaded file</span></span><br><span class="line">$info = <span class="keyword">new</span> SplFileInfo($file-&gt;getClientOriginalName());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 产生随机文件名来减少文件名冲突</span></span><br><span class="line">$filename = sprintf(<span class="string">'%d.%s'</span>, time(), $info-&gt;getExtension());</span><br><span class="line"></span><br><span class="line"><span class="comment">// Copy the file</span></span><br><span class="line">$file-&gt;move(<span class="keyword">__DIR__</span>.<span class="string">'/../uploads'</span>, $filename);</span><br></pre></td></tr></table></figure>
<h6 id="Tesseract-OCR接口类以及调用方法">Tesseract-OCR接口类以及调用方法</h6><h4 id="Solr-PHP中间件的实现">Solr-PHP中间件的实现</h4><h2 id="前端工程实现、测试">前端工程实现、测试</h2><h3 id="交互设计">交互设计</h3><p><strong>交互流程：</strong></p>
<p>1）用户输入主页网站URL，进入首页，享受服务，了解服务详情。</p>
<p>2）用户通过搜索框，上传所需要的搜索图片，并进行上传前的预览。</p>
<p>3）用户确认上传的图片无误后，点击图搜按钮，进行图片上传和识别操作，因为这部分Server端计算量比较大，返回结果需要等待2-5秒钟，所以给用户呈现一个Loading页。</p>
<p>4）图像识别完成，Loading页消失，进入识别结果预览确认页面。</p>
<p>5）用户确认识别内容后，可以点击搜索，进入搜索引擎模块，获取检索结果。</p>
<h3 id="视觉设计">视觉设计</h3><p>视觉设计在产品组成中占了极为重要的成分，它直接影响了使用者对于该产品最初的观感、使用时的体验以及最后留下的印象等等。甚至在许多时候，产品的成败与否，往往就取决于成功的视觉设计经验上。<br>针对这个毕设，我并没有把它当成一个可以应付了事的系统，而是当成一个自己的产品去悉心创作，因此，我很注重这个系统的前端视觉设计，和用户体验。<br>全站选色，我选用了大众比较认可的百度搜索引擎主题色，红色和蓝色，首页背景采用红蓝过渡色，并调整了透明度，通过CSS代码画出，节约加载耗时的同时也给予用户一个良好的视觉冲击，同时对首页的文字说明，增加了底部阴影，并采用微软细黑字体，让视觉感觉更有层次感，图片搜索框以及预览框，也是加重了阴影，对预览字段的重要程度进行了不同的颜色和色度区分。让用户视觉上清爽，简洁，能最快找到自己视觉所需信息，之后会经过一个简单的loading页面，这里做了一个等待的圆圈渐变放大缩小动效，让用户对等待时间不感觉到烦躁，同时告诉用户，系统后台正在进行计算运行，当跳转到识别结果页面时候，依然按照文案重要程度，对所有文字颜色和字号进行了视觉调整，让用户不用花费太多时间，筛选重要信息，两个按钮的排班和选色也更倾向于增加点击欲望和点击感，提示用户可以进行下一步操作。最后的检索结果页面，我将它设计成了类似一本书目的篇章，每个列表根据搜索结果网页标题、网页摘要、收录时间、权重进行了不同的排班和字号颜色调整，增加视觉冲击感以及辨识度。让用户觉得和大众搜索引擎有一些共同点，但其中又透露出一些自己的个性，给用户熟悉又新奇的体验感，而且还保留了清爽无广告和多余干扰信息的特点。并且，所有视觉设计结合了当下的响应式设计理念，同时在PC端和移动端下都具有良好的用户体验和视觉效果。</p>
<h3 id="模板编写">模板编写</h3><p><strong>采用Twig进行模板编写：</strong></p>
<ul>
<li>views<ul>
<li>index.twig</li>
<li>search_results.twig</li>
<li>results.twig</li>
<li>css</li>
<li>js</li>
<li>fonts</li>
<li>images</li>
<li>favicon.ico</li>
</ul>
</li>
</ul>
<p>前端体验如下图所示：<br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/ocrsearch%E5%B0%8F%E6%9E%AB%E5%9B%BE%E6%90%9C_%E8%A7%86%E8%A7%89%E8%AE%BE%E8%AE%A1.jpg" alt=""></p>
<h2 id="移动端工程实现、测试">移动端工程实现、测试</h2><p>主要基于Bootstrap3.4，可以用XDK/phoneGap打包编译成对应NA App，发布到应用市场。<br>移动端体验如下图所示：</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/ocrsearchIMG_3244.JPG" alt=""></p>
<h1 id="心得体会">心得体会</h1><p>感谢大学四年所有的任课老师和所有帮助过我的同学们，是他们教会了我专业知识，通过近四年的学习和科研工作，不仅使我的知识结构和科研能力上了一个新的台阶，更重要的是让我融入了社会，给了我充分的实习经历，让我在大学本科就体验到了很多研究生都无法体验的互联网公司工作经历。弹指一挥间，大学四年已经接近了尾声。当自己怀着忐忑不安的心情完成这篇毕业论文的时候，自己也从当年一个懵懂孩子变成了一个成熟青年，还是那句话——只有汗水不会欺骗你，最后，感谢电子科技大学，感谢大学所遇见的每一个人，也感谢自己四年的努力。</p>
<h1 id="项目开源地址：">项目开源地址：</h1><p><a href="https://github.com/daijiale/OCR_FontsSearchEngine" target="_blank" rel="external">已托管到Github，传送门</a>。</p>
<h1 id="参考文献">参考文献</h1><ul>
<li><a href="http://blog.csdn.net/tuling_research/article/details/41091163" target="_blank" rel="external"> tesseract OCR训练新数据的详细步骤-附大量训练数据</a></li>
<li><a href="http://blog.csdn.net/viewcode/article/details/7917320" target="_blank" rel="external"> tesseract OCR的多语言，多字体字符识别</a></li>
<li><a href="http://linusp.github.io/2015/04/17/tesseract-install-usage.html" target="_blank" rel="external">Tesseract:安装与命令行使用</a></li>
<li><a href="https://liuzhichao.com/p/1940.html" target="_blank" rel="external">Mac下使用Vagrant打造本地开发环境</a></li>
<li><a href="http://www.codeceo.com/article/php-ocr-tesseract-get-text.html?url_type=39&amp;object_type=webpage&amp;pos=1" target="_blank" rel="external">PHP OCR实战：用Tesseract从图像中读取文字</a></li>
<li><a href="https://github.com/tesseract-ocr" target="_blank" rel="external">Github—Tesseract-OCR</a></li>
<li><a href="http://blog.csdn.net/firehood_/article/details/8433077" target="_blank" rel="external"> Tesseract-OCR 字符识别—-样本训练</a></li>
<li><a href="http://bbs.aardio.com/forum.php?mod=viewthread&amp;tid=12601" target="_blank" rel="external">开源图文识别引擎实现验证码识别 </a></li>
<li><a href="http://www.cnblogs.com/ShineTan/archive/2013/04/15/3021523.html" target="_blank" rel="external">Tesseract-OCR 3.02 训练笔记</a></li>
<li><a href="http://www.cnblogs.com/mjorcen/p/3799996.htm" target="_blank" rel="external">Tesseract 3 语言数据的训练方法</a></li>
<li><a href="http://www.cnblogs.com/mjorcen/p/3800739.html" target="_blank" rel="external">Tesseract 3.02中文字库训练</a></li>
<li><a href="http://holybless.iteye.com/blog/1338717" target="_blank" rel="external">Mac下Tesseract安装部署</a></li>
<li><a href="http://cdmd.cnki.com.cn/Article/CDMD-10561-1014065487.htm" target="_blank" rel="external">基于Tesseract-OCR的名片识别系统</a></li>
<li><a href="https://github.com/thiagoalessio/tesseract-ocr-for-php" target="_blank" rel="external">Github_Tesseract-OCR_For_PHP</a></li>
<li><a href="http://www.sanesee.com/search/article-all-2" target="_blank" rel="external">Nutch1.10入门教程</a></li>
<li><a href="http://blog.csdn.net/liuzhenwen/article/details/4060922" target="_blank" rel="external">Solr入门</a></li>
<li><a href="http://wiki.apache.org/solr/FrontPage" target="_blank" rel="external">Solr官网</a></li>
<li><a href="">Solr PHP</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一、前言：">一、前言：</h1><p>这是一篇图像识别OCR技术、机器学习、以及简易搜索引擎构建相关的技术Blog，是自己在做毕设的同时，每天不断记录研究成果和心得的地方。</p>]]>
    
    </summary>
    
      <category term="PHP" scheme="http://daijiale.github.io/tags/PHP/"/>
    
      <category term="机器学习" scheme="http://daijiale.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="神经网络" scheme="http://daijiale.github.io/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
      <category term="图像识别" scheme="http://daijiale.github.io/tags/%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB/"/>
    
      <category term="搜索引擎" scheme="http://daijiale.github.io/tags/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
    
      <category term="Nutch" scheme="http://daijiale.github.io/tags/Nutch/"/>
    
      <category term="Tesseract" scheme="http://daijiale.github.io/tags/Tesseract/"/>
    
      <category term="Solr" scheme="http://daijiale.github.io/tags/Solr/"/>
    
      <category term="OCR" scheme="http://daijiale.github.io/tags/OCR/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="自己的开源项目" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【PHP】常用正则表达式]]></title>
    <link href="http://daijiale.github.io/2016/05/02/%E3%80%90PHP%E3%80%91%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://daijiale.github.io/2016/05/02/【PHP】常用正则表达式/</id>
    <published>2016-05-02T04:12:01.000Z</published>
    <updated>2016-11-18T09:09:19.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>PS：整理了一些常用的正则表达式，主要最近在PHP项目中经常使用。</p>
</blockquote>
<a id="more"></a>
<h1 id="概述">概述</h1><p>典型的搜索和替换操作要求您提供与预期的搜索结果匹配的确切文本。虽然这种技术对于对静态文本执行简单搜索和替换任务可能已经足够了，但它缺乏灵活性，若采用这种方法搜索动态文本，即使不是不可能，至少也会变得很困难。</p>
<p>通过使用正则表达式：</p>
<ul>
<li>可以测试字符串内的模式。例如，可以测试输入字符串，以查看字符串内是否出现电话号码模式或信用卡号码模式。这称为数据验证。</li>
<li>替换文本。可以使用正则表达式来识别文档中的特定文本，完全删除该文本或者用其他文本替换它。</li>
<li>基于模式匹配从字符串中提取子字符串。可以查找文档内或输入域内特定的文本。例如，您可能需要搜索整个网站，删除过时的材料，以及替换某些 HTML 格式标记。在这种情况下，可以使用正则表达式来确定在每个文件中是否出现该材料或该 HTML 格式标记。此过程将受影响的文件列表缩小到包含需要删除或更改的材料的那些文件。然后可以使用正则表达式来删除过时的材料。最后，可以使用正则表达式来搜索和替换标记。</li>
</ul>
<h1 id="正则表达式的常用语法">正则表达式的常用语法</h1><p>正则表达式是由普通字符（例如字符 a 到 z）以及特殊字符（称为”元字符”）组成的文字模式。模式描述在搜索文本时要匹配的一个或多个字符串。正则表达式作为一个模板，将某个字符模式与所搜索的字符串进行匹配。</p>
<ul>
<li>普通字符：普通字符包括没有显式指定为元字符的所有可打印和不可打印字符。这包括所有大写和小写字母、所有数字、所有标点符号和一些其他符号。</li>
</ul>
<ul>
<li><p>非打印字符：非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：</p>
<ul>
<li><code>\cx</code> :匹配x指明的控制字符。</li>
<li><code>\f</code>:匹配一个换页符。等价于<code>\cL</code>。</li>
<li><code>\n</code>:匹配一个换行符。等价于<code>\cJ</code>。</li>
<li><code>\r</code>:匹配一个回车符。等价于<code>\cM</code>。</li>
<li><code>\s</code>:匹配任何空白字符，包括空格、制表符、换页等。</li>
<li><code>\S</code>:匹配任何非空白字符。</li>
<li><code>\t</code>:匹配一个制表符。</li>
<li><code>\v</code>:匹配一个垂直制表符。</li>
</ul>
</li>
<li><p>特殊字符：</p>
<ul>
<li><code>$</code>:匹配输入字符串的结尾位置，要匹配$字符本身，请使用<code>\$</code>。</li>
<li><code>()</code>:标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用<code>\（</code>和<code>\）</code>。</li>
<li><code>*</code>:匹配前面的子表达式零次或多次。要匹配<code>*</code>字符，请使用<code>\*</code>。</li>
<li><code>+</code>:匹配前面的子表达式一次或多次。要匹配<code>+</code>字符，请使用<code>\+</code></li>
<li><code>.</code>:匹配除换行符 <code>\n</code>之外的任何单字符。要匹配 <code>.</code>，请使用<code>\</code>。</li>
<li><code>[</code>:标记一个中括号表达式的开始。要匹配 <code>[</code>，请使用 <code>\[</code>。</li>
<li><code>?</code>:匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 <code>?</code>字符，请使用<code>\?</code>。</li>
<li><code>\</code>:将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如，<code>&#39;n&#39;</code>匹配字符 <code>&#39;n&#39;</code>。<code>&#39;\n&#39;</code>匹配换行符。序列 <code>&#39;\\&#39;</code> 匹配 <code>&quot;\&quot;</code>，而 <code>&#39;\(&#39;</code>则匹配 <code>&quot;(&quot;</code>。</li>
<li><code>^</code>:匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。要匹配<code>^</code>字符本身，请使用<code>\^</code>。</li>
<li><code>{</code>:标记限定符表达式的开始。要匹配<code>{</code>，请使用 <code>\{</code>。</li>
<li><code>|</code>:指明两项之间的一个选择。要匹配<code>|</code>，请使用<code>\|</code>。</li>
</ul>
</li>
<li>限定符：限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有*或+或?或{n}或{n,}或{n,m}共6种。正则表达式的限定符有：<ul>
<li><code>*</code>:匹配前面的子表达式零次或多次。例如，<code>zo*</code>能匹配 “z” 以及 “zoo”。* 等价于<code>{0,}</code>。</li>
<li><code>+</code>:匹配前面的子表达式一次或多次。例如，<code>zo+</code> 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。</li>
<li><code>?</code>:匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 或 “does” 中的”do” 。? 等价于 {0,1}。</li>
<li><code>{n}</code>:n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</li>
<li><code>{n,}</code>:n 是一个非负整数。至少匹配n次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。</li>
<li><code>{n,m}</code>:m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。</li>
</ul>
</li>
</ul>
<p>PS：通过在 *、+ 或 ? 限定符之后放置 ?，该表达式从”贪心”表达式转换为”非贪心”表达式或者最小匹配。</p>
<ul>
<li>定位符：定位符使您能够将正则表达式固定到行首或行尾。它们还使您能够创建这样的正则表达式，这些正则表达式出现在一个单词内、在一个单词的开头或者一个单词的结尾。<ul>
<li><code>^</code>:匹配输入字符串开始的位置。</li>
<li><code>$</code>:匹配输入字符串结尾的位置。</li>
<li><code>b</code>:匹配一个字边界，即字与空格间的位置。</li>
<li><code>B</code>:非字边界匹配。</li>
</ul>
</li>
</ul>
<h1 id="正则表达式实践">正则表达式实践</h1><h2 id="提取&lt;&gt;（）[]{}括号内的字符串">提取&lt;&gt;（）[]{}括号内的字符串</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">$str=&quot;你好&lt;我&gt;(爱)[北京]&#123;天安门&#125;&quot;;</span><br><span class="line">echo f1($str); //返回你好 </span><br><span class="line">echo f2($str); //返回我 </span><br><span class="line">echo f3($str); //返回爱 </span><br><span class="line">echo f4($str); //返回北京 </span><br><span class="line">echo f5($str); //返回天安门</span><br><span class="line">function f1($str) </span><br><span class="line">&#123; </span><br><span class="line">$result = array(); </span><br><span class="line">preg_match_all(&quot;/^(.*)(?:&lt;)/i&quot;,$str, $result); </span><br><span class="line">return $result[1][0]; </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line">function f2($str) </span><br><span class="line">&#123; </span><br><span class="line">$result = array(); </span><br><span class="line">preg_match_all(&quot;/(?:&lt;)(.*)(?:&gt;)/i&quot;,$str, $result); </span><br><span class="line">return $result[1][0]; </span><br><span class="line">&#125;</span><br><span class="line">function f3($str) </span><br><span class="line">&#123; </span><br><span class="line">$result = array(); </span><br><span class="line">preg_match_all(&quot;/(?:\()(.*)(?:\))/i&quot;,$str, $result); </span><br><span class="line">return $result[1][0]; </span><br><span class="line">&#125;</span><br><span class="line">function f4($str) </span><br><span class="line">&#123; </span><br><span class="line">$result = array(); </span><br><span class="line">preg_match_all(&quot;/(?:\[)(.*)(?:\])/i&quot;,$str, $result); </span><br><span class="line">return $result[1][0]; </span><br><span class="line">&#125;</span><br><span class="line">function f5($str) </span><br><span class="line">&#123; </span><br><span class="line">$result = array(); </span><br><span class="line">preg_match_all(&quot;/(?:\&#123;)(.*)(?:\&#125;)/i&quot;,$str, $result); </span><br><span class="line">return $result[1][0]; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="参考文献">参考文献</h1><ul>
<li><a href="http://www.runoob.com/regexp/regexp-tutorial.html" target="_blank" rel="external">正则表达式_参考文档</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>PS：整理了一些常用的正则表达式，主要最近在PHP项目中经常使用。</p>
</blockquote>]]>
    
    </summary>
    
      <category term="PHP" scheme="http://daijiale.github.io/tags/PHP/"/>
    
      <category term="正则表达式" scheme="http://daijiale.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【个人】关于百度地图加油业务的切身体验]]></title>
    <link href="http://daijiale.github.io/2016/03/22/%E3%80%90%E4%B8%AA%E4%BA%BA%E3%80%91%E5%85%B3%E4%BA%8E%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E5%8A%A0%E6%B2%B9%E6%96%B0%E4%B8%9A%E5%8A%A1%E7%9A%84%E5%88%87%E8%BA%AB%E4%BD%93%E9%AA%8C/"/>
    <id>http://daijiale.github.io/2016/03/22/【个人】关于百度地图加油新业务的切身体验/</id>
    <published>2016-03-22T11:12:11.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<p>在今年3月入职百度前，因HR的问题，Delay了一周，但同时也得到了一个在北京龙禹加油站兼职的机会，可以提前切身体会一下团队的产品成果，帮助自己以后更好地融入后续产品开发过程，感谢马总和君威的关照，感谢团队提供的机会，这里分享和梳理一下这几天的体会心得。。。<br><a id="more"></a></p>
<h1 id="3月17日">3月17日</h1><p>第一天驻场，10点前到加油站，正值早高峰末期，认识了君威、销售老白和加油站的众多蓝衣小伙，人都很nice。</p>
<h2 id="在和用户交流时遇到的问题:">在和用户交流时遇到的问题:</h2><ul>
<li><p>1.基于地图的加油入口不明显，很多车主用户（还是经常使用百度地图的车主）都无法自己找到入口，需要地推人员帮忙，虽然目前有两种方式，一是通过搜索框，直接输入“加油”进去，二是通过底部的周边服务菜单-&gt;车主服务，但是对于车主用户（一般60、70后居多），都是很难上手的。</p>
</li>
<li><p>2.有部分用户的百度地图App版本过低，导致出现有意愿使用缺无法找到服务的情况。</p>
</li>
<li><p>3.对于支付方式，部分用户期望除了“百度钱包、支付宝、网银”之外还能有微信支付。</p>
</li>
<li><p>4.车主用户里有一部分专业司机（滴滴、Uber专车司机），存在心存刷单的心理，他们一般有多个手机号，希望通过更换手机登陆账号，来获得更多油劵红包奖励（毕竟新用户首单送30元油劵），但是无法找到用户注销和切换登陆的入口，可以在我的账号那增加入口，方便这类用户。</p>
</li>
</ul>
<h1 id="3月18日">3月18日</h1><p>认识了新人，一大三校园兼职哥们，人也很不错。</p>
<h2 id="在和用户交流时遇到的问题:-1">在和用户交流时遇到的问题:</h2><ul>
<li>1.有一些用户地图版本太低，无法使用加油服务。有些无“周边服务”，可以通过框来搜索“加油”进入，有些是连搜索 “加油” 都无法进入。</li>
<li><p>2.接着第一条，很多用户想使用加油服务，但是因为用户更新百度地图和下载最新百度地图App需要耗费100M多的流量和3-5分钟时间，所以导致放弃使用。建议提供一个H5应用入口，通过扫一扫就可以直接使用我们的服务，让未安装/更新百度地图App的新用户可以快速使用，因为有时候加油站的车流很多，等待时间就是决定性因素（微信支付/支付宝之所以可以快速占领便利店和超市，就是因为一个字：快）。</p>
</li>
<li><p>3.接着第二条，很多人都会把传单上领卷的扫一扫通道误解为只要扫一扫就可以进入我们的加油服务。。。结果被运营和地推同学告知需要下载APP-有网银….等等接下来的一系列操作，心里落差太大，接受不了，对比之下会觉得很反锁，很排斥，所以就立刻粉转黑了。。。（唉，唉，唉，可惜）</p>
</li>
</ul>
<h1 id="3月21日">3月21日</h1><p>这周换到了太阳宫的新合作油站，刚好对比一下。</p>
<h2 id="在和用户交流时遇到的问题:-2">在和用户交流时遇到的问题:</h2><ul>
<li>1.针对油站工作人员用户，历史订单可以再多加一个每日订单总计功能，不然在冲单过程中，需要工作人员一个一个去数单量，效率低，且体验不友好。</li>
<li>2.大部分用户是通过看到加油站的海报，才知道百度加油业务的，当然也有通过百度地图导流过来的，不过数量很少，不太清楚地图这块的推送策略，如果能准确定位用户人群，多次推送（比如：a.油卷快过期的前三天，推送一下；b.检索北京加油站的用户，推送一下；c.导航到合作油站附近其他地点的，推送一下；等等，这样是不是效果会更好？）</li>
</ul>
<h1 id="百度加油使用步骤">百度加油使用步骤</h1><p>最后打个广告，也图文并茂地介绍下百度地图加油业务的使用步骤：</p>
<h2 id="第一步:下载百度地图APP到你的手机">第一步:下载百度地图APP到你的手机</h2><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogIMG_2178.PNG" alt=""></p>
<h2 id="第二步:打开百度地图APP，点开底部的“发现周边服务”">第二步:打开百度地图APP，点开底部的“发现周边服务”</h2><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogIMG_2179.PNG" alt=""></p>
<h2 id="第三步:默认显示的是“吃喝玩乐”，切换到旁边的“车主服务”，对，没错，就是右上角还标红了大写的“加油”的那个。">第三步:默认显示的是“吃喝玩乐”，切换到旁边的“车主服务”，对，没错，就是右上角还标红了大写的“加油”的那个。</h2><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogIMG_2180.PNG" alt=""></p>
<h2 id="第四步:进入到“车主服务”后，六宫格菜单的第一个按钮就是“加油业务”入口，点击即可。">第四步:进入到“车主服务”后，六宫格菜单的第一个按钮就是“加油业务”入口，点击即可。</h2><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogIMG_2181.PNG" alt=""></p>
<h2 id="第五步:进入到“加油业务”后，你就能看到如下的订单页面。">第五步:进入到“加油业务”后，你就能看到如下的订单页面。</h2><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogIMG_2182.PNG" alt=""></p>
<h2 id="第六步:下单支付">第六步:下单支付</h2><p>-&gt;选择油站（一般会自动帮用户定位最近的合作油站）</p>
<p>-&gt;填写所加油量金额</p>
<p>-&gt;选择油品类型和油枪号</p>
<p>-&gt;注册百度账号-&gt;使用油卷（支付时候抵扣对应金额）</p>
<p>-&gt;前去支付</p>
<p>-&gt;<strong>支付方式可以使用<code>百度钱包</code>/<code>支付宝</code>/<code>网银</code></strong></p>
<p>-&gt;支付成功</p>
<p>-&gt;油站工作人员确认</p>
<p>-&gt;打印出票</p>
<p>-&gt;<strong>最后，潇洒离去（纳尼？忘带钱包，忘带油卡也能加油？特么真方便！）</strong></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogIMG_2183.PNG" alt=""></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogIMG_2184.PNG" alt=""></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogIMG_2186.PNG" alt=""></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogIMG_2187.PNG" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在今年3月入职百度前，因HR的问题，Delay了一周，但同时也得到了一个在北京龙禹加油站兼职的机会，可以提前切身体会一下团队的产品成果，帮助自己以后更好地融入后续产品开发过程，感谢马总和君威的关照，感谢团队提供的机会，这里分享和梳理一下这几天的体会心得。。。<br>]]>
    
    </summary>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【PHP】Composer入门实践]]></title>
    <link href="http://daijiale.github.io/2016/03/08/%E3%80%90PHP%E3%80%91%20Composer%E5%85%A5%E9%97%A8%E5%AE%9E%E8%B7%B5/"/>
    <id>http://daijiale.github.io/2016/03/08/【PHP】 Composer入门实践/</id>
    <published>2016-03-08T10:16:11.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<p>这里很有必要和很多初学者提一下，现在Web的开发趋势越来越接近集成化，自动化。Node.js之所以如日中天，npm有很大的功劳，对开发者们起到了十分便捷高效的开发形式。因此，PHP也应运而生了Composer来进行依赖管理。所以无论你以后是要成为专业PHP工程师，还是为了和你未来Team中其他队友“和谐”共事，请掌握之！<br><a id="more"></a></p>
<h1 id="简介">简介</h1><p>Composer是什么？Composer是PHP的依赖管理工具，什么是依赖管理工具呢？它是新出来的一个标准，通过它来管理一个框架一个项目要加载哪些库哪些插件，你可以在一个名为composer.json的文件中定义需要的资源包，通过composer命令可以自动进行下载部署。</p>
<p>Composer 可以看成一个 PHP 的包管理器，类似 Python 的 easy_install 和 pip，Ruby 的 gem，Node.js 的 npm，是一个强大的生态系统。</p>
<p>现在流行的Yii，Laravel等PHP开发框架都推荐使用Composer方式安装框架到本地，它也主要用于本地开发的时候项目的资源管理。</p>
<ul>
<li><a href="http://docs.phpcomposer.com/00-intro.html#Globally-on-OSX-via-homebrew" target="_blank" rel="external">简介入门</a></li>
</ul>
<h1 id="Mac下安装">Mac下安装</h1><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlBlogcomposer.png" alt=""></p>
<h1 id="基本使用">基本使用</h1><p><a href="http://docs.phpcomposer.com/01-basic-usage.html" target="_blank" rel="external">中文文档</a></p>
<p>加载Silex Microframework 和Tesseract-OCR PHP两个库示例：</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlBlogphp-composer.png" alt=""></p>
<h1 id="参考文档">参考文档</h1><ul>
<li><a href="https://segmentfault.com/a/1190000000355928" target="_blank" rel="external">Composer使用五个小技巧</a></li>
<li><a href="http://www.phpcomposer.com/" target="_blank" rel="external">Composer中文网</a></li>
<li><a href="http://www.tantengvip.com/2015/05/mac-composer/" target="_blank" rel="external">Mac下安装Composer</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>这里很有必要和很多初学者提一下，现在Web的开发趋势越来越接近集成化，自动化。Node.js之所以如日中天，npm有很大的功劳，对开发者们起到了十分便捷高效的开发形式。因此，PHP也应运而生了Composer来进行依赖管理。所以无论你以后是要成为专业PHP工程师，还是为了和你未来Team中其他队友“和谐”共事，请掌握之！<br>]]>
    
    </summary>
    
      <category term="PHP" scheme="http://daijiale.github.io/tags/PHP/"/>
    
      <category term="Composer" scheme="http://daijiale.github.io/tags/Composer/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【前端】以后前端妹子再问你页面为何加载慢，请告诉她这几个套路]]></title>
    <link href="http://daijiale.github.io/2016/02/19/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91%E4%BB%A5%E5%90%8E%E5%89%8D%E7%AB%AF%E5%A6%B9%E5%AD%90%E5%86%8D%E9%97%AE%E4%BD%A0%E9%A1%B5%E9%9D%A2%E4%B8%BA%E4%BD%95%E5%8A%A0%E8%BD%BD%E6%85%A2%EF%BC%8C%E8%AF%B7%E5%91%8A%E8%AF%89%E5%A5%B9%E8%BF%99%E5%87%A0%E4%B8%AA%E5%A5%97%E8%B7%AF/"/>
    <id>http://daijiale.github.io/2016/02/19/【前端】以后前端妹子再问你页面为何加载慢，请告诉她这几个套路/</id>
    <published>2016-02-19T04:10:29.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<p>本文记录了一些前端页面访问速度优化的常用套路，结合自身优化过的几个站点实例，给大家一些启发和共鸣！希望能帮助到更多的同学！<br><a id="more"></a></p>
<h1 id="套路1：合并Js文件和CSS">套路1：合并Js文件和CSS</h1><p>将JS代码和CSS样式分别合并到一个共享的文件，这样不仅能简化代码，而且在执行JS文件的时候，如果JS文件比较多，就需要进行多次“Get”请求，延长加载速度，将JS文件合并在一起后，自然就减少了Get请求次数，提高了加载速度。</p>
<ul>
<li><a href="http://www.jb51.net/article/32834.htm" target="_blank" rel="external">Windows下编写JS合并脚本</a></li>
</ul>
<h1 id="套路2：Sprites图片技术">套路2：Sprites图片技术</h1><p>Spriting是一种网页图片应用处理方式，它是将一个页面涉及到的所有零星图片都包含到一张大图中去，然后利用CSS技术展现出来。这样一来，当访问该页面时，载入的图片就不会像以前那样一幅一幅地慢慢显示出来了，可以减少了整个网页的图片大小，并且利用CSSSprites能很好地减少网页的http请求，从而大大的提高页面的性能。CSSSprites在国内很多人叫css精灵，很早就有了，在很多大型网站都有用到，特别是一些所有页面都存在的图标用得比较多，很好的提升加载速度。</p>
<ul>
<li><a href="http://developer.51cto.com/art/201504/474506.htm" target="_blank" rel="external">Sprites图片拼合工具</a></li>
</ul>
<h1 id="套路3：压缩文本和图片">套路3：压缩文本和图片</h1><p>压缩技术如gzip可以有效减少页面加载的时间。包括HTML，XML，JSON(JavaScript对象符号)，JavaScript和CSS等，压缩率都可以在大小70%左右。文本压缩用得比较多，一般直接在空间开启就行，而图片的压缩就比较随意，很多都是直接上传，其实还有很大的压缩空间。这部分的压缩方法可以借助一些工具，工具使用可以参考如下博文：</p>
<ul>
<li><a href="http://chinagdg.org/2016/02/%E7%BD%91%E9%A1%B5%E5%9B%BE%E7%89%87%E4%BC%98%E5%8C%96%E5%92%8C%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" target="_blank" rel="external">谷歌开发者-网页图片优化和性能分析</a></li>
</ul>
<h1 id="套路4：延迟显示可见区域外的内容">套路4：延迟显示可见区域外的内容</h1><p>为了确保用户可以更快地看见可见区域的网页可以延迟加载或展现可见区域外的内容，为了避免页面变形，可以使用占位符标签制定正确的高度和宽度。比如WP的jQueryImage LazyLoad插件就可以在用户停留在第一屏的时候，不加载任何第一屏以下的图片信息，只有当用户把鼠标往下滚动的时候，这些图片才开始加载。这样很明显提升可见区域的加载速度，提高用户体验。</p>
<h1 id="套路5：确保功能图片优先加载">套路5：确保功能图片优先加载</h1><p>网站主要考虑可用性的重要性，一个功能按钮要提前加载出来，用户进入下载页，一个只需要8s时间的下载花了5s在等待、寻找下载按钮图片，谁能忍受?</p>
<h1 id="套路6：重新布置Call-to-Action按钮">套路6：重新布置Call-to-Action按钮</h1><p>其实这个和上面一条是差不多的，都是从用户体验速度着手，跳过了网页的整体加载速度。速度没变，只是让一些行为按钮提前，Call-to-Action按钮一般习惯设计在页面底部，这样的习惯对于用户来说并不总是好的，购买用户需要等到最下面加载出来才能点击下一步操作。可以调整CTA按钮的位置或使用滑动的图片按钮。很多大型购物网站的加入购物车就是这种类型。</p>
<ul>
<li><a href="http://blog.sina.com.cn/s/blog_751f27c30101d2tc.html" target="_blank" rel="external">更多Call-to-Action介绍</a></li>
</ul>
<h1 id="套路7：图片格式优化">套路7：图片格式优化</h1><p>不恰当的图像格式是一种极为常见的减慢加载速度的罪魁祸首。正确的图片格式可以让图片缩小数倍，如果保存为最佳格式。可以节省大量带宽，减少处理时间时间，大大加快页面加载速度，这是一种很常见的做法。能用JPG就不用PNG。当然JPG也还可以进一步优化的，不信，请看<code>套路8</code>。</p>
<h1 id="套路8：使用_Progressive_JPEGs">套路8：使用 Progressive JPEGs</h1><p><code>ProgressiveJPEGs</code>图片是JPEG格式的一个特殊变种，名为“高级JPEG”。在创建高级JPEG文件时，数据是这样安排的：在装入图像时，开始只显示一个模糊的图像，随着数据的装入，图像逐步变得清晰。它相当于交织的GIF格式的图片。高级JPEG主要是考虑到使用调制解调器的慢速网络而设计的，快速网络的使用者通常不会体会到它和正常JPEG格式图片的区别。对于网速比较慢的用户，这无疑有很好的体验。</p>
<ul>
<li><a href="http://www.xuebuyuan.com/2022247.html" target="_blank" rel="external">如何用PS制作ProgressiveJPEGS</a></li>
</ul>
<h1 id="套路9：精简代码">套路9：精简代码</h1><p>这个可以说是最直接的一个方法，也是用得比较多的，对网页代码进行瘦身，删除不必要的沉冗代码，比如不必要的空格、换行符、注释等，包括JS代码中的无用代码也需要清除。其中对于注释代码的清除可能有些人存在误区，甚至有的在里面堆砌关键词。这个比较好理解，可以直接用很多在线工具，进行.min.js/min.css，压缩，图片/图标用Base64进行代码压缩。</p>
<ul>
<li><a href="http://app.baidu.com/webkits" target="_blank" rel="external">分享来自度厂的在线精简工具，还带Eval混淆功能</a></li>
</ul>
<h1 id="套路10：延迟加载和执行非必要脚本">套路10：延迟加载和执行非必要脚本</h1><p>网页中有很多脚本是在页面完全加载完前都不需要执行的，可以延迟加载和执行非必要脚本。这些脚本可以在onload事件之后执行，避免对网页上重要内容的呈现造成影响。这些脚本可能是你自己网页的脚本，往往更多的是一些第三方脚本，这样的有很多，比如评论、广告、智能推荐、百度云图、百度统计，分享等等，这些完全可以等主体内容加载完后再执行。这一点在，<a href="http://daijialewebdesign.sinaapp.com/XiaoFengJieWu/index.html" target="_blank" rel="external">小枫街舞</a> 项目中有很好的体现，如下图所示，分享插件的脚本直到最后整个页面布局都加载完了之后才延时加载出来。</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlBlog%E6%99%A9%E5%8A%A0%E8%BD%BD%E5%AF%B9%E6%AF%94.jpg" alt=""></p>
<h1 id="套路11：使用AJAX">套路11：使用AJAX</h1><p>AJAX即“Asynchronous Javascript +XML“，是指一种创建交互式网页应用的网页开发技术。通过在后台与服务器进行少量数据交换，AJAX可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。传统的网页(不使用AJAX)如果需要更新内容，必须重载整个网页面。这个对很多FE来说应该都是很熟悉的了，如果不熟悉，可以戳下面链接。</p>
<ul>
<li><a href="http://daijiale.github.io/2015/04/09/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91AjaxReview/">AjaxReview详细指南</a></li>
</ul>
<h1 id="套路12：自动化的页面性能优化">套路12：自动化的页面性能优化</h1><p>随着Node.js在前端的普及，现在的前端工程已经越来越趋近自动化、模板化的形式，优点有很多，可以快速协同开发，快速迭代，节约开发成本。<strong>（换句话说，就是把以上的所有套路都自己自定义到一个引擎里，每次创建新工程都可以服用的技术。）</strong>例如大家耳熟能熟的就有<code>Angular.js</code>,<code>React.js</code>,<code>hexo</code>,等等！如果你想自己构建一个专属的自动化引擎，可以参考下列博文！（PS : 博主以前自己也写过一个Blog自动化生成引擎，对能力提升很有帮助，感兴趣的可以试试）</p>
<ul>
<li><a href="https://www.awesomes.cn/source/9" target="_blank" rel="external">如何打造一个自动化的前端项目</a></li>
</ul>
<h1 id="主流的前端性能优化、自动化解决的构建工具">主流的前端性能优化、自动化解决的构建工具</h1><p>很多楼上所述的套路可以用构建工具被集成，一般将要发布在线上的企业级应用都会使用构建工具，目前市场上比较主流，值得学习的构建工具有下列几种：</p>
<ul>
<li><p><a href="https://webpack.github.io/" target="_blank" rel="external">Webpack</a></p>
</li>
<li><p><a href="http://gruntjs.com/" target="_blank" rel="external">Grunt</a></p>
</li>
<li><p><a href="http://fex-team.github.io/fis3/" target="_blank" rel="external">FIS3</a></p>
</li>
</ul>
<h1 id="实例分析">实例分析</h1><p><strong>持续更新，后面会以自己项目优化历程为实例，尽请期待。</strong></p>
<h1 id="前端性能测试工具">前端性能测试工具</h1><ul>
<li><a href="http://www.oneapm.com/bi/feature.html" target="_blank" rel="external">OneAPM前端浏览器云测试平台</a></li>
</ul>
<h1 id="参考阅读">参考阅读</h1><ul>
<li><a href="http://chinagdg.org/2016/02/%E7%BD%91%E9%A1%B5%E5%9B%BE%E7%89%87%E4%BC%98%E5%8C%96%E5%92%8C%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" target="_blank" rel="external">谷歌开发者-网页图片优化和性能分析</a></li>
<li><p><a href="http://lusongsong.com/reed/608.html" target="_blank" rel="external">卢松松-Web站点性能优化实践</a></p>
</li>
<li><p><a href="http://www.zhihu.com/question/27085552" target="_blank" rel="external">知乎—前端妹子跟我抱怨她们的页面加载很慢的时候，如何在她面前优雅地装逼？</a></p>
</li>
<li><p><a href="http://www.php100.com/html/it/qianduan/2015/0205/8560.html" target="_blank" rel="external">PHP100—优化网站加载速度的14个技巧</a></p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>本文记录了一些前端页面访问速度优化的常用套路，结合自身优化过的几个站点实例，给大家一些启发和共鸣！希望能帮助到更多的同学！<br>]]>
    
    </summary>
    
      <category term="Javascript" scheme="http://daijiale.github.io/tags/Javascript/"/>
    
      <category term="html5" scheme="http://daijiale.github.io/tags/html5/"/>
    
      <category term="前端性能优化" scheme="http://daijiale.github.io/tags/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【前端】FIS3应用小记]]></title>
    <link href="http://daijiale.github.io/2016/02/10/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91FIS3%E5%BA%94%E7%94%A8%E5%B0%8F%E8%AE%B0/"/>
    <id>http://daijiale.github.io/2016/02/10/【前端】FIS3应用小记/</id>
    <published>2016-02-10T08:30:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>接触FIS是在2014年11月左右，当时大二，在准备百度实习面试的时候网上迷路了，偶遇了FIS的官网，当时用了一下，觉得是一个基于Node.js的前端自动化解决方案，没太在意…后面在百度遇见了一些前端的小伙伴，才明白FIS的潜能，现在不管是自己的项目，还是以后公司的前端项目，都快离不来TA了，之前听一个学弟说最近他也在使用，并且存在不少问题，所以想写篇博文，给需要的小伙伴们。PS：我自己用的是MacOS系统，博文所述的FIS版本采用最新的FIS3。</p>
<a id="more"></a>
</blockquote>
<h1 id="【前端】FIS3应用小记">【前端】FIS3应用小记</h1><h2 id="FIS3">FIS3</h2><p>FIS3：面向前端的工程构建工具，一套来自度厂的比较完整的前端开发解决方案，类似于<a href="http://www.gruntjs.net/" target="_blank" rel="external"><code>grunt</code></a>。</p>
<h2 id="FIS3安装">FIS3安装</h2><ul>
<li>请戳：<a href="http://fis.baidu.com/fis3/docs/beginning/install.html" target="_blank" rel="external">安装教程</a>。</li>
<li>注意：UNIX系统的终端在输入安装命令时请+<code>sudo</code>。</li>
<li>NPM被墙，慢出翔，请使用国内镜像安装。</li>
<li>安装遇见Bug不慌：<a href="https://github.com/fex-team/fis/issues/565" target="_blank" rel="external">常见问题解决方案</a>。</li>
<li>安装成功后记得<code>fis -v</code>check一下。</li>
</ul>
<h2 id="FIS3构建项目">FIS3构建项目</h2><h3 id="资源定位">资源定位</h3><p>如下图，切换至项目<code>fis-conf.js</code>所在根目录下，键入<code>fis release -d &lt;path&gt;</code>,构建发布到项目目录的<code>&lt;path&gt;</code>目录下（可以是子目录，也可以是父目录，e.g.：<code>./output_son</code>,<code>../output_father</code>）。</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlBlogfis1.png" alt=""></p>
<h3 id="配置文件">配置文件</h3><p>默认配置文件为 <code>fis-conf.js</code>，FIS3 编译的整个流程都是通过配置来控制的：</p>
<ul>
<li><p><a href="http://fis.baidu.com/fis3/docs/api/config.html" target="_blank" rel="external">配置指南（Demo）</a></p>
</li>
<li><p><a href="http://fis.baidu.com/fis3/docs/api/config-props.html" target="_blank" rel="external">常用配置（套路）</a></p>
</li>
<li><p><a href="http://fis.baidu.com/fis3/docs/api/config-props.html" target="_blank" rel="external">配置属性（API）</a></p>
</li>
</ul>
<h3 id="文件指纹">文件指纹</h3><p>文件指纹：唯一标识一个文件。在开启强缓存的情况下，如果文件的 URL 不发生变化，无法刷新浏览器缓存。一般都需要通过一些手段来强刷缓存，一种方式是添加时间戳，每次上线更新文件，给这个资源文件的 URL 添加上时间戳。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"a.png?t=12012121"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>而 FIS3 选择的是添加 MD5 戳，直接修改文件的 URL，而不是在其后添加 query。<br>对 js、css、png 图片引用 URL 添加 md5 戳，配置如下；</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清除其他配置，只剩下如下配置</span></span><br><span class="line">fis.match(<span class="string">'*.&#123;js,css,png&#125;'</span>, &#123;</span><br><span class="line">  useHash: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="string">``</span><span class="string">`	</span><br><span class="line">### 压缩资源</span><br><span class="line">为了减少资源网络传输的大小，通过压缩器对 js、css、图片进行压缩是一直以来前端工程优化的选择。在 FIS3 中这个过程非常简单，通过给文件配置压缩器即可。</span><br><span class="line"></span><br><span class="line">`</span><span class="string">``</span>javascript</span><br><span class="line"><span class="comment">// 清除其他配置，只保留如下配置</span></span><br><span class="line">fis.match(<span class="string">'*.js'</span>, &#123;</span><br><span class="line">  <span class="comment">// fis-optimizer-uglify-js 插件进行压缩，已内置</span></span><br><span class="line">  optimizer: fis.plugin(<span class="string">'uglify-js'</span>)</span><br><span class="line">&#125;);</span><br><span class="line">fis.match(<span class="string">'*.css'</span>, &#123;</span><br><span class="line">  <span class="comment">// fis-optimizer-clean-css 插件进行压缩，已内置</span></span><br><span class="line">  optimizer: fis.plugin(<span class="string">'clean-css'</span>)</span><br><span class="line">&#125;);</span><br><span class="line">fis.match(<span class="string">'*.png'</span>, &#123;</span><br><span class="line">  <span class="comment">// fis-optimizer-png-compressor 插件进行压缩，已内置</span></span><br><span class="line">  optimizer: fis.plugin(<span class="string">'png-compressor'</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="图片合并">图片合并</h3><p>压缩了静态资源，我们还可以对图片进行CssSprite合并，来减少请求数量。<br>FIS3 提供了比较简易、使用方便的图片合并工具。通过配置即可调用此工具并对资源进行合并。<br>FIS3 构建会对 CSS 中，路径带 ?__sprite 的图片进行合并。为了节省编译的时间，分配到 useSprite: true 的 CSS 文件才会被处理。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">li.list-1::before &#123;</span><br><span class="line">  background-image: url('./img/list-1.png?__sprite');</span><br><span class="line">&#125;</span><br><span class="line">li.list-2::before &#123;</span><br><span class="line">  background-image: url('./img/list-2.png?__sprite');</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>启用 fis-spriter-csssprites 插件<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 启用 fis-spriter-csssprites 插件</span></span><br><span class="line">fis.match(<span class="string">'::package'</span>, &#123;</span><br><span class="line">  spriter: fis.plugin(<span class="string">'csssprites'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 对 CSS 进行图片合并</span></span><br><span class="line">fis.match(<span class="string">'*.css'</span>, &#123;</span><br><span class="line">  <span class="comment">// 给匹配到的文件分配属性 `useSprite`</span></span><br><span class="line">  useSprite: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p><a href="https://github.com/fex-team/fis-spriter-csssprites" target="_blank" rel="external">CssSprites 详细配置参见</a></p>
<h3 id="功能组合">功能组合</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加 md5</span></span><br><span class="line"><span class="comment">// fis.match('*.&#123;js,css,png&#125;', &#123;</span></span><br><span class="line"><span class="comment">//   useHash: true</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 启用 fis-spriter-csssprites 插件</span></span><br><span class="line"><span class="comment">// fis.match('::package', &#123;</span></span><br><span class="line"><span class="comment">//   spriter: fis.plugin('csssprites')</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// 对 CSS 进行图片合并</span></span><br><span class="line"><span class="comment">// fis.match('*.css', &#123;</span></span><br><span class="line"><span class="comment">//   // 给匹配到的文件分配属性 `useSprite`</span></span><br><span class="line"><span class="comment">//   useSprite: true</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// fis.match('*.js', &#123;</span></span><br><span class="line"><span class="comment">//   // fis-optimizer-uglify-js 插件进行压缩，已内置</span></span><br><span class="line"><span class="comment">//   optimizer: fis.plugin('uglify-js')</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// fis.match('*.css', &#123;</span></span><br><span class="line"><span class="comment">//   // fis-optimizer-clean-css 插件进行压缩，已内置</span></span><br><span class="line"><span class="comment">//   optimizer: fis.plugin('clean-css')</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// fis.match('*.png', &#123;</span></span><br><span class="line"><span class="comment">//   // fis-optimizer-png-compressor 插件进行压缩，已内置</span></span><br><span class="line"><span class="comment">//   optimizer: fis.plugin('png-compressor')</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// fis.media() 接口提供多种状态功能，比如有些配置是仅供开发环境下使用，有些则是仅供生产环境使用的。</span></span><br><span class="line"><span class="comment">// fis.media() 可以使配置文件变为多份（多个状态，一个状态一份配置）。</span></span><br><span class="line"><span class="comment">// fis3 release rd push 到 RD 的远端机器上</span></span><br><span class="line"><span class="comment">// fis3 release qa push 到 QA 的远端机器上</span></span><br><span class="line"><span class="comment">// fis.media('rd').match('*', &#123;</span></span><br><span class="line"><span class="comment">//   deploy: fis.plugin('http-push', &#123;</span></span><br><span class="line"><span class="comment">//     receiver: 'http://remote-rd-host/receiver.php'</span></span><br><span class="line"><span class="comment">//   &#125;)</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// fis.media('qa').match('*', &#123;</span></span><br><span class="line"><span class="comment">//   deploy: fis.plugin('http-push', &#123;</span></span><br><span class="line"><span class="comment">//     receiver: 'http://remote-qa-host/receiver.php'</span></span><br><span class="line"><span class="comment">//   &#125;)</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//启用 fis-spriter-csssprites 插件</span></span><br><span class="line">fis.match(<span class="string">'::package'</span>, &#123;</span><br><span class="line">  spriter: fis.plugin(<span class="string">'csssprites'</span>)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">fis.match(<span class="string">'*.js'</span>,&#123;</span><br><span class="line">	useHash:<span class="literal">false</span>,</span><br><span class="line">	optimizer: fis.plugin(<span class="string">'uglify-js'</span>)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">fis.match(<span class="string">'*.css'</span>,&#123;</span><br><span class="line">	useHash:<span class="literal">false</span>,</span><br><span class="line">	optimizer: fis.plugin(<span class="string">'clean-css'</span>),</span><br><span class="line">	<span class="comment">// 对 CSS 进行图片合并</span></span><br><span class="line">	<span class="comment">// 给匹配到的文件分配属性 `useSprite`</span></span><br><span class="line">	useSprite: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">fis.match(<span class="string">'*.png'</span>,&#123;</span><br><span class="line">	useHash:<span class="literal">false</span>,</span><br><span class="line">	optimizer: fis.plugin(<span class="string">'png-compressor'</span>)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可能有时候开发的时候不需要压缩、合并图片、也不需要 hash。那么给上面配置追加如下配置；</span></span><br><span class="line"><span class="comment">// fis release debug 启用 media debug 的配置，覆盖上面的配置，把诸多功能关掉。</span></span><br><span class="line"></span><br><span class="line">fis.media(<span class="string">'debug'</span>).match(<span class="string">'*.&#123;js,css,png&#125;'</span>, &#123;</span><br><span class="line">  useHash: <span class="literal">false</span>,</span><br><span class="line">  useSprite: <span class="literal">false</span>,</span><br><span class="line">  optimizer: <span class="literal">null</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="FIS3调试">FIS3调试</h2><p>FIS3 构建后，默认情况下会对资源的 URL 进行修改，改成绝对路径。这时候本地双击打开文件是无法正常工作的。这给开发调试带来了绝大的困惑。</p>
<p>FIS3 内置一个简易 Web Server，可以方便调试构建结果。<br>构建时不指定输出目录，即不指定 -d 参数时，构建结果被发送到内置Web Server的根目录下，此目录可以通过执行以下命令打开。（和hexo的debug server同理）</p>
<h3 id="开启目录">开启目录</h3><p>构建时不指定输出目录，即不指定 -d 参数时，构建结果被发送到内置 Web Server 的根目录下。此目录可以通过执行以下命令打开。<br><code>fis server open</code></p>
<h3 id="发布项目">发布项目</h3><p>不加 -d 参数默认被发布到内置 Web Server的根目录下，当启动服务时访问此目录下的资源。<br><code>fis release</code></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlBlogfis2.png" alt=""></p>
<h3 id="启动测试">启动测试</h3><p><code>fis server start</code><br>来启动本地 Web Server，当此 Server 启动后，会自动浏览器打开 <a href="http://127.0.0.1:8080，默认监听端口" target="_blank" rel="external">http://127.0.0.1:8080，默认监听端口</a> 8080，通过执行以下命令得到更多启动参数，可以设置不同的端口号（当 8080 占用时）<br><code>fis server -h</code></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlBlogfis3.png" alt=""></p>
<p>PS:<br>启动 Web Server 以后，会自动打开浏览器，访问 <a href="http://127.0.0.1:8080" target="_blank" rel="external">http://127.0.0.1:8080</a> URL，这时即可查看到页面渲染结果。正如所有其他 Web Server，FIS3 内置的 Server 是常驻的，如果不重启计算机或者调用命令关闭是不会关闭的。所以后续只需访问对应链接即可，而不需要每次 release 就启动一次 server。</p>
<h3 id="文件监听">文件监听</h3><p>为了方便开发，FIS3 支持文件监听，当启动文件监听时，修改文件会构建发布。而且其编译是增量的，编译花费时间少。<br>FIS3 通过对 release 命令添加 -w 或者 —watch 参数启动文件监听功能。</p>
<p><code>fis3 release -w</code></p>
<p>添加 -w 参数时，程序不会执行终止；停止程序用快捷键 CTRL+C</p>
<h3 id="浏览器自动刷新">浏览器自动刷新</h3><p>文件修改自动构建发布后，如果浏览器能自动刷新，这是一个非常好的开发体验。FIS3 支持浏览器自动刷新功能，只需要给 release 命令添加 -L 参数，通常 -w 和 -L 一起使用。</p>
<p><code>fis3 release -wL</code></p>
<p>程序停止用快捷键 CTRL+C</p>
<h3 id="发布到远端机器">发布到远端机器</h3><p>开发项目后，需要发布到测试机（联调机），一般可以通过如 SMB、FTP 等上传代码。FIS3 默认支持使用 HTTP 上传代码，首先需要在测试机部署上传接收脚本（或者服务），这个脚本非常简单，下面的<code>receiver.php</code>给出了 php 的实现版本，可以把它放到测试机上某个 Web 服务根目录，并且配置一个 url 能访问到即可。<br>示例脚本是 php 脚本，测试机 Web 需要支持 PHP 的解析，如果需要其他语言实现，请参考这个 php 脚本实现。（假定这个 URL 是：<a href="http://cq.01.p.p.baidu.com:8888/receiver.php）" target="_blank" rel="external">http://cq.01.p.p.baidu.com:8888/receiver.php）</a><br>那么我们只需要在配置文件配置：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fis.match(<span class="string">'*'</span>, &#123;</span><br><span class="line">  deploy: fis.plugin(<span class="string">'http-push'</span>, &#123;</span><br><span class="line">    receiver: <span class="string">'http://cq.01.p.p.baidu.com:8888/receiver.php'</span>,</span><br><span class="line">    to: <span class="string">'/home/work/htdocs'</span> <span class="comment">// 注意这个是指的是测试机器的路径，而非本地机器</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p><strong>receiver.php</strong>:</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@error_reporting(E_ALL &amp; ~E_NOTICE &amp; ~E_WARNING);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mkdirs</span><span class="params">($path, $mod = <span class="number">0777</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (is_dir($path)) &#123;</span><br><span class="line">        <span class="keyword">return</span> chmod($path, $mod);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $old = umask(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(mkdir($path, $mod, <span class="keyword">true</span>) &amp;&amp; is_dir($path))&#123;</span><br><span class="line">            umask($old);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            umask($old);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'to'</span>])&#123;</span><br><span class="line">    $to = urldecode($_POST[<span class="string">'to'</span>]);</span><br><span class="line">    <span class="keyword">if</span>(is_dir($to) || $_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        header(<span class="string">"Status: 500 Internal Server Error"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(file_exists($to))&#123;</span><br><span class="line">            unlink($to);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $dir = dirname($to);</span><br><span class="line">            <span class="keyword">if</span>(!file_exists($dir))&#123;</span><br><span class="line">                mkdirs($dir);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>], $to) ? <span class="number">0</span> : <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'I\'m ready for that, you know.'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="替代内置Server">替代内置Server</h3><p>FIS3 内置了一个 Web Server 提供给构建后的代码进行调试。如果你自己启动了你自己的 Web Server 依然可以使用它们。</p>
<p>假设你的 Web Server 的根目录是 <code>/Users/my-name/work/htdocs</code>，那么发布时只需要设置产出目录到这个目录即可。</p>
<p><code>fis3 release -d /Users/my-name/work/htdocs</code><br>如果想执行 fis3 release 直接发布到此目录下，可在配置文件配置；</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fis.match(<span class="string">'*'</span>, &#123;</span><br><span class="line">  deploy: fis.plugin(<span class="string">'local-deliver'</span>, &#123;</span><br><span class="line">    to: <span class="string">'/Users/my-name/work/htdocs'</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="FIS内置语法">FIS内置语法</h3><ul>
<li><a href="http://fis.baidu.com/fis3/docs/user-dev/uri.html" target="_blank" rel="external">资源定位</a></li>
<li><a href="http://fis.baidu.com/fis3/docs/user-dev/inline.html" target="_blank" rel="external">资源嵌入</a></li>
<li><a href="http://fis.baidu.com/fis3/docs/user-dev/require.html" target="_blank" rel="external">声明依赖</a></li>
</ul>
<h2 id="FIS3使用">FIS3使用</h2><ul>
<li><a href="http://fis.baidu.com/fis3/docs/lv1.html#%E4%B8%80%E4%B8%AA%E5%A4%8D%E6%9D%82%E7%82%B9%E7%9A%84%E4%BE%8B%E5%AD%90" target="_blank" rel="external">利用现有FIS插件自动化构建Demo1</a></li>
<li><a href="http://fis.baidu.com/fis3/docs/lv2.html" target="_blank" rel="external">自定义重写FIS插件自动化构建Demo2</a></li>
<li><a href="http://fis.baidu.com/fis3/docs/lv3.html" target="_blank" rel="external">和后端项目配合的FIS插件自动化构建Demo3</a></li>
</ul>
<h2 id="FIS3使用心得+图文实例">FIS3使用心得+图文实例</h2><p>持续更新中…</p>
<h2 id="参考文献">参考文献</h2><ul>
<li><p><a href="http://fis.baidu.com/fis3/docs/beginning/intro.html" target="_blank" rel="external">FIS3官网</a></p>
</li>
<li><p><a href="http://www.imooc.com/learn/220" target="_blank" rel="external">FIS使用初级视频操作教程</a></p>
</li>
<li><p><a href="http://fis.baidu.com/fis3/docs/user-dev/extlang.html" target="_blank" rel="external">FIS3内置语法</a> </p>
</li>
<li><a href="http://fis.baidu.com/fis3/docs/api/command.html" target="_blank" rel="external">FIS3接口文档</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>接触FIS是在2014年11月左右，当时大二，在准备百度实习面试的时候网上迷路了，偶遇了FIS的官网，当时用了一下，觉得是一个基于Node.js的前端自动化解决方案，没太在意…后面在百度遇见了一些前端的小伙伴，才明白FIS的潜能，现在不管是自己的项目，还是以后公司的前端项目，都快离不来TA了，之前听一个学弟说最近他也在使用，并且存在不少问题，所以想写篇博文，给需要的小伙伴们。PS：我自己用的是MacOS系统，博文所述的FIS版本采用最新的FIS3。</p>]]>
    
    </summary>
    
      <category term="Javascript" scheme="http://daijiale.github.io/tags/Javascript/"/>
    
      <category term="Node.js" scheme="http://daijiale.github.io/tags/Node-js/"/>
    
      <category term="前端自动化工具" scheme="http://daijiale.github.io/tags/%E5%89%8D%E7%AB%AF%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【前端】移动端的Meta]]></title>
    <link href="http://daijiale.github.io/2016/01/30/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9A%84Meta/"/>
    <id>http://daijiale.github.io/2016/01/30/【前端】移动端的Meta/</id>
    <published>2016-01-30T15:02:01.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>合理设置 Meta 标签 对PC/手机版网站的搜索引擎优化，PC/手机浏览器的渲染展示都有非常大的帮助。对于桌面平台web布局中大家对meta标签再熟悉不过了，它永远位于 head 元素内部，做SEO的朋友一定对meta有种特殊的感情，这里，博主通过阅读大量博文，结合自身经验，来总结一下列PC端网页和移动端网页中常用的meta标签，并进行逐个分析；meta标签究竟起到哪些神奇的功能呢?</p>
<a id="more"></a>
</blockquote>
<h1 id="什么是Meta标签">什么是Meta标签</h1><p>　　Meta标签给搜索引擎提供了许多关于网页的信息。这些信息都是隐含信息,意味着对于网页自身的访问者是不可见的。</p>
<p>　　你可以在网页的元素中发现 标签。在过去,有人曾经问我它是否可以放在网页的，最好不要这样做。如果 标签被放在位置，某些浏览器可能无法识别它们，也就相当于你创建了无效的标签。</p>
<p>　　通常情况下， 标签会包含一个name属性，用来设置元数据。元数据的值放在content属性里面。你可以在 标签中使用各种名称/值对，让我们来看看其中的一些。</p>
<h1 id="PC端网页常见的一些Meta标签">PC端网页常见的一些Meta标签</h1><h2 id="Meta_Description">Meta Description</h2><p>　Meta description标签可能是最有用的标签之一。顾名思义，它会给搜索引擎提供关于这个网页的简短的描述。代码如下:<br>　<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"”description”"</span> <span class="attr">content</span>=<span class="string">"”Everything"</span> <span class="attr">you</span>=<span class="string">""</span> <span class="attr">need</span>=<span class="string">""</span> <span class="attr">to</span>=<span class="string">""</span> <span class="attr">know</span>=<span class="string">""</span> <span class="attr">about</span>=<span class="string">""</span> <span class="attr">meta</span>=<span class="string">""</span> <span class="attr">tags</span>=<span class="string">""</span> <span class="attr">for</span>=<span class="string">""</span> <span class="attr">search</span>=<span class="string">""</span> <span class="attr">engine</span>=<span class="string">""</span> <span class="attr">optimization</span>”=<span class="string">""</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>　　这个标签曾经在搜索排名中占有很大的权重，但随着算法的不断更新升级，它的地位也逐渐降低。它虽然不会提高网站排名，但是，因为它会被用在搜索引擎的结果页，所以依然有用。<br>　　这也就意味着它仍然可以提高你的网页点击率。毕竟，当用户搜索的关键词与之相匹配时，会以粗体显示突出显示。这就是为什么一个好的页面说明 (利用关键字的) 可以显示更多与用户相关的信息，进而提高了点击率。推荐的description长度为160 个字符。<br>　　但是如果你没有使用description标签或者description标签为空时，会发生什么呢?搜索引擎仍会在搜索结果页显示出自己创键的一小段文字。大多数的结果都不是用户需要的，也就意味着你将失去用户点击网页的机会。</p>
<h2 id="Meta_Robots">Meta Robots</h2><p>　　我们在之前的教程中已经接触过Meta robots标签。如果你没有机会回去阅读它，这里有一段简短的介绍：</p>
<p>　　Meta robots标签管理着搜索引擎是否可以进入网页，你可以用它来允许或不允许搜索引擎来获取你的网页、进入你网页中的子链接或对你的网页存档。例如：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"”robots”"</span> <span class="attr">content</span>=<span class="string">"”noindex,"</span> <span class="attr">nofollow</span>”=<span class="string">""</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<pre><code>这个meta 标签告诉搜索引擎不要获取网页，并且阻止其进入链接。如果你不小心使用了两个矛盾的术语 <span class="comment">(例如noindex和index)</span>，谷歌会选择最具限制性的选项。
为什么这个标签会对搜索引擎优化<span class="comment">(SEO)</span>起作用呢?首先，它可以防止对拷贝内容的冗余抓取，例如页面的打印版页面。它也可能会对那些内容不完整的页面或者而存在私密信息的网页起作用。
</code></pre><h2 id="Title">Title</h2><p>　　专业的讲，title标签不是meta标签，但他们都放在相同位置。我之所以把title标签放在这里是因为它对搜索引擎优化很重要。</p>
<p>　　在所有的HTML文档中，title标签都是不可缺少的。它定义了整个文档的标题.标题通常会显示在两个不同的地方;浏览器的头部标签和搜索结果页。这就意味着title标签在点击率(CTR)和排名上有很重要的影响。一个好的标题应该包含关键字，而且最好放在标题的开头部分。请记住，那些匹配到用户搜索的关键字会以粗体显示。另一件你应该牢记在心的事情就是标题的长度。谷歌会限制标题为70个字符，所以偶尔你可能需要书写一个合适的标题。Dan Shure发表过一篇很不错的关于标题的文章，叫are your titles irresistibly click worthy and viral?，包含了很多有意思的知识点。</p>
<p>　　</p>
<h1 id="PC端网页一些不经常使用的Meta标签">PC端网页一些不经常使用的Meta标签</h1><h2 id="Meta_Content_Type_(charset)">Meta Content Type (charset)</h2><pre><code>`meta content <span class="typedef"><span class="keyword">type</span>`标签被用来声明网页的字符编码，为了防止浏览器产生编码问题最好加上这个属性。但是它不会影响搜索排名或点击率<span class="container">(<span class="type">CTR</span>)</span>。</span>
</code></pre><h2 id="Meta_Keywords">Meta Keywords</h2><p>　　这个标签在过去很重要，但是现在却没什么价值了。现在没有一个主流的搜索引擎使用<code>meta keywords</code>来判断网页的内容了。<br>   　在<code>meta keywords</code>标签里面，你可以存储几个关于网页内容的关键字。然而，它却不会提高你的排名。如果你想要实现它(尽管我不知道你为什么这样做)你可以用如下代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"”keywords”"</span> <span class="attr">content</span>=<span class="string">"”meta"</span> <span class="attr">engine</span>=<span class="string">""</span> <span class="attr">optimization</span>”=<span class="string">""</span> <span class="attr">tags</span>,<span class="attr">search</span>=<span class="string">""</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Meta_Language">Meta Language</h2><p>　　这个标签之前是用来声明网页语言的。可以告知屏幕阅读器和其它文本处理器他们正在处理的语言以便更好的工作。这就是为什么<code>meta language</code>的content声明为什么可以为fr。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"fr"</span> <span class="attr">http-equiv</span>=<span class="string">"content-language"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Notranslate">Notranslate</h2><p>　　有时，Google在结果页面会提供一个翻译链接，但有时候你不希望出现这个链接，你可以添加这样一个meta标签：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"”google”"</span> <span class="attr">content</span>=<span class="string">"”notranslate”"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Refresh">Refresh</h2><p>　　使用这个meta标签你可以控制浏览器在一段时间之后自动刷新。举例说明，下面的代码表示每隔30秒网页自动更新：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"”30”"</span> <span class="attr">http-equiv</span>=<span class="string">"”refresh”"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>　　你也可以在刷新之后跳转到另外一个页面，看看下面这个例子：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"”30;URL=’http://website.com’”"</span> <span class="attr">http-equiv</span>=<span class="string">"”refresh”"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>　　W3C是不推荐使用这个标签的，因为它会令用户产生迷惑。另外，它对搜索排名没有任何影响。</p>
<h1 id="PC端网页中的Meta总结">PC端网页中的Meta总结</h1><p>　　简单的说，有三个meta标签，你应该关注一下：description、robots、title(经常被视为是，但专业来讲不是).<br>　　description标签被用来显示更多有关网页内容的信息，搜索引擎也会在搜索引擎结果页面(SERP)使用它。robots标签用来阻止搜索引擎获取拷贝页面、私密页面和未完成的页面。最后，最重要的title标签，控制它在70个字符以下，并在其中使用关键词。<br> 　keywords标签的时代已经过去，最好不在使用它。其他一些比较重要的标签(有关搜索引擎优化)：language、content、refresh、nontranslate。<br><strong>相关的meta设置</strong>：<br>　　<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"5;url="</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"copyright"</span> <span class="attr">href</span>=<span class="string">"copyright.html"</span> 　/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"150 words"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"your tags"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span><br><span class="line">all：文件将被检索，且页面上的链接可以被查询;</span><br><span class="line">none：文件将不被检索，且页面上的链接不可以被查询;</span><br><span class="line">index：文件将被检索;</span><br><span class="line">follow：页面上的链接可以被查询;</span><br><span class="line">noindex：文件将不被检索;</span><br><span class="line">nofollow：页面上的链接不可以被查询。</span><br><span class="line">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=<span class="string">"author name"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"google"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"googlebot"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"verify"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 启用 WebApp 全屏模式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span> <span class="attr">content</span>=<span class="string">"yes"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 隐藏状态栏/设置状态栏颜色：只有在开启WebApp全屏模式时才生效。content的值为default | black | black-translucent 。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-status-bar-style"</span> <span class="attr">content</span>=<span class="string">"black-translucent"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 添加到主屏后的标题 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-title"</span> <span class="attr">content</span>=<span class="string">"标题"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 忽略数字自动识别为电话号码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"telephone=no"</span> <span class="attr">name</span>=<span class="string">"format-detection"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 忽略识别邮箱 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"email=no"</span> <span class="attr">name</span>=<span class="string">"format-detection"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-itunes-app"</span> <span class="attr">content</span>=<span class="string">"app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 添加智能 App 广告条 Smart App Banner：告诉浏览器这个网站对应的app，并在页面上显示下载banner:https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/</span><br><span class="line">SafariWebContent/PromotingAppswithAppBanners/PromotingAppswithAppBanners.html --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"HandheldFriendly"</span> <span class="attr">content</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 微软的老式浏览器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"MobileOptimized"</span> <span class="attr">content</span>=<span class="string">"320"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- uc强制竖屏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"screen-orientation"</span> <span class="attr">content</span>=<span class="string">"portrait"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- QQ强制竖屏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"x5-orientation"</span> <span class="attr">content</span>=<span class="string">"portrait"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- UC强制全屏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"full-screen"</span> <span class="attr">content</span>=<span class="string">"yes"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- QQ强制全屏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"x5-fullscreen"</span> <span class="attr">content</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- UC应用模式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"browsermode"</span> <span class="attr">content</span>=<span class="string">"application"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- QQ应用模式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"x5-page-mode"</span> <span class="attr">content</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- windows phone 点击无高光 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"msapplication-tap-highlight"</span> <span class="attr">content</span>=<span class="string">"no"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h1 id="移动端Meta_之_viewport">移动端Meta 之 viewport</h1><p>　　说到移动平台meta标签，那就不得不说一下viewport了，那么什么是viewport呢?<br>　　viewport即可视区域，对于桌面浏览器而言，viewport指的就是除去所有工具栏、状态栏、滚动条等等之后用于看网页的区域。对于传统WEB页面来说，980的宽度在iphone上显示是很正常的，也是满屏的，但对于webapp而言，可能就有点问题了，在iphone上我们的webapp在竖屏下通常宽度都是320，这时我们320页面在iphone上显示成啥效果呢?有人可能认为iPhone不是320的宽度么，感觉应该是满屏的吧，事实呢?我们来看一如下布局在iPhone上的显示情况：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"> </span><br><span class="line">div,body&#123; </span><br><span class="line">padding:0; </span><br><span class="line">margin:0; </span><br><span class="line">&#125; </span><br><span class="line">body&#123; </span><br><span class="line">padding-top:100px; </span><br><span class="line">color:#fff; </span><br><span class="line">&#125; </span><br><span class="line">div&#123; </span><br><span class="line">width:320px; </span><br><span class="line">height:100px; </span><br><span class="line">margin:0 auto; </span><br><span class="line">background:#000; </span><br><span class="line">text-align:center; </span><br><span class="line">font:30px/100px Arial; </span><br><span class="line">&#125; </span><br><span class="line"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> </span><br><span class="line">AppUE </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>因此我们必须改变viewport，我们就有如下几种属性值可以设置：</p>
<ul>
<li>width: viewport 的宽度 (范围从 200 到 10,000 ，默认为 980 像素 )</li>
<li>height: viewport 的高度 (范围从 223 到 10,000 )</li>
<li>initial-scale: 初始的缩放比例 (范围从&gt;0到 10 )</li>
<li>minimum-scale: 允许用户缩放到的最小比例</li>
<li>maximum-scale: 允许用户缩放到的最大比例</li>
<li>user-scalable: 用户是否可以手动缩放</li>
</ul>
<p>　　对于这些属性，我们可以设置其中的一个或者多个，并不需要你同时都设置，iPhone 会根据你设置的属性自动推算其他属性值，而非直接采用默认值。</p>
<p>　　如果你把initial-scale=1 ，那么 width 和 height在竖屏时自动为320X356 (不是320x480 因为地址栏等都占据空间 )，横屏时自动为 480x208。类似地 ，如果你仅仅设置了 width ，就会自动推算出initial-scale 以及height。例如你设置了 width=320 ，竖屏时 initial-scale 就是 1 ，横屏时则变成 1.5 了。 那么到底这些设置如何让 Safari 知道 ?其实很简单 ，就一个 meta ，形如 ：<br>　　<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"”viewport”"</span> <span class="attr">content</span>=<span class="string">"”width=device-width;"</span> <span class="attr">user-scalable</span>=<span class="string">"0;”"</span> <span class="attr">maximum-scale</span>=<span class="string">"1.0;"</span> <span class="attr">initial-scale</span>=<span class="string">"1.0;"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>好了，我们就可以按全屏来布局我们的页面了，不用再担心页面显示的很小了!。</p>
<h1 id="移动端Meta_之_format-detection">移动端Meta 之 format-detection</h1><p>你明明写的一串数字没加链接样式，而iPhone会自动把你这个文字加链接样式、并且点击这个数字还会自动拨号!想去掉这个拨号链接该如何操作呢?这时我们的meta又该大显神通了，代码如下：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"”format-detection”"</span> <span class="attr">content</span>=<span class="string">"”telephone=no”"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>telephone=no就禁止了把数字转化为拨号链接!telephone=yes就开启了把数字转化为拨号链接，要开启转化功能，这个meta就不用写了,在默认是情况下就是开启!</p>
<h1 id="移动端Meta_之_apple-mobile-web-app-capable">移动端Meta 之 apple-mobile-web-app-capable</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"”apple-mobile-web-app-capable”"</span> <span class="attr">content</span>=<span class="string">"”yes”"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这meta的作用就是删除默认的苹果工具栏和菜单栏。content有两个值”yes”和”no”,当我们需要显示工具栏和菜单栏时，这个行meta就不用加了，默认就是显示。</p>
<h1 id="移动端Meta_之_apple-mobile-web-app-status-bar-style">移动端Meta 之 apple-mobile-web-app-status-bar-style</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"”apple-mobile-web-app-status-bar-style”"</span> <span class="attr">content</span>=<span class="string">"”default”"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"”apple-mobile-web-app-status-bar-style”"</span> <span class="attr">content</span>=<span class="string">"”black”"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"”apple-mobile-web-app-status-bar-style”"</span> <span class="attr">content</span>=<span class="string">"”black-translucent”"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>作用是控制状态栏显示样式</p>
<ul>
<li>status-bar-style:black </li>
<li>status-bar-style:black-translucent</li>
</ul>
<h1 id="移动端网站中一般需要添加哪几种_Meta_标签：">移动端网站中一般需要添加哪几种 Meta 标签：</h1><h2 id="viewport">viewport</h2><p>viewport 几乎已经是公认的标准了，最初是由苹果公司创建，用于 iPhone 上面的移动版 Safari，由于 iPhone 的大卖，大部分其他移动浏览器都接受，比如 Opera Mobile, iPhone, Android, Iris, IE, BlackBerry, Obigo, Firefox。<br>　　最基本的例子，在移动上使站点全屏宽度：<br>　　<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="HandheldFriendly">HandheldFriendly</h2><p>这个标签和下面介绍的 MobileOptimized 是功能机时代的事实上标签。</p>
<p>　　HandheldFriendly 标签最早在 AvantGo 浏览用来标示移动内容的，后来变成一个通用的标准用来标示移动站点，但是不知道这个标签的支持情况。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"HandheldFriendly"</span> <span class="attr">content</span>=<span class="string">"true"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>　　</p>
<h2 id="MobileOptimized">MobileOptimized</h2><p>　　这是一个 Windows 专有的 meta 标签，最终成为用于识别移动内容的另一种方法，但是该标签的缺点是，特定的宽度必须给出，再次，这个标签的支持情况也是未知的：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"MobileOptimized"</span> <span class="attr">content</span>=<span class="string">"320"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>
<h1 id="参考文献">参考文献</h1><ul>
<li><a href="http://www.css88.com/archives/5480/comment-page-1" target="_blank" rel="external">移动前端不得不了解的html5 head 头标签</a></li>
<li><a href="http://www.bitscn.com/school/jzjq/201411/407135.html" target="_blank" rel="external">在移动网站中需要添加哪几种 Meta 标签？</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>合理设置 Meta 标签 对PC/手机版网站的搜索引擎优化，PC/手机浏览器的渲染展示都有非常大的帮助。对于桌面平台web布局中大家对meta标签再熟悉不过了，它永远位于 head 元素内部，做SEO的朋友一定对meta有种特殊的感情，这里，博主通过阅读大量博文，结合自身经验，来总结一下列PC端网页和移动端网页中常用的meta标签，并进行逐个分析；meta标签究竟起到哪些神奇的功能呢?</p>]]>
    
    </summary>
    
      <category term="html5" scheme="http://daijiale.github.io/tags/html5/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【转载】什么才算真正的编程能力？]]></title>
    <link href="http://daijiale.github.io/2016/01/25/%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E4%BB%80%E4%B9%88%E6%89%8D%E7%AE%97%E7%9C%9F%E6%AD%A3%E7%9A%84%E7%BC%96%E7%A8%8B%E8%83%BD%E5%8A%9B%EF%BC%9F/"/>
    <id>http://daijiale.github.io/2016/01/25/【转载】什么才算真正的编程能力？/</id>
    <published>2016-01-25T11:20:32.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<p>靠谷歌和复制别人的轮子，虽然我做出了很多东西，可是我并不觉得自己能力上有提升，倒是利用搜索引擎的能力的确提升了不少。而学校里另外一部分在搞ACM的人，他们每天都在刷题练算法，但单凭我个人的感受感觉他们似乎对工程上有些东西并不了解，或许算法的能力才算是实打实的编程能力？那”胶水”的能力和整合轮子的能力算不算编程能力呢?所以我现在就很困惑，所谓的编程能力到底是什么，我该如何提升自己的编程能力？什么才算真正的编程能力？<br><a id="more"></a></p>
<blockquote>
<p>来源：知乎</p>
<p>链接：<a href="https://www.zhihu.com/question/31034164/" target="_blank" rel="external">https://www.zhihu.com/question/31034164/</a></p>
</blockquote>
<h2 id="本文综合整理自知乎同名问答帖。题主的问题补充如下：">本文综合整理自知乎同名问答帖。题主的问题补充如下：</h2><p>还在读书，也在实验室帮忙做了些东西，自己也搭过几个网站。在周围人看来似乎好像我很厉害，做了那么多东西，但是我发现这些东西虽然是我做的，但是实际上我手把手自己写的代码却并没有多少，很多都是用开源的东西，我写的代码无非是把别人的东西整合下，类似于胶水一样的工作。</p>
<p>我之前所认为的编程是全手动一行一行敲代码，但是现在我发现哪怕是工程上，也有很多人是复制黏贴来解决问题的，并且提倡不要重复造轮子。</p>
<p>但是靠谷歌和复制别人的轮子，虽然我做出了很多东西，可是我并不觉得自己能力上有提升，倒是利用搜索引擎的能力的确提升了不少。而学校里另外一部分在搞ACM的人，他们每天都在刷题练算法，但单凭我个人的感受感觉他们似乎对工程上有些东西并不了解，或许算法的能力才算是实打实的编程能力？那”胶水”的能力和整合轮子的能力算不算编程能力呢?</p>
<p>所以我现在就很困惑，所谓的编程能力到底是什么，我该如何提升自己的编程能力？</p>
<h2 id="下面是_刘贺_的回复：（已征得同意）">下面是 刘贺 的回复：（已征得同意）</h2><p>非常好的一个问题。这可能是我在知乎见到过的问编程有关的问题中问得最好的一个了。我非常喜欢这个问题。</p>
<p>计算机科学有两类根本问题。一类是理论：算法，数据结构，复杂度，机器学习，模式识别，等等等。一类是系统：操作系统，网络系统，分布式系统，存储系统，游戏引擎，等等等等。</p>
<p>理论走的是深度，是在追问在给定的计算能力约束下如何把一个问题解决得更快更好。而系统走的是广度，是在追问对于一个现实的需求如何在众多的技术中设计出最多快好省的技术组合。</p>
<p>搞ACM的人，只练第一类。像你这样的更偏向于第二类。其实挺难得的，但很可惜的是第二类能力没有简单高效的测量考察方法，不像算法和数据结构有ACM竞赛，所以很多系统的苗子都因为缺少激励和正确引导慢慢就消隐了。</p>
<p>所以比尔盖茨才会说，看到现在学编程的人经常都把编程看作解各种脑筋急转弯的问题，他觉得很遗憾。</p>
<p>做系统，确实不提倡“重复发明轮子”。但注意，是不提倡“重复发明”，不是不提倡“重新制造”。恰恰相反的，我以为，系统的编程能力正体现在“重新制造”的能力。</p>
<p>能把已有的部件接起来，这很好。但当你恰好缺一种关键的胶水的时候，你能写出来吗？当一个已有的部件不完全符合你的需求的时候，你能改进它吗？如果你用的部件中有bug，你能把它修好吗？在网上繁多的类似功能的部件中，谁好谁坏？为什么？差别本质吗？一个开源代码库，你能把它从一个语言翻译到另一个语言吗？从一个平台移植到另一个平台吗？能准确估计自己翻译和移植的过程需要多少时间吗？能准确估计翻译和移植之后性能是会有提升还是会有所下降吗？</p>
<p>系统编程能力体现在把已有的代码拿来并变成更好的代码，体现在把没用的代码拿来并变成有用的代码，体现在把一个做好的轮子拿来能画出来轮子的设计蓝图，并用道理解释出设计蓝图中哪些地方是关键的，哪些地方是次要的，哪些地方是不容触碰的，哪些地方是还可以改进的。</p>
<p>如果你一点不懂理论，还是应该学点的。对于系统性能的设计上，算法和数据结构就像在自己手头的钱一样，它们不是万能的，但不懂是万万不行的。</p>
<p>怎么提高系统编程能力呢？土办法：多造轮子。就像学画画要画鸡蛋一样，不是这世界上没有人会画鸡蛋，但画鸡蛋能驯服手指，感受阴影线条和笔触。所以，自己多写点东西吧。写个编译器？渲染器？操作系统？web服务器？web浏览器？部件都一个个换成自己手写的，然后和已有的现成部件比一比，看看谁的性能好，谁的易用性好？好在哪儿？差在哪儿？为什么？</p>
<p>更聪明一点的办法：多拆轮子。多研究别人的代码是怎么写的。然而这个实践起来经常很难。原因：大部分工业上用的轮子可能设计上的思想和技术是好的，都设计和制造过程都很烂，里面乱成一团，让人乍一看毫无头绪，导致其对新手来说非常难拆。这种状况其实非常糟糕。所以，此办法一般只对比较简单的轮子好使，对于复杂的轮子，请量力而行。</p>
<p>轮子不好拆，其实是一个非常严重的问题。重复发明轮子固然是时间的浪费，但当轮子复杂而又不好拆的时候，尤其是原来造轮子的人已经不在场的时候，重新发明和建造轮子往往会成为无奈之下最好的选择。这是为什么工业界在明知道重复发明/制造轮子非常不好的情况下还在不断重复发明/制造轮子的根本原因。</p>
<p>程序本质是逻辑演绎的形式化表达，记载的是人类对这个世界的数字化理解。不能拆的轮子就像那一篇篇丢了曲谱的宋词一样，能读，却不能唱。</p>
<p>鄙人不才，正在自己研究怎么设计建造一种既好用又好拆的轮子。您没那么幸运，恐怕是等不到鄙人的技术做出来并发扬光大了。在那之前，多造轮子，多拆好拆的小轮子，应该是提高编程能力最好的办法了。</p>
<p><strong>（小编转注：<a href="http://zhuanlan.zhihu.com/shanhu" target="_blank" rel="external">http://zhuanlan.zhihu.com/shanhu</a> 这是刘贺的专栏。）</strong></p>
<h2 id="下面是_mu_mu_的回复：（已征得同意）">下面是 mu mu 的回复：（已征得同意）</h2><p>懂得取舍。</p>
<p>在有限的时间内，几乎没有系统可以做到完美。要快，要安全，高并发，易扩展，效率高，容易读，高内聚，低耦合…</p>
<p>大到一个网站，小到几个class，工程师都要清楚，要取什么，舍什么，这并不是那么容易的事。我们都有自己的性格，有的求新，有的求稳，有的求快，但具体到一个项目时，知道如何取舍对这个项目最好，很重要。</p>
<p>学校里的作业，没人在意你是不是写在一个大的main()里面，能跑就行。但做项目的时候，太多的东西要考虑，有时候，宁可简单易读，也不用快那么一点点；有时候，要做太多看不到的工作，却丝毫马虎不得；有时候，写了不如不写，留白也是一个学问。</p>
<p>曾经接手个项目，里面几乎所有的class，每个都有interface，各种继承，各种实现，理由是灵活性高，易扩展。真的易扩展吗？</p>
<p>我不知道。没多久，客户的需求就改了，各种拎不清的继承实现都化为乌有，一大半要重写。</p>
<p>问题在哪里？</p>
<p>不是编程不好，而是取舍的不好。在那个阶段，为30%的需求，花200%的努力，追求设计的滴水不漏，却舍弃快速实现，取得反馈的时机，这就是失误。需求总会变，客户看到越早，修改越早，影响越小。</p>
<p>很聪明的人，也可能做出很难用的系统，不一定是编程不好，可能是不愿，或不屑于取舍。不同的阶段，不同的项目，要取舍的东西也不同。编程只是手段，目的是解决问题，能力高不高，要看问题解决的好不好。不在于使用了什么高端算法，或是复杂的框架。</p>
<p>懂得如何取舍并不容易，需要对问题。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>靠谷歌和复制别人的轮子，虽然我做出了很多东西，可是我并不觉得自己能力上有提升，倒是利用搜索引擎的能力的确提升了不少。而学校里另外一部分在搞ACM的人，他们每天都在刷题练算法，但单凭我个人的感受感觉他们似乎对工程上有些东西并不了解，或许算法的能力才算是实打实的编程能力？那”胶水”的能力和整合轮子的能力算不算编程能力呢?所以我现在就很困惑，所谓的编程能力到底是什么，我该如何提升自己的编程能力？什么才算真正的编程能力？<br>]]>
    
    </summary>
    
      <category term="程序猿素养" scheme="http://daijiale.github.io/tags/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%B4%A0%E5%85%BB/"/>
    
      <category term="转载博文" scheme="http://daijiale.github.io/categories/%E8%BD%AC%E8%BD%BD%E5%8D%9A%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【个人】2015 to 2016]]></title>
    <link href="http://daijiale.github.io/2015/12/31/%E3%80%90%E4%B8%AA%E4%BA%BA%E3%80%912015to2016/"/>
    <id>http://daijiale.github.io/2015/12/31/【个人】2015to2016/</id>
    <published>2015-12-31T13:37:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<p>2015这一年发生了太多事，自己飞速地成长，也是毕业季的开始，走在又一个十字路口，总有些话想在跨年夜说。<br><a id="more"></a></p>
<h1 id="2015上半年">2015上半年</h1><p>上半年在经历北漂，真的很感谢当时团队里的导师和同事们，很幸运能遇见你们，让我在百度这样的顶级互联网公司里可以扎根成长。直到现在，仍然很怀念那段<a href="http://daijiale.github.io/2015/06/29/%E3%80%90%E4%B8%AA%E4%BA%BA%E3%80%91%E5%9C%A8%E7%99%BE%E5%BA%A6%E5%AE%9E%E4%B9%A0%E7%9A%84%E9%82%A3%E4%BA%9B%E6%97%A5%E5%AD%90/">在百度实习的日子</a>。</p>
<h1 id="2015下半年">2015下半年</h1><ul>
<li>下半年刚回到学校就开始着手准备校招。7-8月一边消化之前的实习成果，一边帮朋友公司做了一个婚庆主题的创业项目，挣了一些旅游费，最近听说这个项目在朋友手里越做越大了，实体店成立后更拿了500万投资，野蛮生长中…</li>
</ul>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/zhenxijuwaibao.png" alt=""></p>
<ul>
<li>9月-10月校招季，拿了百度、腾讯、小米三家的offer后就不再跑招聘会了，这里真的要感谢之前实习团队的Boss们，给我留了一个HC。参加了校招，你才能体会到自己和研究生大军们的能力差距，就拿自己腾讯QQ音乐的offer来讲，本科生只凭借校招面试就可以得到BAT的认可，真得很不容易。最后因为城市和团队的原因，我选择了去北京，去百度。一是很珍惜以前的Boss和团队，二是觉得在北京可以更好的发展自己的兴趣爱好。</li>
</ul>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlBlogbaiduoffer.png" alt=""></p>
<ul>
<li>之前上半年，自己把自己养成了一个小胖子，回到学校后，重新制定了自己的训练计划：跑步、健身、跳舞。3个月减了15斤，塑形效果也好了很多，更养成了很好的生活习惯，挺佩服自己的，下面是几张对比图。</li>
</ul>
<p><img src="" alt=""><br><img src="" alt=""><br><img src="" alt=""></p>
<ul>
<li><p>校招忙完后，玩耍之余，也自己异想天开地想做做电子商务（<a href="http://weidian.com/?userid=760541744&amp;infoType=1" target="_blank" rel="external">程序猿之家</a>），1个月的时间——筹划、跑货、搭建微店、运营、推广、研发、编辑、美工、财务…所有角色统统都经历了一遍，很丰富，很历练，感谢身边支持我的朋友们，小试牛刀后，结果还不错，基本的东西已经筹备好了，试营了一个月，也有上千流水。等以后回北京，工作生活稳定后，业余再弄。<br><img src="" alt=""><br><img src="" alt=""></p>
</li>
<li><p>年末10-12月，好好锻炼了一下自己的摄影和舞蹈水平，感觉又上了一个台阶，也认识了这两个领域里很多厉害的朋友。参加了一次成都的poppin比赛, 一次跨年荧光跑比赛，16进8的成绩也让自己很满意，Keep on！</p>
</li>
<li><p>2016期许：更好的利用起时间，回家看看父母，Keep coding、fitting and dancing。和朋友们一起enjoy life！</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>2015这一年发生了太多事，自己飞速地成长，也是毕业季的开始，走在又一个十字路口，总有些话想在跨年夜说。<br>]]>
    
    </summary>
    
      <category term="个人故事" scheme="http://daijiale.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%95%85%E4%BA%8B/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【PHP】PhpStorm使用入门+Mac下PHP工作开发流搭建]]></title>
    <link href="http://daijiale.github.io/2015/12/25/%E3%80%90PHP%E3%80%91PHPStorm%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8+Mac%E4%B8%8BPHP%E5%B7%A5%E4%BD%9C%E5%BC%80%E5%8F%91%E6%B5%81%E6%90%AD%E5%BB%BA/"/>
    <id>http://daijiale.github.io/2015/12/25/【PHP】PHPStorm使用入门+Mac下PHP工作开发流搭建/</id>
    <published>2015-12-25T03:56:11.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><blockquote>
<p>换了RetineMacPro2015之后，还没怎么做PHP的大型项目，之前很多小的Web后端都使用的MAMP来进行PHP开发，因为项目小，基本都不要太多调试，所以MAMP还挺满足需求的，但是也受够了只能通过<code>echo</code>,<code>print</code>来行调试的窘境。所以有了这篇博客，也为了帮助以后有需要的童鞋们可以少走弯路。<br><a id="more"></a></p>
</blockquote>
<h1 id="Brew安装">Brew安装</h1><blockquote>
<p>玩过ubuntu的童鞋应该都很清楚：在使用ubuntu的过程中apt-get是一个及其重要的工具，负责了几乎所有软件的安装、卸载、更新工作。使用简单但功能强大。如果使用Mac OS，开启<code>终端</code>（觉得终端也不好用的，可以看看这个——<a href="https://www.zhihu.com/question/29442452" target="_blank" rel="external">如何善加利用 Mac 下的 Terminal ？</a>,博主现在用的是<a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="external">Zsh</a>），之后发现一些好用的命令行工具都没有，比如wget或unrar，这很郁闷。然而，令人兴奋的是：<code>Brew</code>是<code>apt-get</code>的一个替代品，这也是为什么我要在这篇博客里先强调要安装<code>Brew</code>的原因。</p>
</blockquote>
<ul>
<li><a href="http://brew.sh/index_zh-cn.html" target="_blank" rel="external">官网安装说明</a></li>
</ul>
<h1 id="Phpstorm安装">Phpstorm安装</h1><p>为什么选用<code>Phpstorm</code>，因为博主有新版强迫症（Linux下还是建议直接<code>Vim</code>）。大家可以结合自己的调研和猿性来选择最称手的IDE，下面有篇博文参考：<a href="http://www.cnblogs.com/lishiyun19/p/4297791.html" target="_blank" rel="external">PHP集成开发环境对比</a>。</p>
<ul>
<li><a href="http://pan.baidu.com/s/1gdWJJXL" target="_blank" rel="external">Phpstorm10.0.2 for OSX 以及破解方法打包下载</a></li>
</ul>
<p>注意：因为Phpstorm执行调试程序需要指定Php版本，而Mac系统自带安装的PHP是5.5.x版本，位于usr/bin/php目录下，此目录并无php.ini以及更多php扩展库文件，所以需要我们用到之前安装的<code>Brew</code>来进行自定义的PHP版本下载，默认下载路径到usr/local/etc/php/下。</p>
<ul>
<li><a href="http://keys4free.com/jetbrains-phpstorm-10-license-key/" target="_blank" rel="external">PhpStorms10.0.4 license在线激活</a><ul>
<li>license server address：<a href="http://us.idea.lanyus.com" target="_blank" rel="external">http://us.idea.lanyus.com</a><h1 id="Brew_安装PHP和PHP扩展库">Brew 安装PHP和PHP扩展库</h1></li>
</ul>
</li>
</ul>
<p>打开终端：<br>参看如下步骤：<a href="http://www.phperz.com/article/14/0819/18934.html" target="_blank" rel="external">安装指南</a></p>
<p>注意：因为brew版本更新原因：可能会出现如下问题：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Error: Formulae found in multiple taps:</span><br><span class="line"> * homebrew/php/php53</span><br><span class="line"> * josegonzalez/php/php53</span><br><span class="line">Please use the fully-qualified name e.g. homebrew/php/php53 to refer the formula.</span><br></pre></td></tr></table></figure>
<p>博主的解决方案是：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew untap josegonzalez/php</span><br><span class="line">brew tap --repair</span><br><span class="line">brew update</span><br></pre></td></tr></table></figure>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlBlogbrew_fix_bug.png" alt=""></p>
<h1 id="PhpStorm构建Xdebug进行调试">PhpStorm构建Xdebug进行调试</h1><ul>
<li>首先在Phpstorm中指定好刚下载好的自定义Php版本路径（含有php.int和其他扩展库）。</li>
<li><a href="http://www.cnblogs.com/lishiyun19/p/4470086.html" target="_blank" rel="external">参考教程</a>，配置Xdebug。</li>
</ul>
<h1 id="PhpStorm构建MAMP服务器测试环境">PhpStorm构建MAMP服务器测试环境</h1><ul>
<li><a href="http://blog.sina.com.cn/s/blog_a30629730102v6sc.html" target="_blank" rel="external">参考教程</a> 配置，成功后，测试如下图所示：<br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlBlog_phpstormtest.png" alt=""></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言">前言</h1><blockquote>
<p>换了RetineMacPro2015之后，还没怎么做PHP的大型项目，之前很多小的Web后端都使用的MAMP来进行PHP开发，因为项目小，基本都不要太多调试，所以MAMP还挺满足需求的，但是也受够了只能通过<code>echo</code>,<code>print</code>来行调试的窘境。所以有了这篇博客，也为了帮助以后有需要的童鞋们可以少走弯路。<br>]]>
    
    </summary>
    
      <category term="PHP" scheme="http://daijiale.github.io/tags/PHP/"/>
    
      <category term="PhpStorm" scheme="http://daijiale.github.io/tags/PhpStorm/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【个人】个人主页/Blog迁移日记]]></title>
    <link href="http://daijiale.github.io/2015/12/10/%E3%80%90%E4%B8%AA%E4%BA%BA%E3%80%91Blog%E8%BF%81%E7%A7%BB%E6%97%A5%E8%AE%B0/"/>
    <id>http://daijiale.github.io/2015/12/10/【个人】Blog迁移日记/</id>
    <published>2015-12-10T11:37:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<p><strong>以下所指“更新”：均为Blog技术更新，非文章更新</strong></p>
<h1 id="第一次更新_个人Blog">第一次更新_个人Blog</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;说起自己的第一个Blog，要从小学刚开通QQ空间开始，具体几年级已经记不清了，那个时候刚甩掉纸质日记本，然后就迈入网络日志的深坑。以前倒是产出了不少优质日志，不过都是些多愁善感的随便，至今都已经封存进<em>私密日日记</em>中(如下图)：<img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogpic_qqzonesec.PNG" alt=""><br><a id="more"></a></p>
<h1 id="第二次更新_个人Blog">第二次更新_个人Blog</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;后面高中开始玩人人，Blog也顺势搬到人人。。。现在想来这搬迁史也很简单——围绕社交圈，毕竟Blog写出来是给人看的，而QQzone和人人都是一个很好的社交载体。当然，如今的人人，我早已放弃，一个月都不登一次的这种，blog数据也全部清除了，高中写的都是些没营养的东西，个人认为没有存在的价值。<br>最后留张图纪念一下曾经的人人帐号：<img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogpicrenren.PNG" alt=""></p>
<h1 id="第三次更新_个人Blog">第三次更新_个人Blog</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;后面因为大学专业性质原因，再加上由于个人兴趣先接触的知识是Web开发，所以打算通过自己编写代码，建立带有自己专属域名的独立Blog全站（其实是不知道做什么内容。。。就以Blog为题材了，而且身为一个程序猿，Blog是撑脸面的东西）。正如很多刚入门的小白一样：最初选用的技术框架是 <code>PHP+MySQL</code>，边学边写，坚持了一段时间后发现根本没法拿出手，在人生导师 <code>@阔空晴云</code>（亦师亦友的关系，大学同学，年级传奇….我Blog友情链接有他的Blog..但是，为保留他的个人隐私，我就不透露<strong>林志豪</strong>的<strong>真名</strong>了）的建议下，<br>后来选用了知名度很大的 <code>wordpress</code> 框架去快速开发能拿得出手的Blog，那也是我第一次接触框架类的东西，在那之前都是直接C++和C做底层开发，js和html也都是从新建文件开始码起，—&gt;你懂得…从大众空间到自己独立虚拟主机空间，也算是第一次技术迁移了！网站是托管在人生导师的虚拟主机上，记得刚拍下<a href="http://www.daijiale.cn" target="_blank" rel="external">www.daijiale.cn</a>个人域名，挂到上线的时候是这样子的:<br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/github_daijialewebsiteworkshop.png" alt=""></p>
<p>嗯，对于一个大一上刚学会做站点的小虾开发者来说，还是感觉Geek满满的。</p>
<h1 id="第四次更新_个人Blog">第四次更新_个人Blog</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;自上一次大更新以后的两年多里，都没有什么大的起伏（主要是太懒，或者忙其他项目去了），直到后面阴差阳错侥幸获得了这个证书：<img src="http://7xi6qz.com1.z0.glb.clouddn.com/SAEDeveloper.jpg" alt="">,新浪每月给我SAE上打的云豆工单根本用都用不完了，so，我打算把Blog全部迁移到 <code>SAE上</code> （毕竟老放在人生导师那也不太好）。顺便更新了下Blog的界面和交互，增加了首页响应式效果（方便宣传嘛，嘿嘿）,自己设计和编码水平的提高也让每次迭代后的Blog页面颜值更高：<br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/daijialeweb_personalsite.png" alt=""></p>
<h1 id="第五次更新_个人Blog">第五次更新_个人Blog</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这次改动比较大，也就是目前大家看到的这个站点：<a href="http://daijiale.github.io/">http://daijiale.github.io/</a>（域名换了，因为托管原因，把原来的<a href="http://www.daijiale.cn" target="_blank" rel="external">www.daijiale.cn</a>改成了简历页和入口页，其实也挺不错，性质不一样，刚好趁着这次技术整改实现了分布式控制），整个技术体系和空间都搬家+大改了，这次的技术架构没有采用市面上被大家广泛使用的常见技术，<strong>没有服务器脚本语言的参合，没有数据库，没有进行数据存储优化</strong>，简而言之就是，妈的！这逼网站<strong>居然没有后台</strong>（其实我心里一开始是拒绝的）。是的，你没听错，这特么就是个伪静态Blog，但是…这丝毫不影响ta的逼格大增,so let’s see it：</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;技术框架选用的是 <code>Hexo+Node.js+ejs+bootstrap+markdown+GithubPage</code>，为什么会采用这套剑走偏锋的框架？其实，是受到了周围小伙伴的影响，越来越多的朋友为了解决成本和增加B格，将Blog结合 <code>GithubPage</code> 托管在 <a href="https://github.com/" target="_blank" rel="external"><code>github</code></a>（程序猿的facebook，我也是从2014年才开始玩的）上，具体这套架构的<strong>优点</strong>和<strong>搭建教程</strong>请参考如下博文：</p>
<ul>
<li><p><a href="http://note.youdao.com/share/?id=0dc251a2004362d10d7ce520fecdcbff&amp;type=note" target="_blank" rel="external">Blog搭建之Hexo+Node.js+ejs+bootstrap+markdown+GithubPage</a></p>
<p>这里主要提一下 <code>Hexo</code> 和 <code>Jacman</code>：</p>
</li>
<li><p>Hexo：</p>
<ul>
<li>风一般的速度：<code>Hexo</code> 基于 <code>Node.js</code> ，支持多进程，几百篇文章也可以秒生成。</li>
<li>流畅的撰写：支持 <code>GitHub</code> <code>Flavored</code> <code>Markdown</code> 和所有 <code>Octopress</code> 的插件。</li>
<li>扩展性：<code>Hexo</code>支持 <code>EJS</code>、 <code>Swig</code>和 <code>Stylus</code>。通过插件支持 <code>Haml</code>、 <code>Jade</code>和 <code>Less</code>.</li>
<li>More：<a href="http://hexo.io/" target="_blank" rel="external">请参见官网</a></li>
</ul>
</li>
</ul>
<ul>
<li><p>Jacman：<code>Hexo</code> 的一个 <code>ejs</code>模版主题，来源于民间大神<strong>WuChong</strong>（<a href="http://note.youdao.com/share/?id=d93d060ce27c0d085021c9c0192c9e08&amp;type=note" target="_blank" rel="external">更多详细用法传送门</a>），在所有Hexo官网主题中个人比较倾向于他的风格，但是对于这个主题，我还是不太满意，挺多瑕疵需要我自己慢慢修改，后面我的Blog主题也会自己改成一个新的原创主题，到时候再开源出来，给更多的 <code>hexo</code> 开发者使用。现在正在往 <code>Low Poly Style</code>发展。</p>
</li>
<li><p>图床：</p>
<ul>
<li><a href="http://www.qiniu.com/?utm_source=BAIDU&amp;utm_medium=cpc&amp;utm_term=%E4%BA%91%E5%AD%98%E5%82%A8&amp;utm_content=chanpinlei&amp;utm_campaign=qiniu-ceshi" target="_blank" rel="external">七牛云存储</a>（大图用七牛，加速给力）</li>
<li><a href="http://baichuan.taobao.com/portal/doc?articleId=329" target="_blank" rel="external">TAE</a>(小图用TAE，百川Hackathon接触到的，还不错)</li>
</ul>
</li>
<li><p>音床：<a href="http://music.163.com/#" target="_blank" rel="external">网易云音乐</a>（个人认为是目前市场上最好的全端音乐软件，不服来辩）</p>
</li>
<li><p>视频床：自己Coding把。。。（博主暂时只找到<a href="http://v.qq.com/" target="_blank" rel="external">腾讯视频</a>的漏洞，亲测可用）</p>
</li>
</ul>
<h1 id="第六次更新_主页更新">第六次更新_主页更新</h1><p>直接上图吧：<br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlBlogDaiJiale0.gif" alt=""><br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlBlogDaiJiale1.gif" alt=""><br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlBlogDaiJiale2.gif" alt=""></p>
<ul>
<li>这次更新主要以彰显个人设计风格为主，更加简约化了，以全新的姿态准备进入职场。</li>
<li>特效基于<code>wow.js</code>和<code>tipso.js</code>，后面会写一篇博文，详细讲解<code>wow.js</code>和<code>tipso.js</code>的用法。</li>
<li>增加了<a href="http://daijiale.github.io/2015/11/08/%E3%80%90%E4%B8%AA%E4%BA%BA%E3%80%91%E4%B8%BA%E4%BD%95%E9%80%89%E6%8B%A9%E5%81%9A%E7%A8%8B%E5%BA%8F%E7%8C%BF%EF%BC%88%E5%AA%9B%EF%BC%89%E4%B9%8B%E5%AE%B6/"><code>小枫特卖</code></a>  ,<a href=""><code>小枫街舞</code></a>,<a href="http://daijialewebdesign.sinaapp.com/XiaoFengSheYing/index.html" target="_blank" rel="external"><code>小枫摄影</code></a>等个人兴趣爱好主题站点，感兴趣的朋友可以看一下。</li>
<li>现在的<a href="http://www.daijiale.cn" target="_blank" rel="external">www.daijiale.cn</a>已经是这次更新后的风格，以前的风格转存在这两个URL下<ul>
<li><a href="http://daijialewebdesign.sinaapp.com/DaiJialeHomePage2/index.html" target="_blank" rel="external">小枫主页2.0</a>。</li>
<li><a href="http://daijialewebdesign.sinaapp.com/DaiJialeHomePage1/index.html" target="_blank" rel="external">小枫主页1.0</a>。</li>
</ul>
</li>
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>持续更新中</strong></p>
<embed src="http://music.163.com/style/swf/widget.swf?sid=26390073&type=2&auto=1&width=320&height=66" width="340" height="86" allownetworking="all">]]></content>
    <summary type="html">
    <![CDATA[<p><strong>以下所指“更新”：均为Blog技术更新，非文章更新</strong></p>
<h1 id="第一次更新_个人Blog">第一次更新_个人Blog</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;说起自己的第一个Blog，要从小学刚开通QQ空间开始，具体几年级已经记不清了，那个时候刚甩掉纸质日记本，然后就迈入网络日志的深坑。以前倒是产出了不少优质日志，不过都是些多愁善感的随便，至今都已经封存进<em>私密日日记</em>中(如下图)：<img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogpic_qqzonesec.PNG" alt=""><br>]]>
    
    </summary>
    
      <category term="Node.js" scheme="http://daijiale.github.io/tags/Node-js/"/>
    
      <category term="个人故事" scheme="http://daijiale.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%95%85%E4%BA%8B/"/>
    
      <category term="Hexo" scheme="http://daijiale.github.io/tags/Hexo/"/>
    
      <category term="Blog" scheme="http://daijiale.github.io/tags/Blog/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【数据库-持续更新】数据库设计心得：]]></title>
    <link href="http://daijiale.github.io/2015/11/19/%E3%80%90%E6%95%B0%E6%8D%AE%E5%BA%93%E3%80%91%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E5%BF%83%E5%BE%97/"/>
    <id>http://daijiale.github.io/2015/11/19/【数据库】数据库设计心得/</id>
    <published>2015-11-19T11:23:01.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>PS：从大学课设小项目到外包大型项目，再到实习时候参与过的千万级用户后台架构设计。对后端的数据库设计有了一些自己的心得体会，这里记录一些现在这个阶段的所想所得，后面随着level不断提升，持续更新。</p>
</blockquote>
<a id="more"></a>
<h2 id="为什么要进行数据库设计">为什么要进行数据库设计</h2><p>因为这是一个：<strong>需求分析-&gt;逻辑设计-&gt;物理设计-&gt;维护优化</strong>的复杂过程。</p>
<h3 id="需求分析：">需求分析：</h3><ul>
<li>数据是什么？</li>
<li>数据有哪些属性？</li>
<li>数据和属性各自的特点是？</li>
<li>实体间的关系（1对1，1对多，多对多）</li>
<li>实体唯一标识的属性（属性组合）</li>
</ul>
<p><strong>eg：</strong><br>以一个小型的电子商务网站为例，在这个电子商务网站的系统中包括了几个核心模块：<strong>用户模块，商品模块，订单模块，购物车模块，供应商模块</strong>。</p>
<p>就<strong>用户模块</strong>讲：</p>
<ul>
<li>包括属性：用户名、密码、电话、邮箱、身份证号、地址、姓名、昵称</li>
<li>可选唯一标识属性：用户名、身份证、电话</li>
<li>存储特点：随系统上线时间逐渐增加，需要永久存储。</li>
</ul>
<p>就<strong>商品模块</strong>讲：<br>-包括属性：商品编码、商品名称、商品描述、商品种类、供应商名称、重量、有效期、价格…<br>-可选唯一标识属性：（商品名称，供应商名称）、（商品编码）<br>-存储特点：对于下线商品可以归档存储</p>
<p>就<strong>订单模块</strong>讲：<br>-包括属性：订单号、用户姓名、用户电话、收获地址、商品编号、商品名称、数量、价格、订单状态、支付状态、订单类型……<br>-可选唯一标识属性：（订单号）<br>-存储特点：永久存储（分表、分库存储）</p>
<p>…</p>
<p>其他模块省略分析</p>
<p>可以看出，其中：</p>
<p><strong>一对多</strong>关系有2组：用户&lt;-&gt;订单，用户&lt;-&gt;购物车</p>
<p><strong>多对多</strong>关系有3组：订单&lt;-&gt;商品、商品&lt;-&gt;购物车、商品&lt;-&gt;供应商</p>
<h3 id="逻辑设计：">逻辑设计：</h3><p>使用ER图，进行数据库逻辑建模。</p>
<h4 id="逻辑设计是做什么的？">逻辑设计是做什么的？</h4><ul>
<li>1、将需求转化为数据库的逻辑模型</li>
<li>2、通过ER图的型式对逻辑模型进行展示</li>
<li>3、同所选用的具体的DBMS系统无关</li>
</ul>
<h4 id="名字解释">名字解释</h4><ul>
<li>关系：一个关系对应通常所说的一张表</li>
<li>元祖：表中的一行即为一个元组。</li>
<li>属性: 表中的一列即为一个属性，每一个属性都有一个名称，称为属性名，</li>
<li>候选码：表中的某个属性组，TA可以唯一确定一个元组。</li>
<li>主码：一个关系有多个候选码，选定其中一个为主码。</li>
<li>域：属性的取值范围。</li>
<li>分量：元组中的一个属性值。</li>
</ul>
<h4 id="ER图例">ER图例</h4><p> <img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlBlogerpic.png" alt=""></p>
<h4 id="数据库设计范式">数据库设计范式</h4><p><strong>数据库设计需要遵循这些范式规则，否则就很可能会出现如下异常：</strong></p>
<h5 id="操作异常">操作异常</h5><ul>
<li><p>插入异常: 如果某实体随着另一个实体的存在而存在，即缺少某个实体时无法表示这个实体，那么这个表就存在插入异常。</p>
</li>
<li><p>更新异常: 如果更改表所对应的某个实体实例的单独属性时，需要多行更新，那么就说这个表存在更新异常。</p>
</li>
<li><p>删除异常：如果删除表的某一行来反映某实体实例失效时导致另一个不同实体实例信息丢失，那么这个表中就存在删除异常。</p>
</li>
</ul>
<h5 id="数据冗余：">数据冗余：</h5><ul>
<li>是指相同的数据在多个地方存在，或者说表中的某个列可以由其他列计算得到。</li>
</ul>
<h5 id="范式">范式</h5><ul>
<li><p><strong>第一范式、</strong>数据库中的所有字段都是单一属性，不可再分的，这个单一属性是由基本的数据类型所构成的，如整数、浮点数、字符串、等；第一范式要求数据库中的表都是二维表。</p>
</li>
<li><p><strong>第二范式、</strong>数据库的表中不存在非关键字段对任一候选关键字段的部分函数依赖。所有单关键字段的表都符合第二范式。（通常通过拆分表来达到满足范式要求）</p>
<ul>
<li><p>eg：（商品名称）-&gt; (价格、描述、重量、商品有效期)</p>
<p>   （供应商名称）-&gt;（供应商电话）</p>
<p>存在两组依赖，有一组还是非关键字段，所以不满足。</p>
</li>
<li>将存在的问题如下：<br>1、插入异常<br>2、删除异常<br>3、更新异常<br>4、数据冗余</li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>第三范式、</strong>在第二范式的基础上定义的，如果数据表中不存在非关键字段，对任意候选关键字段<strong>传递函数依赖</strong>则符合第三范式。（通常通过拆分表来达到满足范式要求）   - eg: (商品名称) -&gt; (分类) -&gt; (分类描述)<br> 也就是说存在非关键字段“分类描述”，对关键字段“商品名称”的传递函数依赖。所以不满足。</p>
<ul>
<li>将存在的问题如下：（分类、分类描述）对于每一个商品都会进行记录，所以存在数据冗余。同时也还存在数据的插入、更新及删除异常。</li>
</ul>
</li>
<li><p><strong>BC范式（Boyce.Codd）、</strong>在第三范式的基础之上，数据库表中如果不存在任何字段对任一候选关键字段的传递函数依赖则附合BC范式。也就是说如果是复合关键字，则复合关键字之间也不能存在函数依赖关系。</p>
<ul>
<li>eg: (供应商)-&gt;(供应商联系人)<br>  (供应商联系人)-&gt;(供应商)<br>  并且存在数据操作异常和数据冗余。</li>
</ul>
</li>
<li><p>PS：（第四、第五范式不做重点分析，自行百度）</p>
</li>
</ul>
<h3 id="物理设计：">物理设计：</h3><ul>
<li>1、选择合适的数据库管理系统，根据逻辑选择<code>NoSQL</code>或者是<code>关系数据库</code>等。</li>
<li>2、定义数据库、表及字段的命名规范。</li>
<li>3、根据所选的DBMS系统选择合适的字段类型。</li>
<li>4、反范式化设计。</li>
</ul>
<h5 id="关系数据库">关系数据库</h5><p>Oracle、SQLServer常使用于企业级应用。<br>MySQL、PgSQL常用于互联网项目。</p>
<h6 id="MySQL常用的存储引擎：">MySQL常用的存储引擎：</h6><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlBlogSQL存储引擎.png" alt=""></p>
<h5 id="表及字段的命名规则">表及字段的命名规则</h5><h6 id="1、可读性原则">1、可读性原则</h6><p>使用大写和小写来格式化的库对象名字以获得良好的可读性。例如：使用CustAddress而不是cutaddress来提高可读性。（这里要注意有些DBMS系统对表名的大小写是敏感的）</p>
<h6 id="2、表意性原则">2、表意性原则</h6><p>对象的名字应该能描述TA所标识的对象。例如：对于表，表的名称应该能够体现表中存储的数据内容；对于存储过程，存储过程名称应该能够体现存储过程的功能。</p>
<h6 id="3、长名原则">3、长名原则</h6><p>尽可能少使用或者不使用缩写，使用于数据库（DATABASE）名之外的任一对象。</p>
<h5 id="字段类型的选择原则">字段类型的选择原则</h5><p>列的数据类型一方面影响数据存储空间的开销，另一方面也会影响数据查询性能。当一个列可以选择多种数据类型时，应该优先考虑数字类型，其次是日期或二进制类型，最后是字符类型。对于相同级别的数据类型，应该优先选择占用空间小的数据类型。</p>
<p>以上选择原则主要是从下面两个角度考虑：</p>
<ul>
<li><p>1、在对数据进行比较（查询条件、JOIN条件及排序）操作时：同样的数据，字符处理往往比数字处理慢，</p>
<ul>
<li>2、在数据库中，数据处理以页为单位，列的长度越小，利于性能提升。</li>
</ul>
</li>
</ul>
<h6 id="char和varchar如何选择">char和varchar如何选择</h6><p>原则：</p>
<ul>
<li><p>1、如果列中要存储的数据长度差不多是一致的，则应该考虑用char；否则应该考虑用varchar。</p>
</li>
<li><p>2、如果列中的最大数据长度小于50Byte，则一般也考虑用char。</p>
</li>
<li>3、一般不宜定义大于50Byte的char类型列。 </li>
</ul>
<h6 id="decimal与float如何选择">decimal与float如何选择</h6><p>原则：</p>
<ul>
<li><p>1、decimal用于存储精确数据，而float只能用于存储非精确数据。</p>
</li>
<li><p>2、由于float的存储空间开销一般比decimal小（精确到7位小数只需要4个字节，而精确到15位小数只需要8字节），故非精确数据优先选择float类型。</p>
</li>
</ul>
<h6 id="时间类型如何存储">时间类型如何存储</h6><p>原则：</p>
<ul>
<li>1、使用int来存储时间字段的优缺点</li>
</ul>
<p>优点：字段长度比datetime小。<br>缺点：使用不方便，要进行函数转换。<br>限制：只能存储到2018-1-19 11：14：07即2^32 </p>
<ul>
<li>2、需要存储的时间粒度</li>
</ul>
<p>年 月 日 小时 分 秒 周</p>
<h6 id="如何选择主键">如何选择主键</h6><ul>
<li>1、区分业务主键和数据库主键</li>
</ul>
<p>业务主键用于标识业务数据，进行表与表之间的关联；<br>数据库主键为了优化数据存储（Innodb会生成6个字节的隐含主键）</p>
<ul>
<li>2、根据数据库的类型，考虑主键是否要顺序增长 </li>
</ul>
<p>有些数据库是按主键的顺序逻辑存储的</p>
<ul>
<li>3、主键的字段类型所占空间要尽可能的小</li>
</ul>
<p>对于使用聚集索引方式存储的表，每个索引后都会附加主键信息。</p>
<h6 id="避免使用外键约束">避免使用外键约束</h6><ul>
<li><p>1、降低数据导入的效率。</p>
</li>
<li><p>2、增加维护成本。</p>
</li>
<li><p>3、虽然不建议使用外键约束，但是相关联的列上一定要建立索引。</p>
</li>
</ul>
<h6 id="避免使用触发器">避免使用触发器</h6><ul>
<li><p>1、降低数据导入的效率。</p>
</li>
<li><p>2、可能会出现意想不到的数据异常。</p>
</li>
<li><p>3、使业务逻辑变的复杂。</p>
</li>
<li><p>4、严禁使用预留字段。</p>
</li>
</ul>
<h6 id="反范式化">反范式化</h6><p>反范式化是针对范式化而言的，在前面介绍了数据库设计的第三范式，所谓的反范式化就是为了性能和读取效率的考虑而适当的对第三范式的要求进行违反，而允许存在少量的数据冗余，<strong>换句话来说反范式化就是使用空间来换取时间</strong>。</p>
<p>优点：</p>
<ul>
<li><p>1、减少表的关联数量。</p>
</li>
<li><p>2、增加数据的读取效率。</p>
</li>
<li><p>3、反范式化一定要适度。</p>
</li>
</ul>
<h3 id="维护优化：">维护优化：</h3><p>新的需求进行建表，索引优化，大表拆分</p>
<ul>
<li><p>1、维护数据字典</p>
<ul>
<li>使用第三方工具对 数据字典进行维护（待补充）</li>
<li>利用数据库本身的备注字段来维护数据字典。以MySQL为例：</li>
<li>导出数据字典。     </li>
</ul>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> customer(</span><br><span class="line">    cust_id <span class="built_in">INT</span> AUTO_INCREMENT <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'自增ID'</span>,</span><br><span class="line">    cust_name <span class="built_in">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">' 客户姓名'</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span>(cust_id)</span><br><span class="line">)<span class="keyword">COMMENT</span> <span class="string">'客户表'</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>2、维护索引</li>
</ul>
<p>如何选择合适的列做索引：</p>
<pre><code>-<span class="ruby"> 出现在<span class="constant">WHERE</span>从句，<span class="constant">GROUP</span> <span class="constant">BY</span>从句，<span class="constant">ORDER</span> <span class="constant">BY</span>从句中的列。
</span>-<span class="ruby"> 可选择性高的列要放到索引的前面。
</span>-<span class="ruby"> 索引中不要包括太长的数据类型。</span>
</code></pre><p>注意：</p>
<pre><code>-<span class="ruby"> 索引并不是越多越好，过多的索引不但会降低写效率而且会降低读效率。
</span>-<span class="ruby"> 定期维护索引碎片。
</span>-<span class="ruby"> 在<span class="constant">SQL</span>语句中不要使用强制索引关键字。</span>
</code></pre><ul>
<li><p>3、维护表结构</p>
<ul>
<li>使用在线变更表结构的工具，例如MySQL5.5之前可以使用pt-online-schema-change，MySQL5.6之后本身支持在线表结构的变更。</li>
<li>同时对数据字典进行维护。</li>
<li>控制表的宽度和大小。</li>
</ul>
</li>
<li><p>4、为了控制表的大小/宽度,在适当的时候对表进行水平拆分/垂直拆分</p>
<ul>
<li>经常一起查询的列放到一起</li>
<li>text，blob等大字段拆分出到附加表中</li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>PS：从大学课设小项目到外包大型项目，再到实习时候参与过的千万级用户后台架构设计。对后端的数据库设计有了一些自己的心得体会，这里记录一些现在这个阶段的所想所得，后面随着level不断提升，持续更新。</p>
</blockquote>]]>
    
    </summary>
    
      <category term="数据库" scheme="http://daijiale.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【个人】为什么选择做“程序猿（媛）之家”]]></title>
    <link href="http://daijiale.github.io/2015/11/08/%E3%80%90%E4%B8%AA%E4%BA%BA%E3%80%91%E4%B8%BA%E4%BD%95%E9%80%89%E6%8B%A9%E5%81%9A%E7%A8%8B%E5%BA%8F%E7%8C%BF%EF%BC%88%E5%AA%9B%EF%BC%89%E4%B9%8B%E5%AE%B6/"/>
    <id>http://daijiale.github.io/2015/11/08/【个人】为何选择做程序猿（媛）之家/</id>
    <published>2015-11-08T03:43:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="为何选择做“程序猿（媛）之家”">为何选择做“程序猿（媛）之家”</h1><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/CXYZJ6666.jpg" alt=""></p>
<blockquote>
<p>引言：其实，”程序猿（媛）之家”的前身起源于“小枫特卖”，眼尖的小伙伴们肯定立马就Get到了两个关键点，一是“小枫”，二是“特卖”…….那么问题来了——“小枫是谁？”、“特卖，卖得有什么特别？”<br><a id="more"></a></p>
</blockquote>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/CXYZJ5555.jpg" alt=""></p>
<h2 id="小枫：">小枫：</h2><pre><code>电子科技大学本科应届生，软件工程专业，互联网爱好者，百度职员， 屌丝程序猿一名，“程序猿（媛）之家”扛霸子（店长）。 
业余爱好：街舞、摄影、平面设计、hackathon。 
个人主页：<span class="string">http:</span><span class="comment">//www.daijiale.cn PS：“小枫”这个称呼其实是店长的花名，为了保留他的个人隐私，这里也就不透露他 戴嘉乐 的 真名 了。</span>
</code></pre><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/CXYZJ333.jpg" alt=""></p>
<h2 id="特卖：">特卖：</h2><pre><code>目标人群是程序员和常驻办公室的白领们，小枫也和他们一样，属于这个群体，所以很清楚我们这类人，在椅子上每天高强度工作十多个小时时，是需要一个贴心的“记忆靠枕<span class="subst">/</span>人体工学座椅”来保护自己的颈椎的；在精神集中之时，是需要一副高端的“耳机”来隔绝外界打扰，享受完美音质的；在Coding <span class="literal">or</span> LoL 时，是需要一副称手的“机械键盘”来大杀四方的，在公司 <span class="literal">or</span> 咖啡厅结队攻城时，是需要一台“MacPro <span class="literal">or</span> Iphone ”来彰显逼格的；在回到家中，是需要一套“理疗睡枕家纺”来缓解一天疲惫的<span class="attribute">...</span>正是连我自己都有如此之多的需求，我相信这个群体中也有不少和我一样的小伙伴们。于是，小枫在闲暇之余，跑遍 <span class="literal">or</span> 电联了各大批发市场，精挑细选 乃至 以身试法 出了“程序猿（媛）之家”中的这些类目产品，并且拿到了比淘宝还低的零售价格。（其中跑货的艰辛我就不说出来博取同情了。。。）
</code></pre><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/CXYZJ1234.jpg" alt=""></p>
<h2 id="题外话:">题外话:</h2><pre><code> 我们常被鼓励要去实现梦想，大学教授这么说，亲朋好友这么说，新闻媒体这么说，孤独是你的必修课里这么说，没有到不了的明天里这么说，有人陪你颠沛流离里时也这么说。可是我们总会因为生活中一些很操蛋的事情，认命现状，无所作为。。。有的时候就在想啊，我们苦逼来苦逼去，到底是为了什么，或者是为了那些我们不能放弃的，我们都放弃了一些什么？为什么要在深夜赶作业，为什么要在图书馆里背单词，为什么要在工作室码代码，为什么大学毕业要奔赴一个没有归属感的地方工作生活，为什么要离开家离开亲人。 这些，好像渐渐地找不到原因了。 可是有些事情偏偏是不需要原因的，比如天空的颜色，比如昨天擦肩而过的人变成了你今天的知己。 
 前几天听到朋友的创业公司安然度过天使轮喜获<span class="number">4000</span>万<span class="literal">A</span>轮融资的捷报时，内心真心替他感到高兴，相比我们这些选择在大公司慢慢成长的人来说，他们是可敬的。当然，朋友圈里也见过大学刚毕业的一对闺蜜靠着自制烘焙点心，筹资上西藏，过自己想过的生活。也见过很优秀的小伙伴放弃了高薪offer，自己租了一间房，开启了纹身工作室。。。在这里，我要祝福他们，祝福他们未来的一切！ 不要害怕朋友们的改变。因为我从始至终都相信那些真正爱你的人，会理解你，会包容你的缺点接受你的改变并祝福你的将来。而那些说你变了的人，不用理会他们，那只是因为你不再按照他们想要的轨迹生活而已。记住那些一直陪着你懂你沉默的人，忘记那些说你变了远离你的人。

梦想这东西，最美妙的在于你可以制造它，重温它，看一本书，听一首歌，去一个地方，梦想就能重新发芽！
</code></pre><h2 id="程序猿（媛）之家，期待您的光顾">程序猿（媛）之家，期待您的光顾</h2><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/CXYZJ微信公众号-cxyzj.jpg" alt=""><br><strong>微信公众号:</strong>TheProgrammerHome</p>
<p><strong>二维码：</strong></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/CXYZJ公众号二维码.jpg" alt=""></p>
<p><strong>微店地址：</strong><a href="http://weidian.com/?userid=760541744#rd" target="_blank" rel="external">传送门</a></p>
<p><strong>二维码：</strong></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/CXYZJcxyzj-微店.jpg" alt=""></p>
<p><strong>Android客户端：</strong>正在开发中</p>
<p><strong>IOS客户端：</strong>正在开发中</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="为何选择做“程序猿（媛）之家”">为何选择做“程序猿（媛）之家”</h1><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/CXYZJ6666.jpg" alt=""></p>
<blockquote>
<p>引言：其实，”程序猿（媛）之家”的前身起源于“小枫特卖”，眼尖的小伙伴们肯定立马就Get到了两个关键点，一是“小枫”，二是“特卖”…….那么问题来了——“小枫是谁？”、“特卖，卖得有什么特别？”<br>]]>
    
    </summary>
    
      <category term="个人故事" scheme="http://daijiale.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%95%85%E4%BA%8B/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【PHP】PHP跟踪错误7大步骤]]></title>
    <link href="http://daijiale.github.io/2015/10/10/%E3%80%90PHP%E3%80%91PHP%E8%B7%9F%E8%B8%AA%E9%94%99%E8%AF%AF7%E5%A4%A7%E6%AD%A5%E9%AA%A4/"/>
    <id>http://daijiale.github.io/2015/10/10/【PHP】PHP跟踪错误7大步骤/</id>
    <published>2015-10-10T04:34:21.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>这个话题老生长谈了，在面试中必然考核的能力中，我个人认为解决问题能力是排第一位的，比学习能力优先级更高。解决问题的能力既能看出程序员的思维能力，应变能力，探索能力等，又可以看出他的经验。如果解决问题能力不佳是无法通过面试的。</p>
<p>这里举个例子，假如我执行了一个PHP的脚本，如php test.php，预期是可以返回一个字符串。但执行后没有任何信息输出，这时候通过什么方法能知道程序错在哪里？这里可以将解决问题能力分为8个等级，越到后面的表示能力越强。</p>
</blockquote>
<a id="more"></a>
<h1 id="Lv0_查看PHP错误信息">Lv0 查看PHP错误信息</h1><p>程序没有达到预期效果，证明代码出错了，看PHP的错误信息是第一步。如果直接忽略错误信息，表明这个人不适合担任专业的程序员岗位。有些情况下php.ini配置中关闭了错误显示，需要修改php.ini打开错误信息，或者错误信息被导出到了日志文件，这种情况可以直接tailf php_error.log来看错误信息。</p>
<p>拿到错误信息后直接定位到程序代码问题，或者到Google/百度搜索，即可解决问题。</p>
<p>注：打开错误显示的方法是</p>
<p>php.ini中display_errors / display_startup_errors 设置为On<br>php.ini中error_reporting 设置为E_ALL<br>PHP代码中设置error_reporting(E_ALL)<br>Lv1 存在多个版本的php或php-cli与php-fpm加载不同的配置</p>
<p>存在多个版本的php，懂得通过which php来看是哪个PHP，或者加绝对路径制定php版本。表示此PHPer通过了此层级的50%考验。</p>
<p>另外一个情况就是php-cli与php-fpm得到的执行情况不一样，如在web浏览器中执行是对的，cli下执行是错的。这时候可能是2个环境加载的php.ini不同所致。cli下通过php -i |grep php.ini得到加载了哪个php.ini。而fpm下通过phpinfo()函数可以得到php.ini的绝对路径。</p>
<h1 id="Lv2_var_dump/die打印变量值信息单步调试">Lv2 var_dump/die打印变量值信息单步调试</h1><p>这是惯用的程序调试手段，也是最简单粗暴有效的解决问题方法。高级一点的手段是使用PHP的Trace类/日志类，花哨一点的可以借助phpstorm+xdebug在IDE工具里进行Debug。</p>
<p>Trace工具还可以分析脚本的耗时，进行PHP程序的性能优化。</p>
<p>这3个考验全部通过，表明此程序员已经具备了专业PHP程序员应该有的解决问题能力了。PHP程序员只要过了这个等级，就足以应多大部分情况，在中小型网站中毫无压力。</p>
<h1 id="Lv3_使用strace工具跟踪程序执行">Lv3 使用strace工具跟踪程序执行</h1><p>strace可以用来查看系统调用的执行，使用strace php test.php，或者strace -p 进程ID。strace就可以帮助你透过现象看本质，掌握程序执行的过程。这个手段是在大型网站，大公司里最常用的。如果没掌握strace，这里只能说抱歉了，我们不接受不会strace的PHPer。</p>
<p>strace其实也是对程序员基础的考验，如果不懂操作操作系统，完全不懂底层，肯定也达不到会用strace的程度。当然strace对于PHP代码里的死循环是解决不了的。比如你发现一个php-fpm进程CPU100%了，strace恐怕是解决不了的。因为strace是看系统调用，一般都是IO类操作，既然是IO密集，那CPU一定不可能是100%。</p>
<h1 id=""> </h1><h1 id="Lv4_使用tcpdump工具分析网络通信过程">Lv4 使用tcpdump工具分析网络通信过程</h1><p>tcpdump可以抓到网卡的数据通信过程，甚至数据内容也可以抓到。使用tcpdump可以看到网络通信过程是什么样的，如何时发起了TCP SYN3次握手，何时发送FIN包，何时发送RST包。这是一个基本功，如果不懂tcpdump，证明不具备网络问题解决能力。</p>
<h1 id="Lv5_统计函数调用的耗时和成功率">Lv5 统计函数调用的耗时和成功率</h1><p>使用xhporf/xdebug导出PHP请求的调用过程，然后分析每个函数调用的过程和耗时。能够分析PHP程序的性能瓶颈，找出可以优化的点。</p>
<p>另外一个对于网络服务的调用，如mysql查询，curl，其他API调用等，通过记录起始和结束时microtime，返回的是不是false，可以得到调用是否成功，耗时多少。如果可以汇总数据，整理出调用的成功率，失败率，平均延时，证明此程序员对接口质量敏感，有大型网站项目经验。</p>
<h1 id="Lv6_gdb使用">Lv6 gdb使用</h1><p>gdb是C/C++调试程序的利器，需要具备一定C/C++功底的程序员才会能熟练使用gdb。上面说的strace无法跟踪php程序CPU100%，而gdb是可以跟踪的。另外gdb也可以解决php程序core dump的问题。</p>
<p>通过gdb -p 进程ID，再配合php-src的.gdbinit zbacktrace等工具，可以很方便地跟踪PHP程序的执行。像上面的CPU100%往往是PHP程序中发生死循环了，gdb进行多次查看，就大致可以得到死循环的位置。具备gdb解决问题能力的PHP程序员少之又少。如果能使用gdb解决PHP问题，这个PHPer百分之百可以通过面试，并且可以拿到较高的技术评级。</p>
<h1 id="Lv7_查看PHP内核和扩展源码">Lv7 查看PHP内核和扩展源码</h1><p>如果能熟悉PHP内核和扩展的源码，遇到PHP程序中最复杂的内存错误，也可以有解决的能力。这类PHP程序员就是凤毛麟角了。配合gdb工具和对PHP源码的熟悉，可以查看opcode的信息，execute_data的内存，全局变量的状态等。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>这个话题老生长谈了，在面试中必然考核的能力中，我个人认为解决问题能力是排第一位的，比学习能力优先级更高。解决问题的能力既能看出程序员的思维能力，应变能力，探索能力等，又可以看出他的经验。如果解决问题能力不佳是无法通过面试的。</p>
<p>这里举个例子，假如我执行了一个PHP的脚本，如php test.php，预期是可以返回一个字符串。但执行后没有任何信息输出，这时候通过什么方法能知道程序错在哪里？这里可以将解决问题能力分为8个等级，越到后面的表示能力越强。</p>
</blockquote>]]>
    
    </summary>
    
      <category term="PHP" scheme="http://daijiale.github.io/tags/PHP/"/>
    
      <category term="转载博文" scheme="http://daijiale.github.io/categories/%E8%BD%AC%E8%BD%BD%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发分享" scheme="http://daijiale.github.io/categories/%E8%BD%AC%E8%BD%BD%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【PHP】PHP安全性开发]]></title>
    <link href="http://daijiale.github.io/2015/09/21/%E3%80%90PHP%E3%80%91PHP%E5%AE%89%E5%85%A8%E6%80%A7%E5%BC%80%E5%8F%91/"/>
    <id>http://daijiale.github.io/2015/09/21/【PHP】PHP安全性开发/</id>
    <published>2015-09-21T13:21:11.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><blockquote>
<p>php给了开发者极大的灵活性，但是这也为安全问题带来了潜在的隐患，近期需要总结一下以往的问题，在这里借翻译一篇文章同时加上自己开发的一些感触总结一下。<br><a id="more"></a></p>
</blockquote>
<h1 id="简介">简介</h1><p>当开发一个互联网服务的时候，必须时刻牢记安全观念，并在开发的代码中体现。PHP脚本语言对安全问题并不关心，特别是对大多数没有经验的开发者来说。每当你讲任何涉及到钱财事务等交易问题时，需要特别注意安全问题的考虑，例如开发一个论坛或者是一个购物车等。</p>
<h2 id="安全保护一般性要点">安全保护一般性要点</h2><h3 id="不相信表单">不相信表单</h3><p>对于一般的Javascript前台验证，由于无法得知用户的行为，例如关闭了浏览器的javascript引擎，这样通过POST恶意数据到服务器。需要在服务器端进行验证，对每个php脚本验证传递到的数据，防止XSS攻击和SQL注入</p>
<h3 id="不相信用户">不相信用户</h3><p>要假设你的网站接收的每一条数据都是存在恶意代码的，存在隐藏的威胁，要对每一条数据都进行清理</p>
<h3 id="关闭全局变量">关闭全局变量</h3><p>在php.ini文件中进行以下配置：</p>
<p>register_globals = Off<br>如果这个配置选项打开之后，会出现很大的安全隐患。例如有一个process.php的脚本文件，会将接收到的数据插入到数据库，接收用户输入数据的表单可能如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">size</span>=<span class="string">"15"</span> <span class="attr">maxlength</span>=<span class="string">"64"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这样，当提交数据到<code>process.php</code>之后，php会注册一个<code>$username</code>变量，将这个变量数据提交到<code>process.php</code>，同时对于任何POST或GET请求参数，都会设置这样的变量。如果不是显示进行初始化那么就会出现下面的问题：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// Define $authorized = true only if user is authenticated</span></span><br><span class="line"><span class="keyword">if</span> (authenticated_user()) &#123;</span><br><span class="line">    $authorized = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>此处，假设authenticated_user函数就是判断$authorized变量的值，如果开启了register_globals配置，那么任何用户都可以发送一个请求，来设置$authorized变量的值为任意值从而就能绕过这个验证。</p>
<p>所有的这些提交数据都应该通过PHP预定义内置的全局数组来获取，包括$_POST、$_GET、$_FILES、$_SERVER、$_REQUEST等，其中$_REQUEST是一个$_GET/$_POST/$_COOKIE三个数组的联合变量，默认的顺序是$_COOKIE、$_POST、$_GET。</p>
<p>推荐的安全配置选项<br>error_reporting设置为Off：不要暴露错误信息给用户，开发的时候可以设置为ON</p>
<p>safe_mode设置为Off</p>
<p>register_globals设置为Off</p>
<p>将以下函数禁用：system、exec、passthru、shell_exec、proc_open、popen</p>
<p>open_basedir设置为 /tmp ，这样可以让session信息有存储权限，同时设置单独的网站根目录</p>
<p>expose_php设置为Off</p>
<p>allow_url_fopen设置为Off</p>
<p>allow_url_include设置为Off</p>
<h3 id="SQL注入攻击">SQL注入攻击</h3><p>对于操作数据库的SQL语句，需要特别注意安全性，因为用户可能输入特定语句使得原有的SQL语句改变了功能。类似下面的例子：</p>
<p>$sql = “select * from pinfo where product = ‘$product’”;<br>此时如果用户输入的$product参数为：</p>
<p>39’; DROP pinfo; SELECT ‘FOO<br>那么最终SQL语句就变成了如下的样子：</p>
<p>select product from pinfo where product = ‘39’; DROP pinfo; SELECT ‘FOO’<br>这样就会变成三条SQL语句，会造成pinfo表被删除，这样会造成严重的后果。</p>
<p>这个问题可以简单的使用PHP的内置函数解决：</p>
<p>$sql = ‘Select * from pinfo where product = ‘“‘<br>       mysql_real_escape_string($product) . ‘“‘;<br>防止SQL注入攻击需要做好两件事：</p>
<p>对输入的参数总是进行类型验证</p>
<p>对单引号、双引号、反引号等特殊字符总是使用mysql_real_escape_string函数进行转义</p>
<p>但是，这里根据开发经验，不要开启php的Magic Quotes，这个特性在php6中已经废除，总是自己在需要的时候进行转义。</p>
<h3 id="防止基本的XSS攻击">防止基本的XSS攻击</h3><p>XSS攻击不像其他攻击，这种攻击在客户端进行，最基本的XSS工具就是防止一段javascript脚本在用户待提交的表单页面，将用户提交的数据和cookie偷取过来。</p>
<p>XSS工具比SQL注入更加难以防护，各大公司网站都被XSS攻击过，虽然这种攻击与php语言无关，但可以使用php来筛选用户数据达到保护用户数据的目的，这里主要使用的是对用户的数据进行过滤，一般过滤掉HTML标签，特别是a标签。下面是一个普通的过滤方法：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">transform_HTML</span><span class="params">($string, $length = null)</span> </span>&#123;</span><br><span class="line"><span class="comment">// Helps prevent XSS attacks</span></span><br><span class="line">    <span class="comment">// Remove dead space.</span></span><br><span class="line">    $string = trim($string);</span><br><span class="line">    <span class="comment">// Prevent potential Unicode codec problems.</span></span><br><span class="line">    $string = utf8_decode($string);</span><br><span class="line">    <span class="comment">// HTMLize HTML-specific characters.</span></span><br><span class="line">    $string = htmlentities($string, ENT_NOQUOTES);</span><br><span class="line">    $string = str_replace(<span class="string">"#"</span>, <span class="string">"#"</span>, $string);</span><br><span class="line">    $string = str_replace(<span class="string">"%"</span>, <span class="string">"%"</span>, $string);</span><br><span class="line">    $length = intval($length);</span><br><span class="line">    <span class="keyword">if</span> ($length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        $string = substr($string, <span class="number">0</span>, $length);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $string;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个函数将HTML的特殊字符转换为了HTML实体，浏览器在渲染这段文本的时候以纯文本形式显示。如<strong>bold</strong>会被显示为：</p>
<p>&lt;STRONG&gt;BoldText&lt;/STRONG&gt;</p>
<p>上述函数的核心就是htmlentities函数，这个函数将html特殊标签转换为html实体字符，这样可以过滤大部分的XSS攻击。</p>
<p>但是对于有经验的XSS攻击者，有更加巧妙的办法进行攻击：将他们的恶意代码使用十六进制或者utf-8编码，而不是普通的ASCII文本，例如可以使用下面的方式进行：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://host/a.php?variable=%22%3e %3c%53%43%52%49%50%54%3e%44%6f%73%6f%6d%65%74%68%69%6e%67%6d%61%6c%69%63%69%6f%75%73%3c%2f%53%43%52%49%50%54%3e"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这样浏览器渲染的结果其实是：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://host/a.php?variable="</span>&gt;</span> <span class="tag">&lt;<span class="name">SCRIPT</span>&gt;</span><span class="undefined">Dosomethingmalicious</span><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这样就达到了攻击的目的。为了防止这种情况，需要在transform_HTML函数的基础上再将#和%转换为他们对应的实体符号，同时加上了$length参数来限制提交的数据的最大长度。</p>
<h3 id="使用SafeHTML防止XSS攻击">使用SafeHTML防止XSS攻击</h3><p>上述关于XSS攻击的防护非常简单，但是不包含用户的所有标记，同时有上百种绕过过滤函数提交javascript代码的方法，也没有办法能完全阻止这个情况。</p>
<p>目前，没有一个单一的脚本能保证不被攻击突破，但是总有相对来说防护程度更好的。一共有两个安全防护的方式：白名单和黑名单。其中白名单更加简单和有效。</p>
<p>一种白名单解决方案就是SafeHTML，它足够智能能够识别有效的HTML，然后就可以去除任何危险的标签。这个需要基于HTMLSax包来进行解析。</p>
<p>安装使用SafeHTML的方法：</p>
<p>1、前往<a href="http://pixel-apes.com/safehtml/?page=safehtml" target="_blank" rel="external">http://pixel-apes.com/safehtml/?page=safehtml</a> 下载最新的SafeHTML</p>
<p>2、将文件放入服务器的classes 目录，这个目录包含所有的SafeHTML和HTMLSax库</p>
<p>3、在自己的脚本中包含SafeHTML类文件</p>
<p>4、建立一个SafeHTML对象</p>
<p>5、使用parse方法进行过滤</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/* If you're storing the HTMLSax3.php in the /classes directory, along</span><br><span class="line">   with the safehtml.php script, define XML_HTMLSAX3 as a null string. */</span></span><br><span class="line">define(XML_HTMLSAX3, <span class="string">''</span>);</span><br><span class="line"><span class="comment">// Include the class file.</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'classes/safehtml.php'</span>);</span><br><span class="line"><span class="comment">// Define some sample bad code.</span></span><br><span class="line">$data = <span class="string">"This data would raise an alert &lt;script&gt;alert('XSS Attack')&lt;/script&gt;"</span>;</span><br><span class="line"><span class="comment">// Create a safehtml object.</span></span><br><span class="line">$safehtml = <span class="keyword">new</span> safehtml();</span><br><span class="line"><span class="comment">// Parse and sanitize the data.</span></span><br><span class="line">$safe_data = $safehtml-&gt;parse($data);</span><br><span class="line"><span class="comment">// Display result.</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'The sanitized data is &lt;br /&gt;'</span> . $safe_data;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>SafeHTML并不能完全防止XSS攻击，只是一个相对复杂的脚本来检验的方式。</p>
<p>使用单向HASH加密方式来保护数据</p>
<p>单向hash加密保证对每个用户的密码都是唯一的，而且不能被破译的，只有最终用户知道密码，系统也是不知道原始密码的。这样的一个好处是在系统被攻击后攻击者也无法知道原始密码数据。</p>
<p>加密和Hash是不同的两个过程。与加密不同，Hash是无法被解密的，是单向的；同时两个不同的字符串可能会得到同一个hash值，并不能保证hash值的唯一性。</p>
<p>MD5函数处理过的hash值基本不能被破解，但是总是有可能性的，而且网上也有MD5的hash字典。</p>
<h3 id="使用mcrypt加密数据">使用mcrypt加密数据</h3><p>MD5 hash函数可以在可读的表单中显示数据，但是对于存储用户的信用卡信息的时候，需要进行加密处理后存储，并且需要之后进行解密。</p>
<p>最好的方法是使用mcrypt模块，这个模块包含了超过30中加密方式来保证只有加密者才能解密数据。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$data = <span class="string">"Stuff you want encrypted"</span>;</span><br><span class="line">$key = <span class="string">"Secret passphrase used to encrypt your data"</span>;</span><br><span class="line">$cipher = <span class="string">"MCRYPT_SERPENT_256"</span>;</span><br><span class="line">$mode = <span class="string">"MCRYPT_MODE_CBC"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span><span class="params">($data, $key, $cipher, $mode)</span> </span>&#123;</span><br><span class="line"><span class="comment">// Encrypt data</span></span><br><span class="line"><span class="keyword">return</span> (string)</span><br><span class="line">            base64_encode</span><br><span class="line">                (</span><br><span class="line">                mcrypt_encrypt</span><br><span class="line">                    (</span><br><span class="line">                    $cipher,</span><br><span class="line">                    substr(md5($key),<span class="number">0</span>,mcrypt_get_key_size($cipher, $mode)),</span><br><span class="line">                    $data,</span><br><span class="line">                    $mode,</span><br><span class="line">                    substr(md5($key),<span class="number">0</span>,mcrypt_get_block_size($cipher, $mode))</span><br><span class="line">                    )</span><br><span class="line">                );</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decrypt</span><span class="params">($data, $key, $cipher, $mode)</span> </span>&#123;</span><br><span class="line"><span class="comment">// Decrypt data</span></span><br><span class="line">    <span class="keyword">return</span> (string)</span><br><span class="line">            mcrypt_decrypt</span><br><span class="line">                (</span><br><span class="line">                $cipher,</span><br><span class="line">                substr(md5($key),<span class="number">0</span>,mcrypt_get_key_size($cipher, $mode)),</span><br><span class="line">                base64_decode($data),</span><br><span class="line">                $mode,</span><br><span class="line">                substr(md5($key),<span class="number">0</span>,mcrypt_get_block_size($cipher, $mode))</span><br><span class="line">                );</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>mcrypt函数需要以下信息：</p>
<p>1、待加密数据</p>
<p>2、用来加密和解密数据的key</p>
<p>3、用户选择的加密数据的特定算法（cipher：如 MCRYPT_TWOFISH192,MCRYPT_SERPENT_256， MCRYPT_RC2, MCRYPT_DES, and MCRYPT_LOKI97）</p>
<p>4、用来加密的模式</p>
<p>5、加密的种子，用来起始加密过程的数据，是一个额外的二进制数据用来初始化加密算法</p>
<p>6、加密key和种子的长度，使用mcrypt_get_key_size函数和mcrypt_get_block_size函数可以获取</p>
<p>如果数据和key都被盗取，那么攻击者可以遍历ciphers寻找开行的方式即可，因此我们需要将加密的key进行MD5一次后保证安全性。同时由于mcrypt函数返回的加密数据是一个二进制数据，这样保存到数据库字段中会引起其他错误，使用了base64encode将这些数据转换为了十六进制数方便保存。</p>
<p><a href="http://www.codeproject.com/Articles/363897/PHP-Security" target="_blank" rel="external">参考文献：http://www.codeproject.com/Articles/363897/PHP-Security</a></p>
<h1 id="更多参考">更多参考</h1><ul>
<li><a href="http://php.net/manual/zh/" target="_blank" rel="external">PHP中文手册</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言">前言</h1><blockquote>
<p>php给了开发者极大的灵活性，但是这也为安全问题带来了潜在的隐患，近期需要总结一下以往的问题，在这里借翻译一篇文章同时加上自己开发的一些感触总结一下。<br>]]>
    
    </summary>
    
      <category term="PHP" scheme="http://daijiale.github.io/tags/PHP/"/>
    
      <category term="转载博文" scheme="http://daijiale.github.io/categories/%E8%BD%AC%E8%BD%BD%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发分享" scheme="http://daijiale.github.io/categories/%E8%BD%AC%E8%BD%BD%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【PHP】cURL使用之PHP]]></title>
    <link href="http://daijiale.github.io/2015/09/21/%E3%80%90PHP%E3%80%91PHP_cURL/"/>
    <id>http://daijiale.github.io/2015/09/21/【PHP】PHP_cURL/</id>
    <published>2015-09-21T13:21:11.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><blockquote>
<p>cURL(Client URL Library Functions): curl is a command line tool for transferring data with URL syntax,即使用URL语法传输数据的命令行工具。<br><a id="more"></a></p>
</blockquote>
<h1 id="学习篇">学习篇</h1><ul>
<li>1、初始化cURL：curl_init()</li>
<li>2、发送请求到server：curl_exec()</li>
<li>3、接收server数据：curl_exec()</li>
<li>4、关闭cURL：curl_close()</li>
</ul>
<h1 id="开发篇">开发篇</h1><p>php -f xxx.php &gt; xxx.html</p>
<ul>
<li>1、利用cURL直接抓取“百度”首页</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$curl=curl_init(<span class="string">'http://www.baidu.com'</span>);</span><br><span class="line">curl_exec($curl);</span><br><span class="line">curl_close($curl);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>2、网络上下载一个网页并把内容中的“百度”替换为“屌丝”之后输出</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$curlobj = curl_init();			<span class="comment">// 初始化</span></span><br><span class="line">curl_setopt($curlobj, CURLOPT_URL, <span class="string">"http://www.baidu.com"</span>);		<span class="comment">// 设置访问网页的URL</span></span><br><span class="line">curl_setopt($curlobj, CURLOPT_RETURNTRANSFER, <span class="keyword">true</span>);			<span class="comment">// 执行之后不直接打印出来</span></span><br><span class="line">$output=curl_exec($curlobj);	<span class="comment">// 执行</span></span><br><span class="line">curl_close($curlobj);			<span class="comment">// 关闭cURL</span></span><br><span class="line"><span class="keyword">echo</span> str_replace(<span class="string">"百度"</span>,<span class="string">"屌丝"</span>,$output);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>3、登录慕课网并下载个人空间页面</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 自定义实现页面链接跳转抓取</span><br><span class="line"> * </span><br><span class="line"> */</span></span><br><span class="line">$data=<span class="string">'username=demo_peter@126.com&amp;password=123qwe&amp;remember=1'</span>;</span><br><span class="line">$curlobj = curl_init();			<span class="comment">// 初始化</span></span><br><span class="line">curl_setopt($curlobj, CURLOPT_URL, <span class="string">"http://www.imooc.com/user/login"</span>);		<span class="comment">// 设置访问网页的URL</span></span><br><span class="line">curl_setopt($curlobj, CURLOPT_RETURNTRANSFER, <span class="keyword">true</span>);			<span class="comment">// 执行之后不直接打印出来</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Cookie相关设置，这部分设置需要在所有会话开始之前设置</span></span><br><span class="line">date_default_timezone_set(<span class="string">'PRC'</span>); <span class="comment">// 使用Cookie时，必须先设置时区</span></span><br><span class="line">curl_setopt($curlobj, CURLOPT_COOKIESESSION, <span class="keyword">TRUE</span>); </span><br><span class="line">curl_setopt($curlobj, CURLOPT_HEADER, <span class="number">0</span>); </span><br><span class="line"><span class="comment">// 注释掉这行，因为这个设置必须关闭安全模式 以及关闭open_basedir，对服务器安全不利</span></span><br><span class="line"><span class="comment">//curl_setopt($curlobj, CURLOPT_FOLLOWLOCATION, 1);  </span></span><br><span class="line"></span><br><span class="line">curl_setopt($curlobj, CURLOPT_POST, <span class="number">1</span>);  </span><br><span class="line">curl_setopt($curlobj, CURLOPT_POSTFIELDS, $data);  </span><br><span class="line">curl_setopt($curlobj, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(<span class="string">"application/x-www-form-urlencoded; charset=utf-8"</span>, </span><br><span class="line">	<span class="string">"Content-length: "</span>.strlen($data)</span><br><span class="line">	)); </span><br><span class="line">curl_exec($curlobj);	<span class="comment">// 执行</span></span><br><span class="line">curl_setopt($curlobj, CURLOPT_URL, <span class="string">"http://www.imooc.com/space/index"</span>);</span><br><span class="line">curl_setopt($curlobj, CURLOPT_POST, <span class="number">0</span>);  </span><br><span class="line">curl_setopt($curlobj, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(<span class="string">"Content-type: text/xml"</span></span><br><span class="line">	)); </span><br><span class="line">$output=curl_redir_exec($curlobj);	<span class="comment">// 执行</span></span><br><span class="line">curl_close($curlobj);			<span class="comment">// 关闭cURL</span></span><br><span class="line"><span class="keyword">echo</span> $output;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 自定义实现页面链接跳转抓取</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl_redir_exec</span><span class="params">($ch,$debug=<span class="string">""</span>)</span> </span><br><span class="line"></span>&#123; </span><br><span class="line">    <span class="keyword">static</span> $curl_loops = <span class="number">0</span>; </span><br><span class="line">    <span class="keyword">static</span> $curl_max_loops = <span class="number">20</span>; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($curl_loops++ &gt;= $curl_max_loops) </span><br><span class="line">    &#123; </span><br><span class="line">        $curl_loops = <span class="number">0</span>; </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    curl_setopt($ch, CURLOPT_HEADER, <span class="keyword">true</span>); <span class="comment">// 开启header才能够抓取到重定向到的新URL</span></span><br><span class="line">    curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="keyword">true</span>); </span><br><span class="line">    $data = curl_exec($ch); </span><br><span class="line">    <span class="comment">// 分割返回的内容</span></span><br><span class="line">    $h_len = curl_getinfo($ch, CURLINFO_HEADER_SIZE); </span><br><span class="line">    $header = substr($data,<span class="number">0</span>,$h_len);</span><br><span class="line">    $data = substr($data,$h_len - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE); </span><br><span class="line">    <span class="keyword">if</span> ($http_code == <span class="number">301</span> || $http_code == <span class="number">302</span>) &#123; </span><br><span class="line">        $matches = <span class="keyword">array</span>(); </span><br><span class="line">        preg_match(<span class="string">'/Location:(.*?)\n/'</span>, $header, $matches); </span><br><span class="line">        $url = @parse_url(trim(array_pop($matches))); </span><br><span class="line">        <span class="comment">// print_r($url); </span></span><br><span class="line">        <span class="keyword">if</span> (!$url) </span><br><span class="line">        &#123; </span><br><span class="line">            <span class="comment">//couldn't process the url to redirect to </span></span><br><span class="line">            $curl_loops = <span class="number">0</span>; </span><br><span class="line">            <span class="keyword">return</span> $data; </span><br><span class="line">        &#125; </span><br><span class="line">        $last_url = parse_url(curl_getinfo($ch, CURLINFO_EFFECTIVE_URL)); </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>($url[<span class="string">'scheme'</span>])) </span><br><span class="line">            $url[<span class="string">'scheme'</span>] = $last_url[<span class="string">'scheme'</span>]; </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>($url[<span class="string">'host'</span>])) </span><br><span class="line">            $url[<span class="string">'host'</span>] = $last_url[<span class="string">'host'</span>]; </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>($url[<span class="string">'path'</span>])) </span><br><span class="line">            $url[<span class="string">'path'</span>] = $last_url[<span class="string">'path'</span>];</span><br><span class="line"></span><br><span class="line">        $new_url = $url[<span class="string">'scheme'</span>] . <span class="string">'://'</span> . $url[<span class="string">'host'</span>] . $url[<span class="string">'path'</span>] . (<span class="keyword">isset</span>($url[<span class="string">'query'</span>])?<span class="string">'?'</span>.$url[<span class="string">'query'</span>]:<span class="string">''</span>); </span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $new_url); </span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> curl_redir_exec($ch); </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">        $curl_loops=<span class="number">0</span>; </span><br><span class="line">        <span class="keyword">return</span> $data; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>4、获取webservice天气数据</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$data = <span class="string">'theCityName=北京'</span>;</span><br><span class="line">$curlobj = curl_init();	</span><br><span class="line">curl_setopt($curlobj, CURLOPT_URL, <span class="string">"http://www.webxml.com.cn/WebServices/WeatherWebService.asmx/getWeatherbyCityName"</span>);  </span><br><span class="line">curl_setopt($curlobj, CURLOPT_HEADER, <span class="number">0</span>); </span><br><span class="line">curl_setopt($curlobj, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);  </span><br><span class="line">curl_setopt($curlobj, CURLOPT_POST, <span class="number">1</span>);  </span><br><span class="line">curl_setopt($curlobj, CURLOPT_POSTFIELDS, $data);  </span><br><span class="line">curl_setopt($curlobj, CURLOPT_HTTPHEADER, <span class="keyword">array</span>(<span class="string">"application/x-www-form-urlencoded; charset=utf-8"</span>, </span><br><span class="line">	<span class="string">"Content-length: "</span>.strlen($data)</span><br><span class="line">	)); </span><br><span class="line">$rtn = curl_exec($curlobj);   </span><br><span class="line"><span class="keyword">if</span>(!curl_errno($curlobj))&#123;</span><br><span class="line">	<span class="comment">// $info = curl_getinfo($curlobj); </span></span><br><span class="line">	<span class="comment">// print_r($info);</span></span><br><span class="line">	<span class="keyword">echo</span> $rtn;  </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Curl error: '</span> . curl_error($curlobj);</span><br><span class="line">&#125;</span><br><span class="line">curl_close($curlobj);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>5、从FTP上下载数据</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$curlobj = curl_init();	</span><br><span class="line">curl_setopt($curlobj, CURLOPT_URL, <span class="string">"ftp://192.168.1.100/downloaddemo.txt"</span>);  </span><br><span class="line">curl_setopt($curlobj, CURLOPT_HEADER, <span class="number">0</span>); </span><br><span class="line">curl_setopt($curlobj, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);  </span><br><span class="line">curl_setopt($curlobj, CURLOPT_TIMEOUT, <span class="number">300</span>); <span class="comment">// times out after 300s</span></span><br><span class="line">curl_setopt($curlobj, CURLOPT_USERPWD, <span class="string">"peter.zhou:123456"</span>);<span class="comment">//FTP用户名：密码</span></span><br><span class="line"><span class="comment">// Sets up the output file</span></span><br><span class="line">$outfile = fopen(<span class="string">'dest.txt'</span>, <span class="string">'wb'</span>);<span class="comment">//保存到本地的文件名</span></span><br><span class="line">curl_setopt($curlobj, CURLOPT_FILE, $outfile);</span><br><span class="line"></span><br><span class="line">$rtn = curl_exec($curlobj);  </span><br><span class="line">fclose($outfile); </span><br><span class="line"><span class="keyword">if</span>(!curl_errno($curlobj))&#123;</span><br><span class="line">	<span class="comment">// $info = curl_getinfo($curlobj); </span></span><br><span class="line">	<span class="comment">// print_r($info);</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"RETURN: "</span> . $rtn;  </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Curl error: '</span> . curl_error($curlobj);</span><br><span class="line">&#125;</span><br><span class="line">curl_close($curlobj);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>6、上传数据到FTP </li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$curlobj = curl_init();	</span><br><span class="line">$localfile = <span class="string">'ftp01.php'</span>;</span><br><span class="line">$fp = fopen($localfile, <span class="string">'r'</span>);</span><br><span class="line"></span><br><span class="line">curl_setopt($curlobj, CURLOPT_URL, <span class="string">"ftp://192.168.1.100/ftp01_uploaded.php"</span>);  </span><br><span class="line">curl_setopt($curlobj, CURLOPT_HEADER, <span class="number">0</span>); </span><br><span class="line">curl_setopt($curlobj, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);  </span><br><span class="line">curl_setopt($curlobj, CURLOPT_TIMEOUT, <span class="number">300</span>); <span class="comment">// times out after 300s</span></span><br><span class="line">curl_setopt($curlobj, CURLOPT_USERPWD, <span class="string">"peter.zhou:123456"</span>);<span class="comment">//FTP用户名：密码</span></span><br><span class="line"></span><br><span class="line">curl_setopt($curlobj, CURLOPT_UPLOAD, <span class="number">1</span>);</span><br><span class="line">curl_setopt($curlobj, CURLOPT_INFILE, $fp);</span><br><span class="line">curl_setopt($curlobj, CURLOPT_INFILESIZE, filesize($localfile));</span><br><span class="line">$rtn = curl_exec($curlobj);  </span><br><span class="line">fclose($fp); </span><br><span class="line"><span class="keyword">if</span>(!curl_errno($curlobj))&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"Uploaded successfully."</span>;  </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Curl error: '</span> . curl_error($curlobj);</span><br><span class="line">&#125;</span><br><span class="line">curl_close($curlobj);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>7、下载网络上面的一个HTTPS的资源</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$curlobj = curl_init();			<span class="comment">// 初始化</span></span><br><span class="line">curl_setopt($curlobj, CURLOPT_URL, <span class="string">"https://ajax.aspnetcdn.com/ajax/jquery.validate/1.12.0/jquery.validate.js"</span>);		<span class="comment">// 设置访问网页的URL</span></span><br><span class="line">curl_setopt($curlobj, CURLOPT_RETURNTRANSFER, <span class="keyword">true</span>);			<span class="comment">// 执行之后不直接打印出来</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置HTTPS支持</span></span><br><span class="line">date_default_timezone_set(<span class="string">'PRC'</span>); <span class="comment">// 使用Cookie时，必须先设置时区</span></span><br><span class="line">curl_setopt($curlobj, CURLOPT_SSL_VERIFYPEER, <span class="number">0</span>); <span class="comment">// 对认证证书来源的检查从证书中检查SSL加密算法是否存在</span></span><br><span class="line">curl_setopt($curlobj, CURLOPT_SSL_VERIFYHOST, <span class="number">2</span>); <span class="comment">// </span></span><br><span class="line"></span><br><span class="line">$output=curl_exec($curlobj);	<span class="comment">// 执行</span></span><br><span class="line">curl_close($curlobj);			<span class="comment">// 关闭cURL</span></span><br><span class="line"><span class="keyword">echo</span> $output;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="更多参考">更多参考</h1><ul>
<li><a href="http://www.php.net/manual/zh/book.curl.php" target="_blank" rel="external">官方手册</a></li>
<li><a href="http://php.net/manual/zh/" target="_blank" rel="external">PHP中文手册</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言">前言</h1><blockquote>
<p>cURL(Client URL Library Functions): curl is a command line tool for transferring data with URL syntax,即使用URL语法传输数据的命令行工具。<br>]]>
    
    </summary>
    
      <category term="PHP" scheme="http://daijiale.github.io/tags/PHP/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Android-持续更新】Android求职知识点Review]]></title>
    <link href="http://daijiale.github.io/2015/07/21/%E3%80%90Android%E3%80%91Android%E6%B1%82%E8%81%8C%E7%9F%A5%E8%AF%86%E7%82%B9Review/"/>
    <id>http://daijiale.github.io/2015/07/21/【Android】Android求职知识点Review/</id>
    <published>2015-07-21T07:13:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="JAVA">JAVA</h1><h2 id="1-_举例说明多态和重载区别">1. 举例说明多态和重载区别</h2><pre><code><span class="keyword">*</span><span class="keyword">*</span> 重载<span class="keyword">*</span><span class="keyword">*</span>
</code></pre> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">class A&#123;</span><br><span class="line">void Aa(int a )&#123;....&#125;</span><br><span class="line">void Aa (int a,int b)&#123;...&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>虽然Aa定义了2个 但是因为他们注册的参数不同所以 看作为2个不同的方法</p>
<p><strong>多态</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">interface A </span><br><span class="line">&#123; </span><br><span class="line">void Aa();</span><br><span class="line">&#125;</span><br><span class="line">class B implement A</span><br><span class="line">&#123;</span><br><span class="line">void Aa()&#123; System.out.println(&quot;123123&quot;); &#125;</span><br><span class="line">&#125;</span><br><span class="line">class C implement A</span><br><span class="line">&#123;</span><br><span class="line">void Aa()&#123; System.out.println(&quot;abcabc&quot;); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>多态就是可以理解一个方法被不同实现后 展现不同的效果及状态</p>
<h2 id="2-_堆栈">2. 堆栈</h2><p><a href="http://zhidao.baidu.com/link?url=nPxYN0s7pcGMl30_IhoQw_K7MykYYQOgiHNIzzeXZt-cLPQAbzJqVOYZvy3aNZayeYpEnHuBA98zXFpJzRa8sq" target="_blank" rel="external">广义堆栈数据结构</a></p>
<p><a href="http://blog.csdn.net/chengyingzhilian/article/details/7781858" target="_blank" rel="external">Java中的堆栈</a></p>
<a id="more"></a>
<h2 id="3-_垃圾回收">3. 垃圾回收</h2><p><a href="http://blog.csdn.net/zsuguangh/article/details/6429592" target="_blank" rel="external">垃圾回收机制</a></p>
<h2 id="4-_Final，finally，finalize">4. Final，finally，finalize</h2><p><a href="http://jingyan.baidu.com/article/597a064363b676312b5243ad.html" target="_blank" rel="external">三者区别</a></p>
<h2 id="5-_序列化反序列化，为什么要有自定义序列化">5. 序列化反序列化，为什么要有自定义序列化</h2><p><a href="http://blog.sina.com.cn/s/blog_8af1069601013ifb.html" target="_blank" rel="external">序列化和反序列化</a></p>
<p><a href="http://blog.csdn.net/linuxandroidwince/article/details/7187778" target="_blank" rel="external">为什么要自定义序列化</a></p>
<h2 id="6-_Java的灵活性体现在什么机制上"><a href="http://www.cnblogs.com/jqyp/archive/2012/03/29/2423112.html" target="_blank" rel="external">6. Java的灵活性体现在什么机制上</a></h2><h2 id="7-_Jdk1-5到1-7有什么新特性"><a href="http://www.cnblogs.com/langtianya/p/3757993.html" target="_blank" rel="external">7. Jdk1.5到1.7有什么新特性</a></h2><h2 id="8-_排序算法"><a href="http://blog.csdn.net/hguisu/article/details/7776068" target="_blank" rel="external">8. 排序算法</a></h2><h2 id="9-_无序数组ab，每个数组有一次循环遍历的机会，找出a有b没有的数字(不能使用外部东西)"><a href="http://zhidao.baidu.com/link?url=xNrK6lpmardilOvaN07ekFO1f6GxckKRSbBGA8BpUEGLU_e1zE7lw4aDoFFDvZecbZ-pZvPViB_7HgkO09TsN5KLOhfkOgUZvJXLhxaC8Ua" target="_blank" rel="external">9. 无序数组ab，每个数组有一次循环遍历的机会，找出a有b没有的数字(不能使用外部东西)</a></h2><h2 id="10-_Hashtable和hashmap">10. Hashtable和hashmap</h2><ul>
<li><a href="http://blog.csdn.net/tianfeng701/article/details/7588091" target="_blank" rel="external">两者区别</a></li>
<li><a href="http://www.jb51.net/article/42769.htm" target="_blank" rel="external">HashMap源码分析</a></li>
<li><a href="http://www.cnblogs.com/caca/p/java_Hashtable.html" target="_blank" rel="external">HashTable源码分析</a></li>
<li><a href="http://www.jb51.net/article/32652.htm" target="_blank" rel="external">HashMap和TreeMap区别</a></li>
</ul>
<h2 id="11-_Hashcode是怎么得到的"><a href="http://www.importnew.com/8189.html" target="_blank" rel="external">11. Hashcode是怎么得到的</a></h2><h2 id="12-_线程和进程"><a href="http://blog.csdn.net/yaosiming2011/article/details/44280797" target="_blank" rel="external">12. 线程和进程</a></h2><h2 id="13-_Sleep和wait区别">13. Sleep和wait区别</h2><p>sleep指线程被调用时，占着CPU不工作，形象地说明为“占着CPU睡觉”，此时，系统的CPU部分资源被占用，其他线程无法进入，会增加时间限制。<br>wait指线程处于进入等待状态，形象地说明为“等待使用CPU”，此时线程不占用任何资源，不增加时间限制。<br>所以<br>sleep（100L）意思为：占用CPU，线程休眠100毫秒<br>wait（100L）意思为：不占用CPU，线程等待100毫秒</p>
<h2 id="14-_二叉平衡树(红黑树)，满二叉树">14. 二叉平衡树(<a href="http://blog.chinaunix.net/uid-26575352-id-3061918.html" target="_blank" rel="external">红黑树</a>)，满二叉树</h2><h2 id="15-_Object有哪些基本的方法">15. <a href="http://blog.sina.com.cn/s/blog_6cbdddcb0100m485.html" target="_blank" rel="external">Object有哪些基本的方法</a></h2><h2 id="16-_Io和nio">16. <a href="http://www.jb51.net/article/50621.htm" target="_blank" rel="external">Io和nio</a></h2><h2 id="17-_写一个单例模式的例子">17. <a href="http://blog.csdn.net/jason0539/article/details/23297037" target="_blank" rel="external">写一个单例模式的例子</a></h2><h2 id="18-_Socket">18. Socket</h2><p><a href="http://www.cnblogs.com/linzheng/archive/2011/01/23/1942328.html" target="_blank" rel="external">socket原理</a></p>
<p><a href="http://blog.csdn.net/benweizhu/article/details/6615542" target="_blank" rel="external">Java实现socket连接</a></p>
<h2 id="19-_Exception"><a href="http://baike.baidu.com/link?url=mDZRsd9wu9hvuNCzQ-ElxThAAb87sMLa-JN1FMuY_SzZZ0DtTJcQ3nWJXZMpy2ub4aTx0s7dGfLVmh-Zn_Z2Mq" target="_blank" rel="external">19. Exception</a></h2><h2 id="20-_有向图和无向图什么区别"><a href="http://zhidao.baidu.com/link?url=9LsXkHigig70jc8lVZc0qY7_Q_vg3wPkZ0d41HCyUgxLO6Prt5nE_HhKjL0X97K8JKsTFAZfMzDlXSSS2WDuaa" target="_blank" rel="external">20. 有向图和无向图什么区别</a></h2><h2 id="21-_Linux基本命令"><a href="http://www.cnblogs.com/laov/p/3541414.html" target="_blank" rel="external">21. Linux基本命令</a></h2><h2 id="22-_KMP算法"><a href="http://wenku.baidu.com/link?url=ABxFIVEN_q3u3v-bySigVT0U8AZ0BKdTT1sFSCv-RqCb5AA_6FVEV0OraK66cT2TkDevzrarKujN2tcDOBbD5GgJVXjHymFZl7Cfoc6RJbC" target="_blank" rel="external">22. KMP算法</a></h2><h2 id="23-_深克隆，浅克隆"><a href="http://www.cnblogs.com/xing901022/p/4051097.html#_label3" target="_blank" rel="external">23. 深克隆，浅克隆</a></h2><h2 id="24-_Java的引用类型有哪些，在垃圾回收的时候有什么表现">24. Java的引用类型有哪些，在垃圾回收的时候有什么表现</h2><h1 id="数据库">数据库</h1><p>1.ACID</p>
<ol>
<li>Group by</li>
<li>Distinct</li>
<li>Where条件的执行顺序是从前往后还是从后往前，还是其他什么顺序</li>
<li><a href="http://www.codeceo.com/article/android-sqlite-course.html" target="_blank" rel="external">AndroidSQlite</a></li>
</ol>
<h1 id="网络">网络</h1><p>1.你知道什么网络协议，解释一下<br>2.post和get区别<br>3.OSI参考模型<br>4.get的参数是跟在url后面，那post的参数是加在什么地方<br>5.断点重传<br>6.PC端的网络连接和移动端有什么区别?<br>7.定位需要几颗卫星<br>8.Gps和agps定位有什么区别</p>
<h1 id="Android">Android</h1><h2 id="1-_横竖屏切换的差别">1. 横竖屏切换的差别</h2><h2 id="2-_Activity生命周期">2. <a href="http://blog.csdn.net/liuhe688/article/details/6733407" target="_blank" rel="external">Activity生命周期</a></h2><h2 id="3-_什么时候会用到activity生命周期">3.<a href="http://jinguo.iteye.com/blog/691263" target="_blank" rel="external"> 什么时候会用到activity生命周期</a></h2><ol>
<li>Scroll中有listview，出现什么问题，如何解决</li>
<li>消息推送的方法</li>
<li>有一个比较大的图片，如果内存不够加载，怎么办</li>
</ol>
<h2 id="7-_Android四大组件">7. Android四大组件</h2><p><strong>Activity 组件介绍</strong></p>
<p> Activity是Android中最基本也是最重要的一个组件，它主要负责Android中的页面展示，所有大家看到的Android中的界面，都是Activity。</p>
<p><strong>ContentProvider组件介绍</strong></p>
<p>Android中每个应用程序都有自己的内存空间，而且应用程序之间的内存空间是无法相互访问的，这就带来了一个问题，如果几个应用程序之间希望共享一份数据的话，将很难实现。例如，我们手机上有可能有多个短信客户端，但是它们访问的短信数据确是统一份库。Android中通过ContentProvider来实现应用程序间的数据共享。所以应用程序间的数据只有通过ContentProvider来进行分享。</p>
<p><strong>Service组件介绍</strong></p>
<p>Service运行在Android的后台，它不和用户直接交互，但是它却能够为用户提供一些服务。例如：后台的音乐播放、后台的任务下载等。当然android系统中大部分与硬件相关的一些功能也都是通过服务来实现的，如电话服务、短信服务和GPS服务等。所以如果当你希望开发的功能是在后台运行的，那么你就应该考虑使用Service实现了。</p>
<p><strong>BroadcastReceiver组件介绍</strong></p>
<p>Broadcast是Android中各个应用程序之间传输消息的最基本机制，也是唯一的机制。而我们在应用中就可以通过BroadcastReceiver来截获系统所发出的广播消息，从而获取系统所要传达的消息。例如，接受短信广播，可以实现短信的拦截功能，接受电话广播可以实现电话的黑名单功能等。所以如果你想要实现的功能是通过系统的广播，来实现一些功能，那你就要考虑使用BroadcastReceiver了。</p>
<p><strong>Intent组件介绍</strong></p>
<p>之前我们介绍的几个组件，是Android中的基本组件，但是这些组件之间想要进行交互，就一定要使用Intent了。例如，通过Activity去启动另一个Activity，通过Activity去发送广播等。这些都要用到Intent组件。而且很多与系统的功能交互也要使用Intent，所以如果你希望通过一个组件去启动另一个组件的话，就要使用Intent了。</p>
<h2 id="8-_Android常见数据集合">8. Android常见数据集合</h2><p><a href="http://j2eemylove.iteye.com/blog/1195823" target="_blank" rel="external">List, Map,Set</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="JAVA">JAVA</h1><h2 id="1-_举例说明多态和重载区别">1. 举例说明多态和重载区别</h2><pre><code><span class="keyword">*</span><span class="keyword">*</span> 重载<span class="keyword">*</span><span class="keyword">*</span>
</code></pre> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">class A&#123;</span><br><span class="line">void Aa(int a )&#123;....&#125;</span><br><span class="line">void Aa (int a,int b)&#123;...&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>虽然Aa定义了2个 但是因为他们注册的参数不同所以 看作为2个不同的方法</p>
<p><strong>多态</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">interface A </span><br><span class="line">&#123; </span><br><span class="line">void Aa();</span><br><span class="line">&#125;</span><br><span class="line">class B implement A</span><br><span class="line">&#123;</span><br><span class="line">void Aa()&#123; System.out.println(&quot;123123&quot;); &#125;</span><br><span class="line">&#125;</span><br><span class="line">class C implement A</span><br><span class="line">&#123;</span><br><span class="line">void Aa()&#123; System.out.println(&quot;abcabc&quot;); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>多态就是可以理解一个方法被不同实现后 展现不同的效果及状态</p>
<h2 id="2-_堆栈">2. 堆栈</h2><p><a href="http://zhidao.baidu.com/link?url=nPxYN0s7pcGMl30_IhoQw_K7MykYYQOgiHNIzzeXZt-cLPQAbzJqVOYZvy3aNZayeYpEnHuBA98zXFpJzRa8sq">广义堆栈数据结构</a></p>
<p><a href="http://blog.csdn.net/chengyingzhilian/article/details/7781858">Java中的堆栈</a></p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://daijiale.github.io/tags/Android/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Android开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Android%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Android-持续更新】Android开发常用知识点总结]]></title>
    <link href="http://daijiale.github.io/2015/07/10/%E3%80%90Android%E3%80%91Android%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    <id>http://daijiale.github.io/2015/07/10/【Android】Android开发常用知识点总结/</id>
    <published>2015-07-10T07:13:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Android开发常用知识点总结：">Android开发常用知识点总结：</h1><a id="more"></a>
<h2 id="Android异步加载：">Android异步加载：</h2><p>  用异步的方式去加载数据（主要是图像，不解释），可以让用户在刷新数据时候不用经历太多卡顿，这也是Google官方要求我们去做的一种方式。</p>
<ul>
<li>为什么要使用异步加载：Android单线程模型以及耗时操作阻塞UI线程。</li>
<li>异步加载最常用的两种方式：线程池以及AsyncTask。</li>
</ul>
<h3 id="AsyncTask流程：">AsyncTask流程：</h3><h4 id="字符串异步加载">字符串异步加载</h4><p>  1.在<code>onCreate</code>方法中，<code>new NewsAsyncTask().execute(URL)</code>;传入所对应需要异步访问的URL。</p>
<p>  2.将URL传入下面<code>AsyncTask</code>中的<code>getJsonData()</code>。</p>
<p>  3.再通过<code>getJsonData()</code>中的Json解析操作，将网络Json数据存储到程序里封装的<code>NewsBean</code>数据项对象 (和 <code>Json Obj</code>格式一一对应的关系) 中。</p>
<p>  4.在<code>AsyncTask</code>的<code>onPostExecute</code>方法中，将<code>NewsBean</code>数据传递给<code>NewsAdapter</code>，来构造出<code>ListView</code>的数据源。</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">class NewAsyncTask extend AsyncTask&lt;String,Void,List&lt;NewsBean&gt;&gt;&#123;</span><br><span class="line">	protected List&lt;NewsBean&gt;doInBackground(...)&#123;</span><br><span class="line">		return getJsonData(params[0]);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	protected onPostExecute(List&lt;NewsBean&gt; newsBean)&#123;</span><br><span class="line">		super.onPostExecute(newsBean);</span><br><span class="line">		NewsAdapter adapter = new Newsadapter(MainActivity.this,newsBean);</span><br><span class="line">		mListView.setAdapter(adapter);  	</span><br><span class="line">	&#125;</span><br><span class="line">	  	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="图像异步加载">图像异步加载</h4><h5 id="多线程方式">多线程方式</h5><p>1.新建<code>ImageLoader</code>类，使用多线程去加载图片，引入<code>showImageByThread(ImageView imageView,String url)</code>方法，去通过<code>URL</code>获取图片数据，并转化成<code>Bitmap</code>数据，并在<code>Adapter</code>中调用该方法.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public class ImageLoad &#123;</span><br><span class="line">	public void showImageByThread(ImageView imageView,String url) &#123;		new Thread()&#123;</span><br><span class="line">			public void run()&#123;</span><br><span class="line">			super.run();</span><br><span class="line">			</span><br><span class="line">		&#125;		</span><br><span class="line">	&#125;.start();</span><br><span class="line">&#125;</span><br><span class="line">	public Bitmap getBitmapFromURL(String urlString)&#123;</span><br><span class="line">		Bitmap bitmap;</span><br><span class="line">		InputStream is;</span><br><span class="line">		try &#123;</span><br><span class="line">			URL url = new URL（urlString）；</span><br><span class="line">			HttpURLConnection connection = (HttpURLConnection)url.openConnection();</span><br><span class="line">			is = new BufferedInputStream(connection.getInputStream());</span><br><span class="line">			bitmap = BitmapFactory.decodeStream(is);</span><br><span class="line">			connection.disconnect();</span><br><span class="line">			return bitmap;</span><br><span class="line">		&#125;catch(java.io.IOException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;finally&#123;</span><br><span class="line">			is.close();</span><br><span class="line">		&#125;</span><br><span class="line">		return null;</span><br><span class="line">	&#125;</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>2.在<code>NewsAdapter</code>类中设置<code>xml</code>文件对应的<code>ImageView</code>控件ID和<code>showImageByThread</code>绑定。</p>
<p>3.在子线程中去执行<code>bitmap</code>获取函数，并设置<code>handler</code>来绑定<code>ImageView</code></p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">public class ImageLoad &#123;</span><br><span class="line">       </span><br><span class="line">       private ImageView mImageView;</span><br><span class="line">       private Handler handler = new Handler()&#123;</span><br><span class="line">       		</span><br><span class="line">       		public void handleMessage(Message msg)&#123;</span><br><span class="line">       			super.handleMessage(msg);</span><br><span class="line">       			</span><br><span class="line">       			//将消息传递来的bitmap取出，设置给imageview</span><br><span class="line">       			</span><br><span class="line">       			mImageView.setImageBitmap((Bitmap)msg.obj);      			</span><br><span class="line">       		&#125;</span><br><span class="line">       </span><br><span class="line">       &#125;;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">	public void showImageByThread(ImageView imageView,final String url) &#123;</span><br><span class="line">			mImageView = imageView;</span><br><span class="line">			new Thread()&#123;</span><br><span class="line">				public void run()&#123;</span><br><span class="line">					super.run();</span><br><span class="line">					Bitmap	bitmap = getBitmapFromURL(url);</span><br><span class="line">			/* 虽然我们这里有了一个bitmap，但是由于Android的单线程模型（非主线程是不能直接去编辑UI的），我们无法直接把bitmap赋值给ImageView。所以这里我们需要启一个Handler去做消息的传递。*/</span><br><span class="line">					Message message = Message.obtain();  //使用先用已经回收的message，提高Android系统效率</span><br><span class="line">					message.obj = bitmap;</span><br><span class="line">					handler.sendMessage(message);</span><br><span class="line">				&#125;		</span><br><span class="line">			&#125;.start();</span><br><span class="line">&#125;</span><br><span class="line">	public Bitmap getBitmapFromURL(String urlString)&#123;...&#125;</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>4.最后注意<code>ListView的缓存机制</code>：<code>ListView</code>会重用<code>ConvertView</code>，每次下拉刷新后会从缓冲池中重用旧的图片。为了解决这个问题，我们需要在<code>Adapter</code>中增加<code>Tag</code>，在<code>handler</code>中来进行身份判定,确定<code>handle</code>接收到的<code>Tag</code>和传进的<code>URL</code>是相同的时候，才设置<code>Bitmap</code>，使得正确的<code>Item</code>显示正确的数据。（这是处理异步加载错乱常用的一种方式，另一种是：用成员变量，对数据进行缓冲来消除由于网络获取时间不确定导致时序顺序错误。）</p>
<p>NewsAdapter类中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//在NewsAdapter中，设置图片UrlTag用作判定条件</span><br><span class="line">String url = mList.getr(position).newsIconUrl;</span><br><span class="line">viewHolder.ivIcon.setTag(url);</span><br></pre></td></tr></table></figure>
<p>ImageLoad类中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//在ImageLoad中，增加`handler`中`bitmap`绑定`ImageView`的判定条件</span><br><span class="line"></span><br><span class="line"> private ImageView mImageView;</span><br><span class="line">       private Handler handler = new Handler()&#123;</span><br><span class="line">       		</span><br><span class="line">       		public void handleMessage(Message msg)&#123;</span><br><span class="line">       			super.handleMessage(msg);</span><br><span class="line">       			</span><br><span class="line">       			//将消息传递来的bitmap取出，设置给imageview</span><br><span class="line">       			if(mImageView.getTag().equals(url))&#123;</span><br><span class="line">       				mImageView.setImageBitmap((Bitmap)msg.obj);      			&#125;</span><br><span class="line">       		&#125;</span><br><span class="line">       </span><br><span class="line">       &#125;;</span><br></pre></td></tr></table></figure>
<h5 id="AsyncTask方式">AsyncTask方式</h5><p>1.在<code>Adapter</code>中新建<code>showImageByAsyncTask(ImageView imageView,String url)</code>方法</p>
<p>2.紧接着，在<code>Adapter</code>中创建<code>NewsAsyncTask extend AsyncTask</code>去加载<code>ImageView</code>并绑定</p>
<p>3.在<code>AsyncTask</code>的<code>onPostExecute</code>方法中，设置<code>Bitmap</code>绑定到<code>imageVIew</code>上，即：<code>mImageView.setImageBitmap(bitmap)</code>;</p>
<p>4.最后注意增加Tag来解决异步加载错乱的问题:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(mImageView.getTag().equals(mUrl))&#123;</span><br><span class="line">	mImageView.setImageBitmap(bitmap);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="网络加载优化">网络加载优化</h4><h5 id="优化原因">优化原因</h5><p>图片资源过大，最好不要一滑动就重复加载。为了解决这个问题，我们增加缓存机制，提高用户体验。</p>
<h5 id="Lru算法">Lru算法</h5><ul>
<li>Lru: Least Recently Used 近期最少使用算法。</li>
<li>Android提供了LruCache类来实现这个缓存算法。</li>
</ul>
<h5 id="使用方法">使用方法</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">private LruCache&lt;String,Bitmap&gt; mCaches;</span><br><span class="line"></span><br><span class="line">public ImageLoader ( ) &#123;</span><br><span class="line">	int maxMemory = (int) Runtime.getRuntime().maxMemory();//获取最大可用内存</span><br><span class="line">	int cacheSize = maxMemory / 4;</span><br><span class="line">	mCaches = new LruCache&lt;String , Bitmap&gt;(cacheSize)&#123;</span><br><span class="line">		protected int sizeof(String key,Bitmap value)&#123;</span><br><span class="line">		//每次存入缓存的时候调用</span><br><span class="line">			return value.getByteCount();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//增加到缓存</span><br><span class="line">public void addBitmapToCache(String url,Bitmap bitmap)&#123;</span><br><span class="line">	if(getBitmapFromCache(url) == null )&#123;</span><br><span class="line">		mCaches.put(url,bitmap);</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//从缓存中取出数据</span><br><span class="line">public Bitmap getBitmapFromCache(String url)&#123;</span><br><span class="line">	return mCaches.get(url);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//以AsyncTask为例，之后我们需要先判断一下缓存中是否已经有了一个URL对应的图片。</span><br><span class="line"></span><br><span class="line">public void showImageByAsyncTask(ImageView imageView,String url)&#123;</span><br><span class="line">		//从缓存中取出图片</span><br><span class="line">	 Bitmap bitmap = getBitmapFromCache(url);</span><br><span class="line"> 		if(bitmap == null)&#123;</span><br><span class="line"> 		//如果缓存中没有，则必须去网络异步下载</span><br><span class="line"> 			new NewsAsyncTask(imageView,url).execute(url);</span><br><span class="line"> 		&#125;else&#123;</span><br><span class="line"> 			imageView.setImageBitmap(bitmap);</span><br><span class="line"> 	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//修改NewsAsyncTask方法，将网络异步下载下的图片保存到LruCache中。</span><br><span class="line"></span><br><span class="line">private class NewsAsyncTasks extends AsyncTask&lt;String,Void,Bitmap&gt;&#123;</span><br><span class="line">	</span><br><span class="line">	private ImageView mImageView;</span><br><span class="line">	private String mUrl;</span><br><span class="line">	</span><br><span class="line">	public NewsAsyncTask(ImageView imageView,String url)&#123;</span><br><span class="line">		mImageView = imageView;</span><br><span class="line">		mUrl = url;	</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	protected Bitmap doInBackground(String...params)&#123;</span><br><span class="line">		String url = params[0];</span><br><span class="line">		//从网络上获取图片</span><br><span class="line">		Bitmap bitmap ＝ getBitmapFromURL（url）；</span><br><span class="line">		</span><br><span class="line">		if ( bitmap ! = null ) &#123;</span><br><span class="line">		//将不在缓存的图片加入缓存</span><br><span class="line">		addBitmapToCache(url,bitmap);</span><br><span class="line">		&#125;</span><br><span class="line">		return bitmap;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Android字符流">Android字符流</h2><p>  注意用InputStream去读取字节流时候需要用InputStreamReader转化成为UTF8字符流传入BufferedReader，再通过定义string content 去循环接收BufferedReader的字符流数据。</p>
<h2 id="Android-util-Log">Android.util.Log</h2><p>  android.util.Log常用的方法有以下5个：Log.v() Log.d() Log.i() Log.w() 以及 Log.e() 。根据首字母对应VERBOSE，DEBUG,INFO, WARN，ERROR。</p>
<p>1、Log.v 的调试颜色为黑色的，任何消息都会输出，这里的v代表verbose啰嗦的意思，平时使用就是Log.v(“”,””);</p>
<p>2、Log.d的输出颜色是蓝色的，仅输出debug调试的意思，但他会输出上层的信息，过滤起来可以通过DDMS的Logcat标签来选择.</p>
<p>3、Log.i的输出为绿色，一般提示性的消息information，它不会输出Log.v和Log.d的信息，但会显示i、w和e的信息</p>
<p>4、Log.w的意思为橙色，可以看作为warning警告，一般需要我们注意优化Android代码，同时选择它后还会输出Log.e的信息。</p>
<p>5、Log.e为红色，可以想到error错误，这里仅显示红色的错误信息，这些错误就需要我们认真的分析，查看栈的信息了。</p>
<h2 id="Android_Handler">Android Handler</h2>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Android开发常用知识点总结：">Android开发常用知识点总结：</h1>]]>
    
    </summary>
    
      <category term="Android" scheme="http://daijiale.github.io/tags/Android/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Android开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Android%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Node.js-持续更新】Node.js学习开发笔记]]></title>
    <link href="http://daijiale.github.io/2015/07/06/%E3%80%90Node.js%E3%80%91Node.js%E5%AD%A6%E4%B9%A0%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    <id>http://daijiale.github.io/2015/07/06/【Node.js】Node.js学习开发笔记/</id>
    <published>2015-07-06T11:21:11.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><blockquote>
<p>第一次接触Node.js是大二在四川长虹实习期间，距现在已经1年多了，在自己的一些项目中有用到，积累了一些经验，但是想更加系统的学习一下这门技术（主要这两年发展的太火了。。），同时也想把一些开发过程中的问题和案例分享出来， 特为此撰写一篇博客笔记…<br><a id="more"></a></p>
</blockquote>
<h1 id="学习篇">学习篇</h1><h2 id="Node-js相比于PHP、Java、Python的优势">Node.js相比于PHP、Java、Python的优势</h2><ul>
<li><p><a href="http://www.zhihu.com/question/20961574" target="_blank" rel="external">Node.js和Python优势对比</a></p>
</li>
<li><p><a href="http://note.youdao.com/share/?id=a83b62577821d670122f8d08a67d8fd4&amp;type=note" target="_blank" rel="external">Node.js和PHP的优势对比</a></p>
<ul>
<li><a href="http://www.admin10000.com/document/6536.html" target="_blank" rel="external">Node.js和PHP的优势对比2</a></li>
</ul>
</li>
</ul>
<h2 id="Node-js的版本">Node.js的版本</h2><ul>
<li>偶数位为稳定版本（-0.6x   -0.8x  -0.10.x）</li>
<li>奇数为非稳定版本（-0.7x   -0.9x  -0.11.x）</li>
</ul>
<h1 id="开发篇">开发篇</h1>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言">前言</h1><blockquote>
<p>第一次接触Node.js是大二在四川长虹实习期间，距现在已经1年多了，在自己的一些项目中有用到，积累了一些经验，但是想更加系统的学习一下这门技术（主要这两年发展的太火了。。），同时也想把一些开发过程中的问题和案例分享出来， 特为此撰写一篇博客笔记…<br>]]>
    
    </summary>
    
      <category term="Javascript" scheme="http://daijiale.github.io/tags/Javascript/"/>
    
      <category term="Node.js" scheme="http://daijiale.github.io/tags/Node-js/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【个人】在百度实习的那些日子]]></title>
    <link href="http://daijiale.github.io/2015/06/29/%E3%80%90%E4%B8%AA%E4%BA%BA%E3%80%91%E5%9C%A8%E7%99%BE%E5%BA%A6%E5%AE%9E%E4%B9%A0%E7%9A%84%E9%82%A3%E4%BA%9B%E6%97%A5%E5%AD%90/"/>
    <id>http://daijiale.github.io/2015/06/29/【个人】在百度实习的那些日子/</id>
    <published>2015-06-29T11:13:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>时间：2014.11.19-2015.6.24</p>
<p>地点：北京海淀区上地东路鹏寰国际大厦</p>
<p>部门: 移动搜索事业部</p>
</blockquote>
<p>转眼之间，在百度移动搜索事业部创新业务项目组已经实习七个多月了，终于到了要说再见的日子。心里五味杂陈，特此写下这篇Blog，纪念这段特殊经历带给我的那些巨大成长…</p>
<a id="more"></a>
<p>我也不知道从哪起头比较好，就按时间顺序来吧。</p>
<h1 id="2014年10月">2014年10月</h1><p>记得去年10月刚开始找实习的时候，直接就果断投了BAT，腾讯阿里那边可能由于是淡季的原因(没有校园通道)，社招实习生的简历基本不怎么看。。。只等到了百度HR姐姐的电话，紧接着就是长达半个月的一面、二面、三面、以及offer发放。还比较顺利，总共投了两份百度岗位，就都拿到了offer（也证明了大一大二自己那么拼是有价值的），拒绝了百度MUX视觉设计的职位，毅然选择了移动应用研发。唯一比较郁闷的就是那边立刻要求入职。。。所以只好11.19号就得奔赴北京（当时还是大三上。。。12月和1月还得回来期末考）。。。</p>
<h1 id="2014年11月">2014年11月</h1><ul>
<li>11月中下旬，一个人乘着火车来到了帝都。。。</li>
<li>紧接着：入职百度</li>
<li>进入了彬大的团队，周围都是神一样的程序员…</li>
<li>熟悉公司环境和业务流程</li>
<li>掌握token使用和云开发机权限</li>
<li>学习大型互联网公司的企业管理</li>
<li>自己找房子，和胖哥、刘亚军一起合租，料理好生活琐事</li>
</ul>
<h1 id="2014年12月">2014年12月</h1><ul>
<li>和第一位导师宏驰哥（T5）一起学习<code>AndroidCanvas</code>动效知识，熟悉<code>百度语音开发SDK</code>，协助语音SDK的Demo特效开发。</li>
<li>去北邮见了老马和李彦轩等老同学。</li>
<li>12月底花了1500多RMB买了两张机票，只为回学校考一门坑爹的考试（信号论）</li>
</ul>
<h1 id="2015年1月">2015年1月</h1><ul>
<li>回Baidu继续上班，完成语音SDK的AndroidDemo后，又开始制作自定义View，从马总那得知年后会有一个百度智能手表的产品线要上，为此做技术预演。</li>
<li>团队里新入职了很多NB的实习生，有北大、哈工大、中科大、南邮的研究生，还有来中山大学的大四生肖勇（后面成了好基友）。</li>
<li>钻研AndroidWear开发。</li>
<li>请了半个月的假回去参加陆续的期末考试（任性，但是没办法，钱倒霉吧）。。。</li>
<li>回去考试中旅转机和胖哥去了趟天津，看了看天津之眼，很棒的城市。</li>
</ul>
<h1 id="2015年2月">2015年2月</h1><ul>
<li>这个月的过得挺丰富的，挺多精彩的事情值得回忆一下。</li>
<li>去北交见了下李路航。</li>
<li>参加了今年的百度年会（高端大气上档次），见了Robin。</li>
<li>参加了移动云的部门年会，见了明远太子。</li>
<li>和团队一起去军都山滑雪，爱上这个运动了，很有操作感。</li>
<li>考完试回来后真正融入团队的产品线了—DuWear智能手表操作系统。</li>
<li>配合MUX的UE研发<code>Du系列</code>智能手表三套表盘。</li>
<li>回家过大年，10天假，见见老同学和朋友。</li>
<li>1个月的业余时间+过年期间，为自己学校俱乐部搭建了一个基于TP的<a href="www.developerclub.cn">UESTC开发者俱乐部</a>（校园开发者社区站点），感受了下全栈工程师的工作量（PS: 真不是人干的）。</li>
</ul>
<h1 id="2015年3月">2015年3月</h1><ul>
<li>过完年回来开始接触产品线上更核心的业务了。</li>
<li>在导师文杰（T6）和超神（T7）的指导下，协助完成所有工程的持续集成编译（学会了ant工具和Jenkin），DuWearROM的制作，系统构建的sh脚本维护，以及系统ROM的OTA升级。</li>
<li>修复之前开发的表盘的Bugs。</li>
<li>收到了来自Bomo，即  公司CEO少岳的邀约，很受鼓舞，付出都是值得的。</li>
</ul>
<h1 id="2015年4月">2015年4月</h1><ul>
<li>DuWear产品4月内测和公测上线，所以这个月忙成Dog了，除了本身系统底层的持续集成，脚本维护，表盘优化修复Bug等工作，还客串了一回FE，协助产品官网研发工作 。</li>
<li>跟着超神打打下手，维护超神写的GMS-&gt;BWS神器脚本，帮助运营同学和手表助手APP的DuWear手表应用市场贡献更多兼容GoogleAndroidWear和DuWear的物料APP。</li>
<li>开源UESTC开发者俱乐部到Github上，建立了一个Organization，想把TA打造成一个快速搭建校园技术咨询站点的模板引擎（理想有点远大，但是可行性很高，而且做好之后，可以帮助更多的初级开发者很省事地搭建相关网站，很适合校园大多数初创工作室的需求），自己时间有限，托付给部分学弟一起，但是估计要等回学校才能慢慢实现了，这个工程太大。</li>
<li>DuWear产品发布，见识了大百度的运营和推广是多恶心。。。太NB了。（PS：当然我们的产品也是很棒的，具体细节可以去<a href="http://www.duwear.baidu.com" target="_blank" rel="external">DuWear官网</a>。</li>
</ul>
<h1 id="2015年5月">2015年5月</h1><ul>
<li><p>这个月主要和云计算部的QA一起完成Jenkins CI平台化工作，即：把之前本地的ROM制作环境迁移到云端Jenkins上，完成持续集成化工作，节约构建人力成本和时间成本，自动化控制产物，方便QA提测。</p>
</li>
<li><p>还有就是制作了一个DuWear官网开发者中心的Demo——Notifiwear，主要给内部PM和第三方开发者使用。</p>
</li>
<li><p>并且新增三套新表盘的研发工作，结合之前三套，凑成Du.系列表盘。<br>准备百度内部跨部门技术串讲——《DuWearROM编译和OTA包制作》，把之前DuWear的ROM和OTA包制作知识分享给团队其他成员。</p>
</li>
<li><p>一怒之下，买了台单反红圈+MacPro2015。。。 一下子把实习所赚全花完了。</p>
</li>
<li>团建，去北戴河疯玩了一趟。</li>
</ul>
<h1 id="2015年6月">2015年6月</h1><ul>
<li><p>上架了一款自己的wear应用（聚会摇摇蛋for wear）于ticwear app商店上，两周2000+下载量，很满足。</p>
</li>
<li><p>和团队协助LBS地图业务部进行新业务开发。即：百度地图车生活020组件式Web前端开发：具体细节请参考<a href="http://daijiale.github.io/2015/06/10/%E5%9F%BA%E4%BA%8E%E7%99%BE%E5%BA%A6ODP%E7%9A%84%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/">Blog文</a>。</p>
</li>
</ul>
<ul>
<li>见见北京老朋友，和胖哥到处耍耍，拍拍照， 办离职，回学校。最后在机场收到了马总和彬大给的提前offer，打算明年毕业回百度，over！</li>
</ul>
<h1 id="总结">总结</h1><p>   百度是如今中国的互联网三巨头之一，能进这样的公司实习，我感到很骄傲，而它的企业文化——“让人们最平等便捷地获取信息，找到所求”这点也让我内心触动最深！企业环境集现代化、休闲化、人性化甚至浪漫梦幻为一体，工作环境优雅，充分彰显工程师文化。<br>    百度实习生的待遇应该算是国内数一数二的，高额的薪资，各种报销制度，顶级的导师，平易近人的同事，还有后勤组织部带来层出不穷的福利等等！但是……你也会发现你的boss永远下班比你晚，每天每层楼晚上10点以后还有四分之三的人还没走，一百多个会议室永远处于被借状态，只有总裁级别才有自己办公室，喝水时间都难抽出的coding hours等等。…….后来听Robin说，这叫“狼性”！<br>   在实习过程中，我的专业技术水平、动手能力相比以前又有了质的提高。但是，更让我受益匪浅的是：我见识到了一家大型互联网公司的专业开发模式和工业流程，还有科学的团队管建知识，这些是以往在学校、普通软件公司完全没有机会接触和学习的！<br>   在实习过程中，不乏遇到各式各样的问题和困难，例如：刚开始来到BAT这样的名企实习时，内心压力颇大，毕竟周围都是神一样的前辈们。所以有时会自己给自己压力，导致Boss下发的任务完成度不高。还有就是名企的工程式管理，一开始很不熟悉，有一个比较漫长的适应过程，偶尔也会时常犯一些小错。但是犯错的同时也是一个成长的过程，我也很珍惜这些发现问题，并解决问题的机会。<br>   当然，偶尔也会遇到一些比较有难度的工作，可能会导致项目延期，为此，平常可是花了不少功夫去扩充自己的基础知识，争取不拖后腿，这同时也是一个对自己能力提升的过程。<br>   在生活方面，可能更需要自己的一些自理能力，因为身处异地，自己租房子，生活琐事上也会遇到各种问题，譬如：房租，水电缴费，自我打理，生病等等。<br>   针对我遇到的这些问题，我觉得最好的解决办法就是提高自己的适应能力和学习能力，在职场中不比学校，可能不会有人专门为你答疑，周围的小伙伴都有自己的排期和任务，你能做的，是多从老员工和优秀员工上汲取他们的经验与优点，以更好地适应和融入企业。<br>   再者，主动了解一个企业的企业文化很重要，它能帮你更好更快地融入企业和团队工作，养成属于你自己的工作习惯。<br>   而对于工作压力这一块，我很想说我自己长挂在嘴边的一句话：只有汗水不会欺骗你。BAT的工作压力是我们这些初入职场小虾成长的沃土，只要你能承受住这样的压力，你会肉眼可见自己的不断成长。<br>   多利用网络资源和公司资源自主解决个人的问题。我们常常会遇到面对一个需求而茫然无措的时候，此时我们能依靠的就是利用身边资源自主解决问题的能力。<br>   多参加一些线下的技术交流会和一些其它的沙龙可以更好的帮助我们成长，我们应该珍惜在北上广这样大城市的实习机会，毕竟这边的氛围更浓，相比学校有更多丰富的活动等着我们，怎么能不好好利用利用呢？<br>   在生活上，我们应该集结在同城一起实习的校友，多交流，互相有个照顾，而且，多和邻里之间建立好良好的关系，切忌把自己封闭起来。多和同事出去郊游，不仅能加强友谊还能更好地帮助自己融入团队。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>时间：2014.11.19-2015.6.24</p>
<p>地点：北京海淀区上地东路鹏寰国际大厦</p>
<p>部门: 移动搜索事业部</p>
</blockquote>
<p>转眼之间，在百度移动搜索事业部创新业务项目组已经实习七个多月了，终于到了要说再见的日子。心里五味杂陈，特此写下这篇Blog，纪念这段特殊经历带给我的那些巨大成长…</p>]]>
    
    </summary>
    
      <category term="个人故事" scheme="http://daijiale.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%95%85%E4%BA%8B/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【前端】JavaScript经典设计模式总结]]></title>
    <link href="http://daijiale.github.io/2015/06/09/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91JavaScript%E7%BB%8F%E5%85%B8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93/"/>
    <id>http://daijiale.github.io/2015/06/09/【前端】JavaScript经典设计模式总结/</id>
    <published>2015-06-09T03:29:31.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><blockquote>
<p>在百度即将离职的最后一个月里，我被派往新项目担任FE的角色，借此机会也重新review一下大一大二的老本行——Web前端开发。这篇Blog是对自己所学2年JS的一个设计模式总结，也是实际编码中经常用到的很多经典Case，希望能帮助到更多JS开发者，也给那些还活跃在 <code>JS API</code> 层的同学打开一个新的学习思路。<br>PS：本篇Blog侧重点在于JS的设计模式，如果只是期望了解JS语法，请直接戳<a href="http://www.w3school.com.cn/js/index.asp" target="_blank" rel="external">W3C传送门</a>！<br><a id="more"></a></p>
</blockquote>
<h1 id="一、JS基础">一、JS基础</h1><h2 id="动态类型语言和鸭子类型">动态类型语言和鸭子类型</h2><p>静态类型语言：在编译时便已经确定变量的类型。<br>动态类型语言：要到程序运行时候，待某个变量被赋值之后才具有特定的类型。</p>
<h2 id="this、call、apply">this、call、apply</h2><p>Javascript 的<code>this</code>总是指向一个对象，而具体指向哪个对象是在运行时基于函数的执行环境动态绑定的，而不是函数被声明时的环境。</p>
<h3 id="this的指向">this的指向</h3><p>除去不常用的<code>with</code>和<code>eval</code>情况。</p>
<h4 id="1、作为对象的方法调用">1、作为对象的方法调用</h4><p>当函数作为对象的方法被调用时候，this指向该对象：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var obj = &#123;</span><br><span class="line">a: 1,</span><br><span class="line">getA: function()&#123;</span><br><span class="line">	alert( this === obj); // 输出:true</span><br><span class="line">	alert( this .a); //输出:1</span><br><span class="line">	｝</span><br><span class="line">&#125;;</span><br><span class="line">obj.getA();</span><br></pre></td></tr></table></figure>
<h4 id="2、作为普通函数调用">2、作为普通函数调用</h4><p>即普通函数方式：this总是指向全局对象，在浏览器的JavaScript中，这个全局对象是window对象。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">window.name = &apos;globalName&apos; ;</span><br><span class="line"></span><br><span class="line">var myObject = &#123;</span><br><span class="line">		name: &apos;daijiale&apos; , </span><br><span class="line">		getName = function()&#123;</span><br><span class="line">		return this.name;</span><br><span class="line">		&#125;</span><br><span class="line">&#125;;</span><br><span class="line">var getName = myObject.getName;</span><br><span class="line">console.log( getName() ); //输出: globalName</span><br></pre></td></tr></table></figure>
<p>注：<br>有时候我们在某个标签，例如“div”节点的事件函数内部，有一个局部的callback方法，callback被作为普通函数调用时，callback内部的this指向了window，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">		&lt;body&gt;</span><br><span class="line">			&lt;div id = &quot;div1&quot;&gt;我是一个div&lt;/div&gt;</span><br><span class="line">		&lt;/body&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;script&gt;</span><br><span class="line">		</span><br><span class="line">		window.id = &apos;window&apos; ;</span><br><span class="line">		</span><br><span class="line">		document.getElementById( &apos;div1&apos; ).onclick = function()&#123;</span><br><span class="line">			alert(this.id); //输出：&apos;div1&apos;</span><br><span class="line">			var callback = function()&#123;</span><br><span class="line">				alert(this .id); //输出:&apos;window&apos;</span><br><span class="line">			&#125;</span><br><span class="line">			callback();</span><br><span class="line">		&#125;;</span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>但我们往往是想让他指向div节点，解决办法：可以用一个变量保存div节点的引用：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(&apos;div1&apos;).onclick = function()&#123;</span><br><span class="line">		var that = this; //保存div的引用</span><br><span class="line">		var callback = function()&#123;</span><br><span class="line">				alert(that.id);	//输出： ‘div1’</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	callback();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h4 id="3、构造器调用">3、构造器调用</h4><p>JavaScript中没有类，但是可以从构造器中创建对象，同时也提供了ne运算符，使得构造器看起来更像一个类。<br>当用new运算符调用函数时，该函数总会返回一个对象，通常情况下，构造器里的this就指向返回的这个对象，见如下代码:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var MyClass ＝ function()&#123;</span><br><span class="line">		this.name = &apos; daijiale&apos;;</span><br><span class="line">				</span><br><span class="line">&#125;；</span><br><span class="line"></span><br><span class="line">var obj = new MyClass();</span><br><span class="line">alert(obj.name); //输出daijiale;</span><br></pre></td></tr></table></figure>
<p>注:<br>如果构造器显式地返回了一个object类型的对象，那么此次运算结果最终会返回这个对象，而不是我们之前期待的this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var MyClass = function()&#123;</span><br><span class="line">	this.name = &apos;daijiale&apos;;</span><br><span class="line">       return &#123;  //显示地返回一个对象</span><br><span class="line">         name:&apos;daijiale2&apos;</span><br><span class="line">       &#125;	</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var obj = new MyClass();</span><br><span class="line">alert(obj.name); //输出daijiale2</span><br></pre></td></tr></table></figure>
<h4 id="4、Function-prototype-call_或_Function-prototype-apply调用">4、Function.prototype.call 或 Function.prototype.apply调用</h4><p>跟普通的函数调用相比，用Function.prototype.call或 Function.prototype.apply可以动态的改变传入函数的this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var obj1 = &#123;</span><br><span class="line">	name : &apos;daijiale&apos;,</span><br><span class="line">	getName: function()&#123;</span><br><span class="line">		return this.name;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var obj2 = &#123;</span><br><span class="line">	name: &apos;daijiale2&apos;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">console.log(obj1.getName());//输出：daijiale</span><br><span class="line">console.log(obj1.getName.call(obj2));//输出:daijiale2</span><br></pre></td></tr></table></figure>
<h1 id="最后汇总一些比较好的技术文章和其他资料">最后汇总一些比较好的技术文章和其他资料</h1><ul>
<li><a href="http://www.w3cfuns.com/blog-5465288-5408787.html" target="_blank" rel="external">javascript异步编程的4种方法</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言">前言</h1><blockquote>
<p>在百度即将离职的最后一个月里，我被派往新项目担任FE的角色，借此机会也重新review一下大一大二的老本行——Web前端开发。这篇Blog是对自己所学2年JS的一个设计模式总结，也是实际编码中经常用到的很多经典Case，希望能帮助到更多JS开发者，也给那些还活跃在 <code>JS API</code> 层的同学打开一个新的学习思路。<br>PS：本篇Blog侧重点在于JS的设计模式，如果只是期望了解JS语法，请直接戳<a href="http://www.w3school.com.cn/js/index.asp">W3C传送门</a>！<br>]]>
    
    </summary>
    
      <category term="Javascript" scheme="http://daijiale.github.io/tags/Javascript/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Hackathon】阿里百川hackathon小记]]></title>
    <link href="http://daijiale.github.io/2015/05/28/%E3%80%90Hackathon%E3%80%91%E9%98%BF%E9%87%8C%E7%99%BE%E5%B7%9DHackathon/"/>
    <id>http://daijiale.github.io/2015/05/28/【Hackathon】阿里百川Hackathon/</id>
    <published>2015-05-28T03:43:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>时间：2015.5.21-2015.5.24</p>
<p>地点：杭州 阿里百川海创大厦</p>
<p>Team Name: 夸克</p>
<p>团队人员：小枫，Ceven，巡，TY，晨光</p>
<p>What’s happened? : Hackathon Our Idea To A Android App and Server in 48 Hours!</p>
</blockquote>
<h1 id="题记">题记</h1><p>故事要从2015年4月说起，在OpenIM的技术论坛里Get到了这个Hackathon大赛新闻，觉得很符合自己现在的level阶段，而且自从上次参加完百度内部的Hackathon之后，很想再来试一次48小时一个APP的编程快感，再加上一直很想去杭州阿里巴巴看一看，毅然决定报名参加。<br><a id="more"></a></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/alihackathon阿里百川-无线开放-梦想创业大赛.gif" alt=""></p>
<p>很感谢<strong>UESTC腾讯俱乐部</strong>里Ceven、巡、晨光还有TY的响应，几乎是我在群里一说，就立马组队完成。</p>
<p>为了<strong>低调</strong>，这里我就不对我们Team做过多介绍了：<br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/alihackathon数据可视化视图设计1.jpeg" alt=""></p>
<h1 id="正文">正文</h1><p>没有太多波折，顺利杀入决赛，成为拿到前往杭州参加HackathonParty门票的30只团队之一…<br>组委会的安排很贴心，住宿（一到杭州发现居然是四星酒店）和来回车票（动车二等座）全报销，5月21号晚上就和成都上海（<strong>都在外地实习</strong>）的队友们集合了。真的是都在外地实习了大半年，许久不见，当晚就出去撸串吹水去了，还认识了Ceven介绍的来自上海交大的<strong>闵大荒</strong>团队（上交MDH），也是我很想在这着重提及的一个Team，很有自己的团队特色，很默契，也很有感染力（一路自拍），后面也夺得了这届比赛的冠军。<br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/alihackathondefault5.jpeg" alt=""></p>
<h2 id="5月22号">5月22号</h2><p>参加了阿里巴巴的游园活动，和之前了解的差不多，阿里是园区型的企业，所有大楼都整合在一起，挺不错的。这点和百度不太一样，百度的大厦都分离的比较开，需要大量班车，虽然百度科技园一期和二期正在往园林化方向修建，但也不是近期能建成的。值得一提的是，阿里的企业文化很不错，可以清楚的感知到阿里员工内心的技术信仰和自豪感。当时在Logo下和Team一起拍了几张照片：</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/alihackathondefault14.jpeg" alt=""></p>
<p>晚上回酒店开搞，创意也是一直纠结到当晚才想出来的：<code>民族手工艺品定制APP（族宝）</code><br>（想到的很多更好的点子都有很成熟的竞品了，最后只好走极端了点，其实现在想想，当时我们顾虑太多了，不然结果肯定不一样）</p>
<h2 id="5月23号">5月23号</h2><p>Hackathon正式启动，30组来自清华、浙大、上交、科大等各名校的研究生、本科生还有校内创业团队都进入了紧张而又兴奋的Coding、DesignParty中。</p>
<p>16点：<code>族宝</code>Android客户端业务UI层搭建完成（赞一下晨光NB的极速编码能力）</p>
<p>20点：<code>族宝</code>Web商户版前端完成（赞一下Ceven的Web技术）</p>
<p>23点：<code>族宝</code>Android和Server数据通信完成（由我完成）</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/alihackathondefault6.jpeg" alt=""></p>
<h2 id="5月24号">5月24号</h2><p>凌晨2点：<code>族宝</code>数据动态解析成功（由我完成）</p>
<p>8点：<code>族宝</code>视觉图全部出图（感谢巡和TY的设计支持）</p>
<p>11点：<code>族宝</code>Android和Server代码全部整合完成（由我和晨光完成）</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/alihackathondefault11.jpeg" alt=""></p>
<p>12点：<code>族宝</code>Beta0.1版本(<a href="https://github.com/daijiale/Zuber/tree/APK/Zuber0.1" target="_blank" rel="external">APK体验地址</a>)接受组委会阿里工程师们的技术评审（技术评委感觉还不错，就技术层面来讲：48小时已经做出一个APP雏形，该有的端都有了，就产品创意方面对我们提出了一些局限性，确实也为后面下午的产品评审埋下了隐患）</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/alihackathondefault12.jpeg" alt=""></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/alihackathondefault.jpeg" alt=""></p>
<p>14点：<code>族宝</code>接受最终的产品评审，由于用户人群特殊，以及与移动端特性痛点不兼容等原因，未能获得评委们的青睐。</p>
<p>18点：比赛进入尾声，合照颁奖之后，大家各自散伙。夸克Team的杭州之旅却远没有结束，找了一家杭州有名的饭馆，好像叫<code>外婆家的菜</code>，大吃了一顿，真的让我想起了家乡南昌的口味。好满足！</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/alihackathondefault15.jpeg" alt=""></p>
<p>20点：在西湖旁边的青旅留宿一晚，大家找了间酒吧夜聊！很有feel！</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/alihackathondefault9.jpeg" alt=""></p>
<h2 id="5月25号">5月25号</h2><p>请伙伴们吃了几道精致的西湖小菜后，就奔赴杭州东站，搭动车回北京继续上班啦。<br>这次的杭州之旅到此也画上了句号。</p>
<h1 id="文尾">文尾</h1><p>返程的路上，很多学弟学妹询问我这次的结果如何如何，其实很多时候过程真的比结果重要，我们Team并没有因为这次的比赛结果而忧愁满满，相反我们更加享受Hackathon给我们带来的快乐和成长，毕竟这是我们5人第一次合作，这次的经历也让我们磨合得更为默契，相信下学期实习完之后，我们回到成都，能重新聚在一起做出更惊人的产品，当然，下次一定要备好一个<code>自拍杆</code>和<code>无人机</code>，哈哈！</p>
<p>此次hackathon的项目已开源：<a href="https://github.com/daijiale/Zuber" target="_blank" rel="external">Github地址</a></p>
<blockquote>
<p>今年继<code>百度十二季Hackathon</code>之后又一季重量级Hackathon比赛，感谢你们给我带来的成长和快乐！</p>
<p>期待自己下一次的Hackathon表现，相信那天并不会太远……</p>
</blockquote>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/alihackathondefault10.jpeg" alt=""></p>
<embed src="http://music.163.com/style/swf/widget.swf?sid=29808787&type=2&auto=1&width=320&height=66" width="340" height="86" allownetworking="all">






]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>时间：2015.5.21-2015.5.24</p>
<p>地点：杭州 阿里百川海创大厦</p>
<p>Team Name: 夸克</p>
<p>团队人员：小枫，Ceven，巡，TY，晨光</p>
<p>What’s happened? : Hackathon Our Idea To A Android App and Server in 48 Hours!</p>
</blockquote>
<h1 id="题记">题记</h1><p>故事要从2015年4月说起，在OpenIM的技术论坛里Get到了这个Hackathon大赛新闻，觉得很符合自己现在的level阶段，而且自从上次参加完百度内部的Hackathon之后，很想再来试一次48小时一个APP的编程快感，再加上一直很想去杭州阿里巴巴看一看，毅然决定报名参加。<br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://daijiale.github.io/tags/Android/"/>
    
      <category term="Hackathon" scheme="http://daijiale.github.io/tags/Hackathon/"/>
    
      <category term="个人故事" scheme="http://daijiale.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%95%85%E4%BA%8B/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Android开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Android%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【数据库-持续更新】MySQL学习笔记]]></title>
    <link href="http://daijiale.github.io/2015/05/19/%E3%80%90%E6%95%B0%E6%8D%AE%E5%BA%93%E3%80%91MySQL%E5%85%A5%E9%97%A8/"/>
    <id>http://daijiale.github.io/2015/05/19/【数据库】MySQL入门/</id>
    <published>2015-05-19T07:23:01.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>PS：来自一些参考书和视频的MySQL学习笔记，在这里集中整理一下，持续更新中。</p>
</blockquote>
<a id="more"></a>
<h1 id="概述">概述</h1><ul>
<li>MySQL基础</li>
<li>安装MySQL</li>
<li>配置MySQL</li>
<li>使用MySQL</li>
</ul>
<p>MySQL基础：</p>
<ul>
<li><p>最早由瑞典MySQL AB公司开发，目前属于Oracle公司。</p>
</li>
<li><p>MySQL是一个开源的关系型数据库管理系统。</p>
</li>
<li><p>MySQL分为企业版（付费）和社区版（免费）</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>PS：来自一些参考书和视频的MySQL学习笔记，在这里集中整理一下，持续更新中。</p>
</blockquote>]]>
    
    </summary>
    
      <category term="数据库" scheme="http://daijiale.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Android】常用Adb Shell命令]]></title>
    <link href="http://daijiale.github.io/2015/05/06/%E3%80%90Android%E3%80%91ADB%E5%B8%B8%E7%94%A8Shell%E5%91%BD%E4%BB%A4/"/>
    <id>http://daijiale.github.io/2015/05/06/【Android】ADB常用Shell命令/</id>
    <published>2015-05-06T08:23:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="实用Adb_Shell命令演示">实用Adb Shell命令演示</h1><blockquote>
<p>一些灵巧方便的Adb Shell命令笔记</p>
</blockquote>
<h2 id="Adb命令的主要用途">Adb命令的主要用途</h2><ul>
<li>运行Android设备的命令行。</li>
<li>管理模拟器或Android设备的映射端口。</li>
<li>安装和卸载应用程序。</li>
<li>计算机和Android设备之间的上传和下载文件。</li>
</ul>
<a id="more"></a>
<h2 id="Adb操作命令">Adb操作命令</h2><ol>
<li>显示系统中全部Android平台：</li>
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android list targets</span><br></pre></td></tr></table></figure>
</li>
<li><p>显示系统中全部AVD（模拟器）：</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android list avd</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建AVD（模拟器）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android create avd --name 名称 --target 平台编号</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动模拟器：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emulator -avd 名称 -sdcard ~/名称.img (-skin 1280x800)</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除AVD（模拟器）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android delete avd --name 名称</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建SDCard：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mksdcard 1024M ~/名称.img</span><br></pre></td></tr></table></figure>
</li>
<li><p>AVD(模拟器)所在位置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Linux(~/.android/avd)      </span><br><span class="line">Windows(C:\Documents and Settings\Administrator\.android\avd)</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动DDMS：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ddms</span><br></pre></td></tr></table></figure>
</li>
<li><p>显示当前运行的全部模拟器：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb devices</span><br></pre></td></tr></table></figure>
</li>
<li><p>对某一模拟器执行命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abd -s 模拟器编号 命令</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装应用程序：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb install -r 应用程序.apk</span><br></pre></td></tr></table></figure>
</li>
<li><p>获取模拟器中的文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb pull &lt;remote&gt; &lt;local&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>向模拟器中写文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb push &lt;local&gt; &lt;remote&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>进入模拟器的shell模式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动SDK，文档，实例下载管理器：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android</span><br></pre></td></tr></table></figure>
</li>
<li><p>缷载apk包：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">adb shell</span><br><span class="line">cd data/app</span><br><span class="line">rm apk包</span><br><span class="line">exit</span><br><span class="line">adb uninstall apk包的主包名</span><br><span class="line">adb install -r apk包</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看adb命令帮助信息：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb help</span><br></pre></td></tr></table></figure>
</li>
<li><p>在命令行中查看LOG信息：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -s 标签名</span><br></pre></td></tr></table></figure>
</li>
<li><p>adb shell后面跟的命令主要来自：<br>  源码\system\core\toolbox目录和源码\frameworks\base\cmds目录。</p>
</li>
<li><p>删除系统应用：</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">adb remount （重新挂载系统分区，使系统分区重新可写）。</span><br><span class="line">   adb shell</span><br><span class="line">   cd system/app </span><br><span class="line">   rm *.apk</span><br></pre></td></tr></table></figure>
</li>
<li><p>获取管理 员权限：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb root</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动Activity：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell am start -n 包名/包名＋类名（-n 类名,-a action,-d date,-m MIME-TYPE,-c category,-e 扩展数据,等）。</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>23、发布端口：<br>    你可以设置任意的端口号，做为主机向模拟器或设备的请求端口。如： </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb forward tcp:5555 tcp:8000</span><br></pre></td></tr></table></figure>
<p>24、复制文件：<br>    你可向一个设备或从一个设备中复制文件，<br>     复制一个文件或目录到设备或模拟器上： </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> adb push &lt;source&gt; &lt;destination&gt;&lt;/destination&gt;&lt;/source&gt; </span><br><span class="line">```      </span><br><span class="line">如：</span><br></pre></td></tr></table></figure>
<p>adb push test.txt /tmp/test.txt<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">从设备或模拟器上复制一个文件或目录： </span><br><span class="line">```     </span><br><span class="line">adb pull &lt;source&gt; &lt;destination&gt;&lt;/destination&gt;&lt;/source&gt;</span><br></pre></td></tr></table></figure></p>
<p>如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb pull /addroid/lib/libwebcore.so .</span><br></pre></td></tr></table></figure></p>
<p>25、搜索模拟器/设备的实例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> 取得当前运行的模拟器/设备的实例的列表及每个实例的状态：</span><br><span class="line">adb devices</span><br></pre></td></tr></table></figure>
<p>26、查看bug报告： </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb bugreport</span><br></pre></td></tr></table></figure>
<p>27、记录无线通讯日志：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一般来说，无线通讯的日志非常多，在运行时没必要去记录，但我们还是可以通过命令，设置记录： </span><br><span class="line">adb shell </span><br><span class="line">logcat -b radio</span><br></pre></td></tr></table></figure>
<p>28、获取设备的ID和序列号：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb get-product </span><br><span class="line">adb get-serialno</span><br></pre></td></tr></table></figure>
<p>29、访问数据库SQLite3</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb shell </span><br><span class="line">sqlite3</span><br></pre></td></tr></table></figure>
<h2 id="Adb_高级命令">Adb 高级命令</h2><ul>
<li>am – ActivityManager 命令</li>
<li>pm – PackageManager命令</li>
<li>wm – WindowManager 命令</li>
<li>content – ContentProvider命令</li>
</ul>
<h3 id="am命令">am命令</h3><ul>
<li>am 子命令</li>
<li>可以启动Activity，Service</li>
<li>可以停止一个应用</li>
<li>可以发送broadcast</li>
<li>可以监控activity的状态</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">am start –n &lt;ComponentName&gt;</span><br><span class="line">am start –a &lt;Action&gt; -c &lt;Category&gt; -e&lt;Extra&gt;</span><br></pre></td></tr></table></figure>
<p>例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">am start –n com.android.settings //启动系统设置</span><br><span class="line"></span><br><span class="line">am start –a com.android.intent.action.MAIN –c com.android.intent.category.HOME //启动Home页</span><br><span class="line"></span><br><span class="line">am force-stop &lt;package&gt;</span><br><span class="line"></span><br><span class="line">am start -a android.intent.action.VIEW -d http://www.baidu.com</span><br><span class="line"></span><br><span class="line">am start -a android.intent.action.CALL -d tel:12345</span><br><span class="line"></span><br><span class="line">am startservice –n &lt;ComponentName&gt;</span><br><span class="line"></span><br><span class="line">am broadcast …</span><br><span class="line"></span><br><span class="line">am force-stop &lt;package&gt;</span><br></pre></td></tr></table></figure>
<h3 id="pm命令">pm命令</h3><ul>
<li>pm install  – 安装一个apk (可以用adb install)</li>
<li>pm uninstall [-k] – 删除一个apk (可以用adb uninstall)</li>
<li>pm list  — 列出一系列包，Feature或者permission等</li>
<li>pm path <package>  — 获得某个包的apk文件路径</package></li>
<li>pm clear <package>  — 清除某个应用的数据</package></li>
<li>pm enable <component> —启用某个组件</component></li>
<li>pm disable <component> — 禁用某个组件</component></li>
</ul>
<h3 id="wm命令">wm命令</h3><ul>
<li>wm (WindowManager)命令，主要查看屏幕的信息</li>
<li>wm size  — 获取屏幕尺寸</li>
<li>wm density – 获取屏幕密度</li>
<li>wm overscan – 过扫描</li>
</ul>
<h3 id="content命令">content命令</h3><ul>
<li>操作ContentProvider的命令</li>
<li>content insert – 向content provider中插入数据</li>
<li>content query – 请求content provider中的数据</li>
<li>content update – 更新content provider中的数据</li>
<li>content delete – 删除 content provider中的数据</li>
<li>*数据值之间用冒号(:)分隔</li>
</ul>
<h3 id="settings命令">settings命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">settings put global my_key “hello”</span><br><span class="line">settings get global my_key</span><br></pre></td></tr></table></figure>
<h3 id="media媒体控制命令">media媒体控制命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">media dispatch &lt;PLAY, PAUSE, STOP …&gt;</span><br></pre></td></tr></table></figure>
<p>模拟一个媒体按键的发送</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="实用Adb_Shell命令演示">实用Adb Shell命令演示</h1><blockquote>
<p>一些灵巧方便的Adb Shell命令笔记</p>
</blockquote>
<h2 id="Adb命令的主要用途">Adb命令的主要用途</h2><ul>
<li>运行Android设备的命令行。</li>
<li>管理模拟器或Android设备的映射端口。</li>
<li>安装和卸载应用程序。</li>
<li>计算机和Android设备之间的上传和下载文件。</li>
</ul>]]>
    
    </summary>
    
      <category term="Android" scheme="http://daijiale.github.io/tags/Android/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Android开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Android%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Android-持续更新】下次人家问再你怎么入门AndroidWear，你就甩这篇文章给TA]]></title>
    <link href="http://daijiale.github.io/2015/05/04/%E3%80%90Android%E3%80%91%E6%9C%80%E5%85%A8%E7%9A%84AndroidWear%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    <id>http://daijiale.github.io/2015/05/04/【Android】最全的AndroidWear开发笔记/</id>
    <published>2015-05-04T08:23:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="本文作者">本文作者</h1><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogpicslrme.jpg" alt=""></p>
<h2 id="Jiale_Dai"><a href="http://www.daijiale.cn" target="_blank" rel="external">Jiale Dai</a></h2><p>成都 电子科技大学 本科生( 其实还没毕业，目前大三 ）</p>
<p>从14年开始一直专研于AndroidWear开发</p>
<blockquote>
<p><strong>摘要：</strong> 本文是Jiale Dai 在学习Google官方视频、开发者文档和实践项目之后整理出来的心得笔记，是以一个个人开发者的角度给大家带来一些侧面对Android Wear开发的看法，不同于一些传统的Android Wear技术开发教程，但是博主希望能通过自己对这些知识的整理和资源的收集，给读者带了一份详尽的、多角度的Android Wear指南。<strong>无论你是程序员，设计师，产品经理，还是手表极客 ，Android Wear用户 or 小白，都能在这篇博文中找到你想要的Android Wear元素。</strong><br>博文会同时托管到Github上，欢迎更多承载着开源精神的有心人加入，分享你对Android Wear的见解。<br><a id="more"></a></p>
</blockquote>
<h1 id="写在开头">写在开头</h1><blockquote>
<p><strong>自己对AndroidWear的看法：</strong></p>
<p>Android Wear的目标就是：不接触手机的前提下，在你需要的时候，它把对你有用的信息呈现给你，扫一眼就够了。ta是<br>一种新的交互模型，有很多有利便捷新潮的交互体验是手机上无法实现的。将你自己置身于一个外部场景，在移动和忙碌中使用这项服务是什么样的体验，你就会发现ta的价值。</p>
</blockquote>
<p><strong>下面我们来欣赏一段Android Wear的应用场景视频</strong>（博主花了大精力才从鹅厂官网漏洞里抓取到的外链地址，<strong>低调、低调</strong>）：</p>
<embed wmode="window" flashvars="vid=o0014kprxll&amp;tpid=28&amp;showend=1&amp;showcfg=1&amp;searchbar=1&amp;shownext=1&amp;list=2&amp;autoplay=1&amp;ptag=m_v_qq_com&amp;outhost=http%3A%2F%2Fv.qq.com%2Fpage%2Fo%2Fl%2Fl%2Fo0014kprxll.html&amp;refer=http%3A%2F%2Fm.v.qq.com%2Fpage%2Fo%2Fl%2Fl%2Fo0014kprxll.html%3Ffrom%3Dtimeline%26isappinstalled%3D0&amp;openbc=0&amp;title=%E8%B0%B7%E6%AD%8CAndroid%20Wear%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90" src="http://imgcache.qq.com/tencentvideo_v1/player/TencentPlayer.swf?max_age=86400&amp;v=20140714" quality="high" name="tenvideo_flash_player_1431178166025" id="tenvideo_flash_player_1431178166025" bgcolor="#000000" width="650px" height="472px" align="middle" allowscriptaccess="always" allowfullscreen="true" type="application/x-shockwave-flash" pluginspage="http://get.adobe.com/cn/flashplayer/"> 



<h2 id="核心元素：">核心元素：</h2><ul>
<li>Google Now：用户可以和AndroidWear“说话”（语音交互）。</li>
<li>Notifications:一个卡片，一个提醒，实现你最想要的服务。具体分为stacks、 pages、 replies、三种性质。</li>
<li>WatchFace：表之所以称之为“表”。</li>
<li>Data Message：和手机的数据通信机制是重要的桥梁。</li>
</ul>
<h2 id="构建一个Wear_Apps的基础（wear_app能做到什么？）：">构建一个Wear Apps的基础（wear app能做到什么？）：</h2><p><strong>基础API元素:</strong></p>
<ul>
<li>Custom UI</li>
<li>Send Data</li>
<li>Control Sensors</li>
<li>Voice Actions</li>
</ul>
<p>下面我会举<strong>四个例子</strong>来说明基于这几个基础元素（Android Wear API）可以实现什么样级别的<strong>Wear App</strong>：</p>
<h3 id="Gmail">Gmail</h3><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/androidweargmail.PNG" alt=""></p>
<ul>
<li>Gmail Base On<ul>
<li>Notification Bundles</li>
<li>RemoteInput for Voice Response</li>
</ul>
</li>
</ul>
<p>大家应该不会陌生Gmail，下面来看看其在wear端的app特性：</p>
<p>1、首先ta有两种邮件提醒类型：</p>
<p><strong>单页通知卡片（如下图）</strong></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/androidwearsinglecard.PNG" alt=""></p>
<p><strong>多页通知卡片（如下图）</strong></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/androidwearmuticard.PNG" alt=""></p>
<p>2、你可以通过滑动卡片，进一步了解更多信息，而且伴随有 <strong>“语音快速回复” “归档” “在手机端打开回复”</strong>三种操作，这里我们重点谈一下<strong>语音快速回复</strong>这个<strong>具有wear特性</strong>的操作流程：</p>
<ul>
<li><code>Android Notification API</code> 会让你通过远程输入给reply行为做一个注释,而远程输入则会告诉AndroidWear，在执行这个行为之前，你要把文本输入的方式改为语音，因此当Gmail建立一个notification连接时，wear端会给reply行为附加一个远程输入，AndroidWear会看到这条远程输入，然后不会立即发送一个行为，会首先启动一个wear UI界面来收集语音回复信息，然后把转换好的文本变成意图，再发送意图到你的手机上，手机得到意图后，就可以在不触动手机UI的情况下发送/回复邮件了。</li>
</ul>
<p>下面是关键代码实现过程：</p>
<p><strong>Add RemoteInput to Reply Action</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Action replyAction = <span class="keyword">new</span> NotificationCompat.Action.Builder(</span><br><span class="line">	R.drawble.ic_reply,getString(R.string.reply), </span><br><span class="line">	replyPendingIntent)</span><br><span class="line">    addRemoteInput(</span><br><span class="line">	  <span class="keyword">new</span> RemoteInput.Builder(EXTRA_REPLY_TEXT)</span><br><span class="line">		.setLabel(getString(R.string.replyLabel))</span><br><span class="line">		.build()).build();</span><br></pre></td></tr></table></figure>
<p><strong>Modify Activity to Use Reply Text</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Bundle results =</span><br><span class="line">	RemoteInput.getResultsFromIntent(intent);</span><br><span class="line">	<span class="keyword">if</span>(results!=<span class="keyword">null</span>)&#123;</span><br><span class="line">	 String message = </span><br><span class="line">		<span class="function">results <span class="title">getString</span><span class="params">(EXTRA_REPLY_TEXT)</span></span><br><span class="line">	&#125;</span></span><br></pre></td></tr></table></figure>
<p>3、最后我再来详细介绍下“多卡片重叠式信息提醒”的实现原理，视觉设计上采用的是复线收件箱的风格，ta不再把多条信息压缩到单一的卡片中，我们想做的是每封邮件都有自己的卡片。而这些卡片又放入一个可扩大的堆栈中，这一堆提醒卡片，也叫提醒卡片堆栈，也是notification API的新特性，不会把所有邮件提醒都只能通过一个提醒显示出来，而是按类划分，表明有所关联，ta们在可穿戴设备上组合成一个卡片丛，而用户也可以通过卡片丛去逐个浏览，以提取某一封邮件，并对其回复或者进行其他操作。而卡片丛 即：notification group也有一个分类键，通过设置这个键来控制丛内卡片顺序，并且可以从中标记一个卡片作为组群的整体摘要描述，具体实现代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Notification card1 = </span><br><span class="line">	<span class="keyword">new</span> NotificationCompat.Builder(context)</span><br><span class="line">		.setGroup(GROUP_KEY)</span><br><span class="line">		.setSortKey(<span class="string">"0"</span>)</span><br><span class="line">		.build();</span><br><span class="line"></span><br><span class="line">Notification card2 = </span><br><span class="line">	<span class="keyword">new</span> NotificationCompat.Builder(context)</span><br><span class="line">		.setGroup(GROUP_KEY)</span><br><span class="line">		.setSortKey(<span class="string">"1"</span>)</span><br><span class="line">		.build();</span><br><span class="line"></span><br><span class="line">Notification card3 = </span><br><span class="line">	<span class="keyword">new</span> NotificationCompat.Builder(context)</span><br><span class="line">		.setGroup(GROUP_KEY)</span><br><span class="line">		.setSortKey(<span class="string">"2"</span>)</span><br><span class="line">		.build();</span><br><span class="line"></span><br><span class="line">Notification summary = </span><br><span class="line">	<span class="keyword">new</span> NotificationCompat.Builder(context)</span><br><span class="line">		.setGroup(GROUP_KEY)</span><br><span class="line">		.setGroupSummar;</span><br><span class="line">		.build();</span><br></pre></td></tr></table></figure>
<h3 id="Hangouts">Hangouts</h3><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/androidwearhangouts.PNG" alt=""></p>
<ul>
<li>Hangouts Base On<ul>
<li>Custom Wearable Actions</li>
<li>Notification Pages</li>
</ul>
</li>
</ul>
<p>1、环聊信息也会自动桥接到可穿戴设备上，在Gmail上面，我们想要的是语音回复，但是环聊的提醒则稍微有点不同，ta并没有回复行为，只是一个内容意图，只需要打开App就可以键入回复了，所以环聊可以很好的不依赖手机而直接在可穿戴设备上进行体验，而且，android wear的 <code>Notification API</code>会让你在手机和可穿戴设备上细化不同的操作设置，即手机行为只在手机显示。wear行为只在wear端显示，这就使得我们可以添加一个仅限可穿戴设备使用的回复行为，这一行为涵盖了一个远程输入，却无需变动手机行为。</p>
<p>2、环聊也增加了新的提醒特征：近期会话历史记录。因为在语音回复之前，多出现一些聊天记录总是好的，为了实现这个效果，我们在wear设备扩充器中采用了添加页面的办法：它可以让你为主要提醒内容增加额外的页面，我们把聊天记录放入一个次级大的文本式提醒，然后把它加入到主要提醒中的第二页，并且手机端的提醒体验同时保持不变。关键代码实现如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Notification chatHistory =</span><br><span class="line">	<span class="keyword">new</span> NotificationCompat.Builder()</span><br><span class="line">		.setStyle(</span><br><span class="line">			<span class="keyword">new</span> NotificationCompat.BigTextStyle()</span><br><span class="line">				.bigText(getChatHistory()))</span><br><span class="line">		.build();</span><br><span class="line"></span><br><span class="line">firstPageNotification.extend(</span><br><span class="line">	<span class="keyword">new</span> NotificationCompat.WearableExtender()</span><br><span class="line">		.addPage(chatHistory)</span><br><span class="line">		.build());</span><br></pre></td></tr></table></figure>
<h3 id="Google_Camera">Google Camera</h3><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/androidwearcamera.PNG" alt=""></p>
<ul>
<li>Google Camera Base On<ul>
<li>Wearable DataApi </li>
<li>Wearable MessageAPI</li>
<li>WatchActivity </li>
</ul>
</li>
</ul>
<p>1、wear端的google camera为相机App增加了好玩有趣的特性：<strong>通过手腕来按下快门</strong>，和很多具有远程遥控的高级相机原理类似，你把手机架在三脚架上或者靠在墙上又或者让其他人帮你拿着，然后你通过按住腕表的一个按键来捕捉一个画面<strong>（代替现在正在热卖而很多大男生却不好意思在大街上用的自拍杆，嘿嘿）</strong>。</p>
<p>2、相比于前面提到的Gmail和环聊（ta们只是用了 <code>Notification API</code> 来对手机端的消息做一个整合），Google Camera是一个相对个性而又具有和手机交互的特点，而且对于wear来说，仅仅只需要将<strong>快门</strong>这个按键特殊处理就行，所以，在wear端，光快门按键就霸占整个屏幕这一点也是可以容忍的。</p>
<p>3、通过 <code>Google Play Service</code>(以后简称 <code>GMS</code>)，实现相机的wear端和手机端通信，在相机手机app准备好拍摄时，手机端端会设置好数据项（意味着它已经做好了接受远程快门信息的准备），这种数据项由手表中wear app内置的服务读取，而wear端则会显示出快门按钮，按住按钮，把信息发回手机来激活手机端的快门键，最后，如何预览你刚才拍到的照片呢？很简单：手机端会创建一张缩略图，然后作为数据项中的一个asset发送回手表端，然后做为wear端全屏来预览。<br>关键代码如下：</p>
<p><strong>Setting a DataItem</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PutDataMapRequest dataMapRequest =</span><br><span class="line">	PutDataMapRequest.create(DATA_ITEM_NAME);</span><br><span class="line">dataMapRequest.getDataMap().putBoolean(</span><br><span class="line">	FIELD_READY,cameraReady);</span><br><span class="line">Wearable.DataApi.putDataItem(</span><br><span class="line">	mGoogleApiClient,</span><br><span class="line">	dataMapRequest.asPutDataRequest()</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p><strong>WearableListenerService</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CameraListennerService</span></span><br><span class="line">	<span class="keyword">extends</span> <span class="title">WearableListennerService</span></span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDataChanged</span><span class="params">(DataEventBuffer dataEvents)</span></span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(DataEvent dataEvent:dataEvents)&#123;</span><br><span class="line">		    <span class="keyword">if</span>(dataEvent.getType()== 	DataEvent.TYPE_CHANGED)&#123;</span><br><span class="line">			DataMapItem mapDataItem = </span><br><span class="line">				DataMapItem.fromDataItem(</span><br><span class="line">					dataEvent.getDataItem());</span><br><span class="line">			<span class="keyword">if</span>(mapDataItem.getDataItem().getBoolean(FIELD_CAMERA_READY,<span class="keyword">false</span>))&#123;</span><br><span class="line">			postNotification();</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		stopActivity();	</span><br><span class="line">	&#125;</span><br><span class="line">	)</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>Sending an Asset</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">PutDataMapRequest dataMapRequest =</span><br><span class="line">	PutDataMapRequest.create(DATA_ITEM_NAME);</span><br><span class="line">dataMapRequest.getDataMap().putBoolean(</span><br><span class="line">	FIELD_READY,cameraReady);</span><br><span class="line"></span><br><span class="line"><span class="comment">//在DataItem数据项中插入一个判断</span></span><br><span class="line"><span class="keyword">if</span>(previewBitmap != <span class="keyword">null</span>)&#123;</span><br><span class="line">	dataMapRequest.getDataMap().putAsset(</span><br><span class="line">	 FIELD_PREVIEW,preview);</span><br><span class="line">	)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Wearable.DataApi.putDataItem(</span><br><span class="line">	mGoogleApiClient,</span><br><span class="line">	dataMapRequest.asPutDataRequest()</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<h3 id="Google_Maps">Google Maps</h3><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/androidwearmaps.PNG" alt=""></p>
<ul>
<li>Google Maps Base On<ul>
<li>Voice Actions </li>
<li>Custom Display Intent Notifications</li>
</ul>
</li>
</ul>
<p>1、在Google Maps导航期间，我们想要在手腕上提示导航，这个应用场景在走路的时候尤其有用，因为你要一直拿着你的手机走在大马路上会非常奇怪且占用你的双手，如果把手机放在你的口袋，转而看一下手表的描述来获知导航信息无疑更为便捷和实用。</p>
<p>2、在wear端，google想实现对布局和导航呈现精细的把握，特地搭建了一款wear版本的google maps wear App，让个性抽取式卡片成为限于本地的提醒，通过修改google map手机app的数据项，增加了用于下一次操作的描述与图标以及用于解释导航状态的信息，同时wear端的google maps也增加了这样的数据项，每次变动发生后，ta都会读取新数据，然后更新wear的卡片，提取卡片时，wear app采用可穿戴扩充器的新显示意图特性，你可以指定一个活动来在提醒卡片中绘制内容，这样我们想在卡片上画什么都是可以的，而不是受限制于标准提醒样式。<br>关键实现代码：</p>
<p><strong>Custom Notification with Display Intent</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Intent displayIntent = </span><br><span class="line">	createUpdateIntent(data, maneuverBitmap);</span><br><span class="line">displayIntent.setClass(</span><br><span class="line">	<span class="keyword">this</span>,NotificationDisplayActivity.class);</span><br><span class="line"></span><br><span class="line">PendingIntent displayPendingIntent = PendingIntent.getActivity(</span><br><span class="line">	<span class="keyword">this</span>,<span class="number">0</span>,displayIntent,</span><br><span class="line">	PendingIntent.FLAG_CANCEL_CURRENT);</span><br><span class="line"></span><br><span class="line">Notification notification = builder.extend(</span><br><span class="line">	<span class="keyword">new</span> NotificationCompat.WearableExtender()</span><br><span class="line">		.setHintHideIcon(<span class="keyword">true</span>)</span><br><span class="line">		.setDisplayIntent(displayPendingIntent)</span><br><span class="line">		.setBackground(background)</span><br><span class="line">		.addPage(secondPage)</span><br><span class="line">		.build();</span><br></pre></td></tr></table></figure>
<p>3、google map通过语音指令来开启导航进程，为了实现这一点，可<br>wear端的google map app会联手意图过滤器（ <code>Intent</code>）来为导航声音指令服务，然后需要在 <code>AndroidManifest.xml</code>中声明如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span></span><br><span class="line">	<span class="attr">android:name</span>=<span class="string">".StarNavigationActivity"</span></span><br><span class="line">	<span class="attr">android:theme</span>=<span class="string">"@style/TranslucentTheme"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">	 <span class="tag">&lt;<span class="name">action</span></span><br><span class="line">		<span class="attr">android:name</span>=<span class="string">"android.intent.action.VIEW"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">category</span>			<span class="attr">android:name</span>=<span class="string">"android.intent.category.DEFAULT"</span>/&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">data</span></span><br><span class="line">			<span class="attr">android:scheme</span>=<span class="string">"google.navigation"</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>声明之后，就会产生一个像这样的意图，可穿戴App接收到这个意图之后，就会给手机上的google map发送一条信息，信息包括目的地和导航模式，手机google map app接收到这条信息之后，然后开始导航到目的地，然后就可以出发了，具体通信代码如下:</p>
<p><strong>Sending a Message</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startNavigation</span><span class="params">(Intent intent)</span></span>&#123;</span><br><span class="line">	</span><br><span class="line">	String uriString = intent.getDataString();</span><br><span class="line">	</span><br><span class="line">	mGoogleApiClient.blockingConnect(</span><br><span class="line">		Constants.TIMEOUT_MS,</span><br><span class="line">		TimeUnit.MILLISECONDS);</span><br><span class="line"></span><br><span class="line">	DataMap dataMap = <span class="keyword">new</span> DataMap();</span><br><span class="line">	dataMap.putString(FIELD_URI,uriString）；</span><br><span class="line"></span><br><span class="line">	Wearable.MessageApi.sendMessage(</span><br><span class="line">	   mGoogleApiClient,</span><br><span class="line">	   mOtherNodeId,</span><br><span class="line">	   Constants.MESSAGE_PATH_START_NAVIGATION,</span><br><span class="line">		dataMap.toByteArray()).await();</span><br><span class="line">	googleApiClient.diconnect();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>Receiving a Message</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessageReceived</span><span class="params">(</span><br><span class="line">	MessageEvent messageEvent)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(messageEvent.getPath().equals(</span><br><span class="line">		MESSAGE_PATH_START_NAVIGATION))&#123;</span><br><span class="line">	  DataMap requestData =</span><br><span class="line">			DataMap.fromByteArray(</span><br><span class="line">				messageEvent.getData());</span><br><span class="line">			String uriString =</span><br><span class="line">				requestData.getString(FIELD_URI);</span><br><span class="line">			Intent navIntent = <span class="keyword">new</span> Intent(</span><br><span class="line">				Intent.ACTION_VIEW,</span><br><span class="line">				Uri.parse(uriString));</span><br><span class="line">			startActivity(navIntent);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="搭建云驱动的Android_Wear_Apps">搭建云驱动的Android Wear Apps</h1><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblog_androidwear_cloud.JPG" alt=""></p>
<p>如图：</p>
<ul>
<li>1、首先，我们需要一款云服务来作为App的后端来进行数据推送和数据处理。</li>
<li>2、其次，移动App会配合这项服务发出一个提醒，而你会在wear设备上看到，而且该提醒也会发送到任何相连的AndroidWear设备上。</li>
<li><p>3、接着，当然就是AndroidWear App本身了，ta的特效是搭建在移动手机App之内，这样一旦手机App发出一条可以在手机上看见的提醒，这条信息也发给了Android Wear设备，现在的API也能够传送这些提醒，比如说触发回复行为，那么，我们是怎么实现ta们的呢？<code>Android Studio</code>实际上把你所需要的一切都给你了，包括用于搭建后端服务的工具包，当然还有Android手机App，现在你还可获得扩展包来操作Android Wear，云后端可以用一款外露的API来搭建，Android Studio工具包可以让你在Java下来进行此类操作，为你处理精细的细节把握，你可以写一段云端代码，通过使用属性，ta能够暴露出运行在你android app中的API，这些属性告诉Android客户端这些代码都是到底在干什么的，比如在执行一种叫quotesApi(引用API）时，并提供一种称为getQuote（获得引用）的方式，ok，一旦你现在搭建好了云服务，借助工具包，事实上你就可以自动创建客户端数据库来进入了，接下来，你要做的当然是搭建你的App了，那如何从你的App进入API呢？其实，这个分类已经自动帮你加载下来了，并且放入Maven库中了，这样你就可以直接在你搭建好的Gradle文件夹下涵盖它们了。</p>
</li>
<li><p>4、最后，我们如何把它拓展来用于Android Wear呢？ 其实很简单，跟google map中的例子一样，通过修改notification和卡片的代码，使用wear端的api，让消息提醒和前端信息视图同时展现在手机客户端和wear端，此时的<strong>手机App</strong>就<strong>变成了wear连接云端</strong>的<strong>中间件</strong>。</p>
</li>
</ul>
<h1 id="写给设计师们：如何把握Android_Wear下App的设计原则？">写给设计师们：如何把握Android Wear下App的设计原则？</h1><blockquote>
<p>PS：自己在DuWear项目组除了做RD研发之外，也对设计比较感兴趣，记得研发表盘那段时期，经常和搭档（MUX-UE-大侯）一起交流wear端的设计理念和心得，这里分享一些给想进军wear端的设计师朋友们：</p>
</blockquote>
<p><strong>首先我们需要知道的是：</strong></p>
<ul>
<li>Android Wear可以在多种不同的设备上运行，甚至在方形或圆形屏幕上也能正常运行，ta的UI非常简单，而且显示的内容也做了优化以适应小屏幕。</li>
<li>Android Wear的核心UI会自动排列卡片的优先级，非常简单，它整合了像Google Now，安卓手机提醒（Notification）和关联性App等资源，从而可以直接在wear端运行，开发师可以创建可以在这种流中正确显示的卡片，在任何点上，我都可以朝左滑动来查看每个项的更多信息，朝右滑动则会移除卡片，</li>
<li>我们也给里面加入了向谷歌说话的能力，用户只需说一句：OK Google来搜索网络寻求答案，也可以进行我们称之为行为（actions）的语音指令，开发师可以深入开发这些语音行为。意味着用户可以直接对你的软件说话。</li>
<li>可穿戴设备提供了一套前所未有的设计理念，<br>这即是机会，也是挑战，所以相对其他诸如手机或平板之类的设备，要清楚明白地搞懂它们之间的不同之处非常重要。<br>Android Wear刚好在正确的时间提供了正确的信息，让人们同时与虚拟和现实世界有更好的联系，信息内容会尽可能自动显示在信息流中，对于早已习惯打开App和退出App的我们来讲，这种对于模块的变化是相当巨大的。<h2 id="设计思路：">设计思路：</h2></li>
<li><p><strong>Contextual：</strong>Android Wear会注意到周围环境，而且十分智能，这些设备会让人与计算机设备的亲密关系全新升级，Android Wear不要求用户的关注与输入，相反它会注意到用户所处的环境与状态，然后在正确的时间体贴地提供正确的信息，Android Wear会让人感觉信息及时，提议中肯，无微不至。</p>
</li>
<li><p><strong>Glanceable：</strong>这些App只需要一瞥的时间，不算是可穿戴设备处于我们的视线边缘，它们也可以整天使用，高效的App会用最小的嗡嗡声来提供更多的信息提醒，并在细碎的关联信息提醒上做进一步优化，从而在一整天的碎片时间里得以应用。</p>
</li>
<li><p><strong>Low Interaction：</strong>快速思考，一针见血，迅捷即时，而且几乎不用与设备互动，在保证小屏幕传送信息优势的同时，Android Wear着重与简单的互动，仅仅在非常必要的时候来需要用户来输入。而且绝大多数输入都是简单的点触、滑动和语音指令，而一般输入所需要的精细操控也得以避免。Android Wear手势简单，操作便捷而迅速</p>
</li>
<li><p><strong>Suggest&amp;Demand：</strong>最后，这些体验都与建议和指令相关，Android Wear就像一位出色的个人助理，它了解你，知道你的喜好，只有在绝对必要的时候才会打扰你，而且它总是近在手边，随时准备为你回答或完成任务。Android Wear贴心、礼貌、有问必答，它把周围世界与用户巧妙联系起来的同时，又极其尊重你的注意力，把你的焦距汇到重点项目上。</p>
</li>
<li><strong>Break It Down：</strong>这里所呈现的机会并不是想象中的那样——把智能手机的UI缩小一下就塞进来,相反，需要考虑的是在设计过程中出现的基础性的问题，遵循这些原则之后，要是用户在使用你的产品操作任务时，产品出问题了怎么办？</li>
</ul>
<p>接下来，我们来看一些<strong>出色的设计案例</strong>：</p>
<ul>
<li><strong>Stream Apps</strong></li>
</ul>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/androidwearstreamapps.PNG" alt=""></p>
<p> 如图，系统中众多App的展现体现在那些垂直的卡片流之中，让小小的屏幕可以为用户尽可能多得展现更多的Wear应用，也是用户界面的核心所在。</p>
<ul>
<li><strong>Main Interface</strong></li>
</ul>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/androidwearcarddesigner.PNG" alt=""><br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/androidweargooglenowcard.PNG" alt=""></p>
<p> 如图，这里我们看到主屏幕流中有一些卡片，像这种卡片就会在特定时刻，需要它们该出现的时候才出现。就像 <code>Google Now</code>一样，这些卡片无需启动或打开，相反，ta们会基于所在地、走路或者奔跑等活动、实际时间、用户的兴趣爱好以及其他因素来运行，你可以指定某项内容在合适的时候出现，这些卡片与环境息息相关，要注意看这些内容十分简洁，而且布局十分清楚，这些布局也经过了优化，让人能通过<strong>眼角一瞥就能一目了然</strong>。这些卡片也会遵循我们低互动（Low Interaction）的原则，它们没有大量的目录和按钮，用户可以直接滑动屏幕来进入另一页获取更多资料，事实上，通过Android Wear用户界面你应该使用像<strong>滑动和全屏挥动</strong>这样的大手势，不要在一个屏幕上放置多个需要点击的小按钮。</p>
<ul>
<li>更多Android Wear出色案例和设计资源请参考下文中的：<a href="">更多系列教程</a></li>
</ul>
<h1 id="Android_Wear搭建更高级别的UI">Android Wear搭建更高级别的UI</h1><p>可穿戴设备的App是Android的标准App，但遵循的是小屏幕的设计理念，它们全屏运行，没有系统UI或状态条，它们的开发过程与安卓App类似，不过在UI的开发理念上却稍有不同，最重要的就是要记住你的界面不必苛求小点触屏或精准的拖拽，举个例子，在可穿戴系统UI中，你会注意到对滑动操作的频繁使用，还有滚动条的运用，它之所以能够流畅运行，是因为它并不需要把注意力花在要去触摸屏幕某个精准的点上，为了帮助大家，Google提供了一个<a href="http://developer.android.com/training/wearables/ui/index.html" target="_blank" rel="external">可穿戴设备App的UI库</a>，它提供了异常丰富的元素来用于UI的设计。</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/androidweargradpagerview.PNG" alt=""></p>
<p>这里，我想重点讲一下 <code>GridViewPager(网格多面控件)</code> ,ta与主页流类似，大家可以用ta来设计界面，ta与多面控件相似，但是可以水平和垂直同时移动，第一步就是布局的规划，下面这几行代码就是你主行为所需要的全部内容：</p>
<p><strong>res/layout/pager_example.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version = <span class="string">"1.0"</span> encoding = <span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.wearable.views.GridViewPager</span></span><br><span class="line">	<span class="attr">xmlns:android</span> = "<span class="attr">http:</span>//<span class="attr">schemas.android.com</span>"</span><br><span class="line">	<span class="attr">android:id</span> = "@+<span class="attr">id</span>/<span class="attr">pager</span>"</span><br><span class="line">	<span class="attr">android:layout_width</span> = "<span class="attr">match_parent</span>"</span><br><span class="line">	<span class="attr">android:layout_height</span> = "<span class="attr">match_parent</span>"</span><br><span class="line">/&gt;</span></span><br></pre></td></tr></table></figure>
<p>在这里，配置多面控件的目的是用于扩展至整个屏幕的，下一步，我们需要一个衔接器（<code>Adapter</code>）</p>
<p><strong>FragmentGridPagerAdapter</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getRowCount</span><span class="params">()</span></span><br><span class="line"><span class="keyword">int</span> <span class="title">getColumnCount</span><span class="params">(<span class="keyword">int</span> row)</span></span><br><span class="line">Fragment <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> row , <span class="keyword">int</span> column)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> <span class="title">getCurrentColumnForRow</span><span class="params">(</span><br><span class="line">	<span class="keyword">int</span> row,<span class="keyword">int</span> currentColum)</span></span></span><br></pre></td></tr></table></figure>
<p>而这几行代码则是在用户使用导航时为用户提供每张页面所呈现的内容，在这个例子中，我会从一个由片段支持的基本类来进行扩展，要创建一个运行的<code>Adapter</code>只需要这三个方法，前两种定义了内容行（<code>row</code>）与页的可用大小，注意 <code>column</code> 的数量取决与行参数<code>row</code>,原因就在于每行可能都有不同的列数量，它的特性就是其选项可以控制每行在页面哪个位置来放置，与固定好的网格布局相比，它给滚动条在平等滚动与垂直滚动间切换提供了可能，在这一布局中，为了实现这点，Google还想了一些办法，但结果看起来就是一个无缝对接，Google为什么要这么做？Google认为每行内容都是单独的存在，在主页流中，这些就成了提醒或Google Now卡片，用户要从一个行为页进入到目标页而进行上下滑动的操作时，如果有不同的项，那么用户在操作时就会迷惑，为了解决这个问题，上翻或下翻总会回到第一列，这个也是网格多面控件的默认模式，为了对此做出调整，你可以用另一种方式进行覆盖，这种方式称为：所想即所见（用户想了解某项信息时，该信息的页面就会呈现在当前页或下一页），它也会提供当前列的位置，为了返回固定的移动系统，你可以选择返回列，或许你还想保存该行上次浏览的那一列，以便下次选择改行时可以直接返回到那一列。最后，最重要的一点就是getItem了，这个就是你要在页面上呈现出片段的位置了，这里，你只需要返回到你的内容片段，然后剩下的事情就由多面控件来处理了。只要需要，内容片段可以长久存储，然后在合适的时候，要么删除，要么重新进入，在这种方式跟多面控件非常类似，只是加了一个垂直的维度而已。</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/androidwearcontentPage.PNG" alt=""></p>
<p>为了帮助大家建立自己的页面内容，Google提供了卡片内容片段，它可以自动应用不同的风格,从而与系统卡片搭配一致，而你要做的只是提供内容就可以，这种内容片段也有许多附加特性，首先，如果你有超过一页的内容，它就会显示滚动条让你拖动到正确的位置，你也可以让它作为一个单独页面开始，这样就可以通过触按来放大到全屏了，在这个案例中，内容溢出会自动得到处理，在你代码样本和文档中会找到更多细节的，还有一些事情要记住：每个页面尽量只放一个单独的行为，如果可能的话，整张卡片应该做成一个触按目标，而需要运行的行为则应该清楚明白，现在，剩下需要做的就是把这些东西整合起来，转接类会处理所有内容片段操作,所以需要给片段管理来一个参数，把转接代码加入到页面代码中就行了。</p>
<p><strong>SampleActivity.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span>&#123;</span><br><span class="line">	 setContentView(R.layout.pager_example);</span><br><span class="line">	 mPager = findViewById(R.id.pager);</span><br><span class="line">	 mAdapter = <span class="keyword">new</span> ExampleGridPagerAdapter(getFragmentManager());</span><br><span class="line">	 mPager.setAdapter(mAdapter);	</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Android_Wear_数据层API_DevBytes">Android Wear 数据层API DevBytes</h1><p>首先我们需要知道手机端和wear端的连接是基于Android Wear数据层API的，一旦出现任何变化，核心数据层API会让你的掌上设备，与可穿戴设备自动同步数据，这种进程能够让你的设备充当数据发送器或接收器，或兼而有之，发送器设备设置一些准备发送的数据，一旦这些数据发生变动，那么这些变动就会发送给接收器，接受数据的设备反过来会在检测变动之后，会启动一个反馈功能来告诉程序数据已更新，处于两种设备之间的核心对象被称为<strong>数据项</strong>，它能有效提供设备所需要的数据存储，从基础面来讲，数据项包含一个有效负载对象，它是用来负载实际的数据的，还有一个是路径对象，它为数据项提供唯一的标识符字符串，它在接收端很重要，来表明具体哪些数据得到了更新。</p>
<p>数据项能在可穿戴设别与掌上设备间来回接受和发送小批量数据，例如使用可穿戴设备传感器来收集心率信息，并发送到用户的手机，与前14周的心率信息交叉想比较，并将结果图反映在手表上，因为电流限制的原因，数据项对象能承载小部分数据大约有100k，因此如果你希望数据项承载更大的数据量，你需要附加一个超大容量的对象，这样你就能发送大量的二进制数据到蓝牙传输，如图像，举个例子吧，用掌上设备应用软件下载一个图像，调整大小，然后发送到穿戴式设备上进行展示，掌上设备负责进程中所有的复杂的重量级操作，而穿戴式设备则呈现简单的结果，很不错的是，为了避免数据的重发，资产对象负责缓存数据和保存蓝牙带宽，这就意味着每个缓存的资产对象只能对应一种情况，如果你重复发送多次，也不会浪费带宽或者是电量，更简单的方面，数据有效载荷API也能提供信息API，这样就能完成普通任务，例如告知你的穿戴设备要执行<code>Activity</code>，或者是提醒手机切歌曲，在默认的情况下，这些信息可以通过远程过程调用，也就是说，一旦过程改变，则不能确保信息能被接收，但是如果你想要程序更复杂，可以将信息设置成提问（<code>request</code>）或回答（<code>response</code>）的形式，这样连接的另一方就会告知另外的设备，反过来，另外的设备会完成相关的工作，然后做出回答，相应地，提交答复。更多复杂的DataAPI细节可以到google android developer官网查看。</p>
<h1 id="Android_Wear的提醒（Notification）新特性">Android Wear的提醒（Notification）新特性</h1><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/github_androidwear23.png" alt=""></p>
<p>我们来看看wear设备提醒的三个新方面吧：</p>
<ul>
<li>新的显示选项</li>
<li>新的提醒行为</li>
<li>高级自定义设置</li>
</ul>
<p>这是一个提醒流，它能很好地获取信息并与用户交互，这里有不同外观不同尺寸的垂直提醒列表，获取信息时只需要向上滑动一下表盘就能办到，继续滑动的话就会显示出额外的卡片，信息流中的这些提醒会加入到安卓提醒API中去，如果你已经熟悉了这个API，你可能就会识别出它的一些特性了，比如在独立的屏幕上会出现正确的提醒行为，但跟平板对于手机类似的是，提醒是依然可以被取消的，只需要把提醒卡滑到边上然后释放即可，手机上的提醒会自动同步到你的手表上面，这可以让许多现有安卓APP来在可穿戴设备上发挥自己的价值，它们也可以增加行为和撤销，我们<strong>支持许多现有的提醒风格</strong>，比如<strong>收件箱式、大图式和长文本式</strong>，如果内容太长，用户可以按住提醒来扩展，为了让体验更加丰富，我们也增加了新API来自定义提醒，TA们就成了AndroidSDK和libs库中可穿戴设备扩展类的一部分了。</p>
<p>首先我们来看看，多页面提醒设计<code>Multi-page notifications</code>：</p>
<h2 id="多页面提醒设计（Multi-page_notifications）">多页面提醒设计（Multi-page notifications）</h2><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/github_myblogmutinotifi.PNG" alt=""></p>
<p>这些页面可以进一步为单条提醒增加详细信息，通过滑动就可以进入，屏幕下方的提示会让你知道TA们停留在哪个片面上，因为页面仅仅是提醒对象，所以他们可以使用任意的提醒风格，</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/github_myblogmutinotifi2.PNG" alt=""></p>
<p>要给一条提醒增加页面的话，使用可穿戴设计新拓展类来增加页面，如下代码段为内容增加了两页新页面：</p>
<p><strong>Add pages to a notification</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Notification page2 = ...</span><br><span class="line">Notification page3 = ...</span><br><span class="line"></span><br><span class="line">NotificationCompat.Builder builder = ...</span><br><span class="line">builder.extend(</span><br><span class="line">   <span class="keyword">new</span> NotificationCompat.WearableExtender(</span><br><span class="line">	.addPage(page2)</span><br><span class="line">	.addPage(page3)</span><br><span class="line">	.setBackground(bitmap)<span class="comment">//设置位图</span></span><br><span class="line">	.setHintShowBackgroundOnly(<span class="keyword">true</span>));<span class="comment">//隐藏图片</span></span><br><span class="line">NotificationManagerCompat.from(ctx)</span><br><span class="line">	.notify(builder.build());</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>总计就是三张卡片了，此外，你可以添加一张全屏图像作为页面，就用不着卡片了，这种办法对地图或照片之类的内容来说非常实用。</p>
<h2 id="提醒堆栈（Notification_Stacks）">提醒堆栈（Notification Stacks）</h2><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/github_myblognotifistack.PNG" alt=""></p>
<p>它可以把多条提醒归类成一组，用户可以与整个堆栈交互，也可以进入到单独的项中，堆栈本身及子提醒也可以增加行为，这个特性对信息型APP来说非常方便，因为用户可能会一次性查看所有信息，或只看其中的一条，为了创建提醒堆栈，推送一条或多条子提醒，然后把它们全打上组密钥的标签，你可以采用<code>NotificationCompat.Builder</code>中的<code>setGroupMethod</code>（设置组方式）来实现这一点。来自同一APP相同组密钥的提醒推送会被归类到同一堆栈中，你也可以使用setSortKey(设置类密钥)来处理项，如果你喜欢为一个丛（<code>bundle</code>）选择背景图片和行为，你可以推送一个可选择的组概要提醒，在下面代码中，用户会看到为丛设置的“全部归档”行为，取保为每个提醒选择一个唯一的提醒ID或标签，以免它们在推送时会相互覆盖。</p>
<p><strong>Post group child notifications</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//for each child notification</span></span><br><span class="line">NotificationCompat.Builder builder = ...</span><br><span class="line">build.addAction(R.drawable.archive,</span><br><span class="line">	<span class="string">"Archive"</span>,pendingIntent)</span><br><span class="line">	.setGroup(<span class="string">"my-group"</span>)</span><br><span class="line">	.setSortKey(<span class="string">"sort-key"</span>);</span><br><span class="line">NotificationManagerCompat.from(ctx)</span><br><span class="line">	.notify(builder.build());</span><br></pre></td></tr></table></figure>
<p>目前展示的提醒行为全部使用了默认设置，可以作为附加页面增加到相应卡片之中，下图左手的手表展示了这一设置,把主卡滑走就出现了“播放”行为，右手的手表则展示了直接把行为添加进当前卡片的行为，这样这张卡片就可以直接点击了，使用可穿戴扩展器中的setContentAction(设置内容行为)来为卡片添加行为。这些行为就不会作为单一页面来显示了。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//Action Notification</span></span><br><span class="line">NotificationCompat.Builder builder = ...</span><br><span class="line">build.addAction(R.drawable.pause,<span class="string">"Pause"</span>,intent)</span><br><span class="line">build.extend(<span class="keyword">new</span> NotificationCompat.WearableExtend)</span><br><span class="line">	.setContentAction()</span><br></pre></td></tr></table></figure>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/github_myblogmusicstatus.PNG" alt=""></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/github_myblogmusicstatus0.PNG" alt=""></p>
<h2 id="远程输入（Remote_Input）">远程输入（Remote Input）</h2><p>远程输入则是提醒行为的另外一个新特性，在激活一个行为时，它可以让用户开启文本回复，设备会提供给用户一个短语或让用户从一些选项中进行选择，这种输入的结果就是将含有你意图的行为发送了出去，通过远程输入，AndroidWear与手机、平板或可穿戴设备的APP互动就变得非常简单了，下面的代码就显示出我们为回复行为增加了一个远程输入，用户在卡片流中点击这一行为时，系统就会在<code>Quick Reply</code>的标签下，提供给用户一个语音回复的行为，一旦文本回复转换完成而又得到了用户的同意，你的行为意图就会发出，而且目的已经包含在内了，</p>
<p><strong>Add RemoteInput to a notification action</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">String EXTRA_QUICK_REPLY = <span class="string">"quick_reply"</span>;</span><br><span class="line"></span><br><span class="line">NotificationCompat.Builder builder=...</span><br><span class="line">builder.addAction(</span><br><span class="line">	<span class="keyword">new</span> NotificationCompat.Action.Builder(</span><br><span class="line">		R.drawable.reply,<span class="string">"Reply"</span>,pendingIntent</span><br><span class="line">	.addRemoteInput(</span><br><span class="line">		<span class="keyword">new</span> RemoteInput.Builder(EXTRA_QUICK_REPLY)</span><br><span class="line">			.setLabel(<span class="string">"Quick reply"</span>).build())</span><br><span class="line">		.build());</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>你的意图接收器，可以是一个<code>Activity</code>，<code>Service</code>，<code>Broadcast</code>，就可以使用远程输入API意图功能中的<code>Get Results</code>，来重新恢复成目的文本了，在下面的代码中，quickReplyText变量会根据用户的输入来进行设置，在远程输入API中还有许多其他选项可以使用，支持的内容包括预设选择、允许或禁用、自由样式输入，还支持同一行为的多种输入等。</p>
<p><strong>MyActivity.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span>&#123;</span><br><span class="line">	<span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">	Bundle results = RemoteInput.getResultsFromIntent(</span><br><span class="line">		getIntent());</span><br><span class="line">	<span class="keyword">if</span>(results != <span class="keyword">null</span>)&#123;</span><br><span class="line">		CharSequence quickReplyText = </span><br><span class="line">			results.getCharSequence(</span><br><span class="line">				EXTRE_QUICK_REPLY);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Custom_Display_Cards">Custom Display Cards</h2><p>标准的提醒模版或许并不足以展示你想在卡片中出现的内容，所以我们增加了一个API：set Display Intent（设置显示意图），它可以让你使用安卓活动来实时绘制提醒内容，这一特性只对可穿戴设备上运行的APP可用，而且这些APP所用的API需要20以上的版本，定义内嵌到自定义显示卡片的活动时，你必须首先把它标记为exported（导出），这个可以通过在活动中设置导出属性为true，或增加一个意图过滤器来完成，接下来，把这一新属性的“是否潜入”设置为true，这样可以防止活动嵌入到不该嵌入的事件中去，最后，设置关联任务<code>task Affinity</code>为空字符串，虽然触控输入并不会在信息流中传播，但这些活动与其他活动一样，可以包含相同内容，这样像按钮那样的控制就可能不再适合了，你的活动写入之后，你可以将其嵌入到信息流中来创建一条提醒，然后使用可穿戴扩展器中的<code>setDisplayIntent</code>（设置显示意图）方式来选择该活动，你可以为显示意图增加附加内容来通过活动所需要的任何数据。</p>
<p><strong>AndroidMainifest.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span></span><br><span class="line">	<span class="attr">android:name</span>=<span class="string">"com.example.MyDisplayActivity"</span></span><br><span class="line">	<span class="attr">android:exported</span>=<span class="string">"true"</span></span><br><span class="line">	<span class="attr">android:allowEmbeded</span>=<span class="string">"true"</span></span><br><span class="line">	<span class="attr">android:taskAffinity</span>=<span class="string">""</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>下面就是自定义显示提醒的一些模版，信息流中的标准提醒会基于内容自动调整大小，但是自定义显示提醒则需要在不想要默认大尺寸的情况下提供一个尺寸，你可以使用可穿戴拓展器中的设置自定义尺寸预设，或是设置自定义内容高度等方式来选择尺寸。</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/github_myblognotifiwearmoban.PNG" alt=""></p>
<h2 id="Notification_Bridging">Notification Bridging</h2><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/github_myblogmobile_wear_noti.PNG" alt=""></p>
<p>通过设置这些自定义卡片，之前上面提到的<code>Notification API</code>可以同时用在可穿戴设备的APP的提醒创建，以及来自手机或平板APP上的提醒桥接，桥接过程在可穿戴设备上是自动进行的，但是这里还有<strong>几种新API是用来自定义桥接行为的</strong>，如下代码所示：首先，你可以使用提醒兼容设置中的新<code>set Local Only</code>（设置仅本地）来完全禁用提醒桥接，如果一个提醒仅相关当前设备，那它就很有用处了，第二个特效，就是增加提醒仅可穿戴设备可用的行为，它可以让你为手机和可穿戴设备选择单独的行为设置，仅可穿戴可用行为在可穿戴扩展器的类中添加。</p>
<p><strong>Disable bridging for a notification</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NotificationCompat.Builder builder = ...</span><br><span class="line">builder.setLocalOnly(<span class="keyword">false</span>);</span><br></pre></td></tr></table></figure>
<p><strong>Add an action for phones,tablets,and wearables</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NotificationCompat.Builder builder = ...</span><br><span class="line">builder.addAction(R.drawable.reply,<span class="string">"Archive"</span>,pendingIntent);</span><br><span class="line">	.addAction</span><br></pre></td></tr></table></figure>
<p><strong>Add an action for wearables only</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">NotificationCompat.Builder builder = ...</span><br><span class="line">builder.extend(<span class="keyword">new</span> NotificationCompat.WearableExtender()</span><br><span class="line">	.addAction(<span class="keyword">new</span> NotificationCompat.Action(</span><br><span class="line">		R.drawable.reply,<span class="string">"Reply"</span>,pendingIntent)));</span><br></pre></td></tr></table></figure>
<p>PS：这里有博主自己曾经写过的一个运行在Android手机上的Demo，用来展示Wear端的Notification新特性:<a href="https://github.com/AndroidWearDemo/AndroidWearNotification" target="_blank" rel="external">在Github上获取</a></p>
<p>也可以参考国外大神的一个例子：<a href="http://code.tutsplus.com/tutorials/enhanced-and-wearable-ready-notifications-on-android--cms-21868" target="_blank" rel="external">Enhanced and Wearable-Ready Notifications on Android</a></p>
<h1 id="Android_Wear下的全屏App设计理念">Android Wear下的全屏App设计理念</h1><p>为Android Wear设计APP的许多技术因素，你们会觉得非常熟悉，因为它们跟普通的Android APP运行原理是一样的，不过呢，这里主要讲的是<strong>两大不同点</strong>：</p>
<h2 id="让用户如何退出APP">让用户如何退出APP</h2><p>在手机或平板上，用户会使用返回或主页键来推出APP，但这些按钮在Android Wear设备上都不会出现，相反，在wear app上，用户离开你的APP会有如下两种办法：<strong>一种是把页面朝左滑动至边缘退出，另一种是长按APP退出</strong>：</p>
<h3 id="滑动退出：">滑动退出：</h3><p>通过Android Wear我们引入了一种新的窗口属性：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt; style name =&quot;AppTheme&quot; parent = &quot;Theme.DeviceDefault&quot; &gt;</span><br><span class="line">	&lt; item name = &quot;android.windowSwipeToDismiss&quot;&gt;true&lt; /item &gt;</span><br><span class="line">&lt; /style &gt;</span><br></pre></td></tr></table></figure>
<p><strong>即窗口滑动属性</strong>，这种窗口属性可以运用在你具体的活动主题中，一旦窗口滑动退出属性设置为true，那么活动一旦从左滑动至右，它就会退出，这种滑动退出运行方式跟多面控件运行方式类似，如果活动中的内容本身就可以滚动，那么窗口就不会退出，除非用户滚动到该内容边缘后再次滑动，它可以让你创建一些非常出色、类似信息流的体验，这些体验也可以通过滑动来退出。所有的Android Wear APP要么使用设备默认主题，要么使用一个继承默认设备的主题，这样可以确保不同的主题风格都会在你的APP上正常运行，从而让它们在你的wear设备上看起来非常好，</p>
<p><strong>You get it by default</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span></span><br><span class="line">	<span class="attr">android:name</span>=<span class="string">".ControlRobotsActivity"</span></span><br><span class="line">	<span class="attr">android:theme</span>=<span class="string">"Theme.DeviceDefault"</span></span><br><span class="line">/&gt;</span></span><br></pre></td></tr></table></figure>
<p>当然，我们知道，有些APP没办法使用滑动退出的功能，比如，无限移动的地图应用时永远没有边缘的，如果你不想使用滑动手势，那么你可以通过吧滑动的退出属性设置为false，来在你的主题中禁用ta。对于无法通过滑动来退出的APP。我们可以使用第二个属性：即<strong>长按退出功能</strong>。</p>
<h3 id="长按退出">长按退出</h3><p>这就相当于是一个退出按钮的行为了，为了让用户知道你的APP可以长按退出，在APP首次运行时，你要给用户一个长按退出的提示。打开我们的wear设备，你会发现在屏幕任何地方出现长按行为，都会在APP上出现一个退出按钮。再按下那个按钮来退出活动，用户则会回到主页，为了让你的APP退出变得尽量容易，Google做了一个可以在大多数UI上运行的View,它叫退出覆盖视图。（dismiss overlay view）</p>
<p><strong>activity_control_robots.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">android.support.wearable.view.DismissOverlayView</span></span><br><span class="line">	<span class="attr">android:id</span>=<span class="string">"@+id/dismiss_overlay"</span></span><br><span class="line">	<span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span><br><span class="line">      <span class="attr">android:layout_width</span>＝"<span class="attr">match_parent</span>"</span><br><span class="line">     /&gt;</span></span><br></pre></td></tr></table></figure>
<p>为了把它集成到你的APP中，首先要把它添加进你的XML活动层中，确保它<strong>增加的位置一定是在其他布局之上的</strong>你还要确保该视图的尺寸能够覆盖整个屏幕，把它高度和宽度设置成与父框架相匹配，这样它就能够确保全屏，而且处于最顶层了，现在我们来看看java类里面怎么写：</p>
<p><strong>ControlRobotsActivity.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedState)</span></span>&#123;</span><br><span class="line">	<span class="keyword">super</span>.onCreate(savedState);</span><br><span class="line">	setContentView(R.layout.activity_control_robots);  	mDismissOverlay = (DismissOverlayView)findViewById(R.id.dismiss_overlay);</span><br><span class="line">	mDismissOverlay.setIntroText(R.string.long_press_intro);</span><br><span class="line">	mDismissOverlay.showIntroIfNecessary();</span><br><span class="line">     mDetector = <span class="keyword">new</span> GestureDetector(<span class="keyword">this</span>,<span class="keyword">new</span> SimpleOnGestureListener()&#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLongPress</span><span class="params">(MotionEvent ev)</span></span>&#123;</span><br><span class="line">       	mDismissOverlay.show();</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;);</span><br></pre></td></tr></table></figure>
<p> 接下来是<code>TouchEvent</code>。  </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent ev)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> mDetector.onTouchEvent(ev) | | <span class="keyword">super</span>.onTouchEvent(ev);&#125;</span><br></pre></td></tr></table></figure>
<p>在它的<code>onCreate</code>中把退出层从你的布局层中拉出来，然后设置为内省文本，这个文本会在第一次运行活动时显示出来，而且会显示在APP其他内容之上，用来告诉用户可以通过长按来返回主页，然后，使用<code>showIntroIfNecessary</code>(必要时显示内省文本)，它会，也只会在第一次运行该APP时显示这个内省层，，接下来，如果用户长按了你的app，我们就需要让它激活，使用<code>GestureDectector</code>(手势检测器）和<code>SimpleOnGestureListener</code>（简易手势接收器）,使用这些框架类会确保所有app感应到手势的时长，在你长按返回时，会激活布局层显示退出行为，会显示一个退出按钮，如果用户点击了该按钮，你的活动就会被结束，但如果你没有点击该按钮，那么这个退出层就会自行隐藏，等着下次出现的命令，最后，还是在你的活动中覆盖一层 <code>onTouchEvent</code> (触控事件)，然后让<code>reveiveTouchEvents</code> (接受触控事件)连通到<code>GestureDectector</code>（手势检测器）,如果 <code>GestureDetector</code> 返回为true，你也真的返回主页了，而且不用触动 <code>onTouchEvent</code> 方式的正常活动,相反如果为false，那就可以继续使用正常活动的触控。</p>
<h2 id="如何设计和运用你的APP，让ta看起来在圆形屏幕(Moto_360)上很不错。">如何设计和运用你的APP，让ta看起来在圆形屏幕(Moto 360)上很不错。</h2><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/github_myblogmoto360_size.PNG" alt=""></p>
<p>首先，我们来看看360的屏幕维度吧，这是一个直径为320px的圆圈，下方有30px的<code>chin</code>，因此系统会认为它的尺寸为320x290px，在我们自己开发的过程中，我们意识到chin会将一些非计划中的结果导入到现有的布局中，比如我们来看一下信息流中的行为卡片，我们希望给屏幕中央放置一个行为图标，但我们给中央垂直点加了一个层重力机制之后，结果这个蓝圆偏移了15px，但我们还是希望中间的这个蓝圆最好能够处于整个屏幕的中央，在我们之前提到过的默认主题中，<code>windowOverscan</code>属性已经设置了，而且整个视图分级结构的源是320X320px，这就导致了你的APP顶级结构视图，依然认为是320X320，而非320X290，然后再把你的局布如预想般放在屏幕中央，如何检测你的活动是运行在圆形屏幕中的呢？你的视图会请求应用窗口插入<code>insets</code>,然后会返回一个窗口插入目标，它会告诉你屏幕的形状，在Moto360中，它会告诉你下方插入的窗口为30px，在任何地方只要你要围绕这个<code>chin</code>来布局，你就需要经常使用这个值，这里所使用的插入值，会确保你的APP在以后任何可穿戴设备上看起来都很漂亮，为了节省大家敲打这些通用代码的时间，Google增加了一个叫<code>WatchViewStub</code>的视图，它可以让你根据APP运行的不同屏幕来扩充一两种不同的布局，如果你想在屏幕上看起来与众不同，就可以使用<code>WatchViewStub</code>来作为任何视图分级就够的源，要使用的话，先在你的活动或者onCreate碎片中创建一个新的源，完成之后，你就需要给你的源加上两层布局（<code>Round、Rect</code>）,但是有一个问题需要注意：因为这些布局在视图在附加进结构分级前，并没有进行扩充，你就没办法进入子一级的视图，相反，附加一个OnLayoutInflatedListener(布局扩充收听器)，它可以在布局内层进行不合适的扩充时使用，退出布局视图和这个WatchViewStub都可以在可穿戴支持库<code>Wearable Library</code>中找到，如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> WindowInsets <span class="title">onApplyWindowInsets</span><span class="params">(View view,WindowInsets windowInsets)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(windowInsets.isRound())&#123;</span><br><span class="line">		Rect insets = windowInsets.getSystemWindowInsets();</span><br><span class="line">	<span class="comment">//insets.bottom = 30</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>ControlRobotsActivity.java</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span>&#123;</span><br><span class="line">   WatchViewStub stub = <span class="keyword">new</span> WatchViewStub(<span class="keyword">this</span>);</span><br><span class="line">	stub.setRectLayout(R.layout.activity_control_robots_rect);</span><br><span class="line">	stub.setRoundLayout(R.layout.activity_control_robots_round);</span><br><span class="line">	stub.setOnLayoutInflatedListener(<span class="keyword">new</span> WatchViewStub.OnLayoutInflatedListener()&#123;</span><br><span class="line">		<span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLayoutInflated</span><span class="params">(WatchViewStub stub)</span></span>&#123;</span><br><span class="line">			stub.findViewById(R.id.start_invasion).setOnClickListener(mClick);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;);</span><br><span class="line">	setContentView(stub);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>该库同时也提供叫做<code>盒状插入布局的新布局管理器</code>，它拓展了框架布局，让开发师能够同时在方形与圆形屏幕上使用同一布局。</p>
<h1 id="Android_Wear表盘（WatchFace）设计与开发">Android Wear表盘（WatchFace）设计与开发</h1><p>不得不承认，Google在表盘方面上还是很鼓励第三方开发者去自由创作的，有别于<br><a href="http://www.leikeji.com/article?2264" target="_blank" rel="external">Apple Watch不允许接入第三方watch face应用</a>的做法。</p>
<p>要做一款WatchFace应用，你先需要拓展一下<code>CanvasWatchFaceService</code>及其引擎，</p>
<p><a href="http://code.tutsplus.com/tutorials/creating-an-android-wear-watch-face--cms-23718" target="_blank" rel="external">AndroidWear CanvasWatchFaceService</a></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/canvaswatchface.png" alt=""></p>
<h2 id="onCreate_&amp;_onDraw">onCreate  &amp;  onDraw</h2><p>你可以加载并缩放任意图片，通过<code>onCreate</code>方式来设置表盘风格，它包含一些控制瞥视卡片模式 变量，如上图所示，这种模式是放置OK Google 状态条图标和其他东西的地方，然后你可以用<code>onDraw</code>来绘制一个表盘，在个方法中，我们要把显示在表盘的框架的每一帧都渲染出来，因为我们是在画布上绘制，所以我们可以用标准的位图或形状函数，因为这个代码是在每个框架下都能运行的，所以TA的运行状态我们要牢记在心里，</p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/githubblogliangzhongMode.png" alt=""></p>
<h2 id="交互模式">交互模式</h2><p>在交互模式（<code>interactive</code>）下，你是可以绘制全彩色和动画的，模板默认每秒钟更新一次，如果你想让TA更新的更加频繁，举个例子，你想播放一个动画时，那么你就要做三件事了：</p>
<ul>
<li><p>第一，你要移除<code>mUpdateTimeHandles</code>(默认更新时间管理)，要不然<code>onDraw</code>只会一秒需要一次。</p>
</li>
<li><p>第二，在第一次表盘可见时，需要触发<code>onDraw</code>方式，这样就可以让<code>onVisibilityChange</code>方式下的框架无效了。</p>
</li>
<li><p>第三，你需要在<code>onDraw</code>方式最后使框架无效，这样会剔除掉<code>onDraw</code>循环，可以让动画流畅播放，现在表盘就会不断更新了，在使框架无效之前，很重要的一点就是查看你的表盘是否处于环境模式下，要不然的话更新循环就会不断在后台运行，就算在环境模式下也是如此，而这么做的话，会<strong>极大地影响电池寿命</strong>。</p>
</li>
</ul>
<h2 id="环境模式">环境模式</h2><p>在环境模式（<code>ambient mode</code>类似于手机的待机模式）下，使用的绘制颜色是有限制的，而且模板默认每分钟才更新一次。</p>
<p>在这个模式下，一般会选用两个模式，</p>
<ul>
<li>选择灰色图片或者黑白双色。</li>
<li><p>移除那些更新频率超过1分钟1次的屏幕元素（eg:秒针）</p>
<p>要检测手表有没有进入环境模式，你可以覆盖<code>onAmbientModeChange</code>方式，RD会发送实例变量来表明手表处于环境模式下并使当前框架无效，这样会触发重新绘制机制， </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span>  <span class="title">onAmbientModeChanged</span></span><br><span class="line"><span class="params">(<span class="keyword">boolean</span> inAmbientMode)</span></span>&#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">	mAmient = inAmbientMode</span><br><span class="line"><span class="comment">// ... 	</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后，在下一次的<code>onDraw</code>中，RD可以决定他们去做什么。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas ,Rect rect)</span></span>&#123;</span><br><span class="line">   <span class="comment">//...draw code....</span></span><br><span class="line">   <span class="keyword">if</span>(!mAmbient)&#123;</span><br><span class="line">   <span class="comment">//additional drawing code....</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>当然AndroidWearWatchFace API还为开发者们提供 一些高级自定义的情景，来确保表盘在所有情况下都能流畅进行，特别说一下其中两个：</p>
<ul>
<li>第一个：一些Android Wear设置支持低比特率的环境模式，这就意味着只显示屏幕像素，甚至关掉它，只使用灰度设计，无法在这些屏幕上运行，这就是我们为什么要用黑白代替灰色设计的原因。为了判断设计是否支持低比特率，我们把<code>onPropertiesChange</code>进行覆盖。开发者可以查看手表是否支持低比特率的环境模式，</li>
</ul>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPropertiesChanged</span><span class="params">(Bundle properties)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">super</span>.onPropertiesChanged(properties);</span><br><span class="line">	mLowBitAmbient=</span><br><span class="line">	properties.getBoolean</span><br><span class="line">		(PROPERTY_LOW_BIT_AMBIENT,<span class="keyword">false</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>第二个：表盘能显示瞥视卡片在屏幕下方，我们通常会围绕卡片边缘onDraw一个透明矩形区域——TA可以确保你不会与表盘设计有很差的交互体验，而且在环境模式下尤其重要，要是没有它，卡片信息会被表盘底部的刻度线给遮挡。</p>
<p>这里博主为大家提供了一些<a href="https://github.com/AndroidWearDemo/AndroidWearWatchface" target="_blank" rel="external">谷歌官方和自己编写的表盘Demo</a>。</p>
</li>
</ul>
<h1 id="Android_Wear更多系列教程：">Android Wear更多系列教程：</h1><blockquote>
<p>博主认为，目前天朝的可穿戴社区仍处于起步阶段，很多资源还不丰富，但是天朝程序猿的力量是强大的，相信随着更多wear developers的加入，可穿戴的社区会愈来愈壮大，最后仅以自己微薄之力，为Android Wear开源做出一点贡献，希望能帮助到更多的人。&gt; </p>
</blockquote>
<p>下面汇总了目前国内比较好的一些Android Wear资源，请参考：</p>
<ul>
<li><p>开发类</p>
<ul>
<li><a href="http://developer.android.com/wear/index.html" target="_blank" rel="external">Android Wear Google官方教程（请翻墙，或者自己搜镜像）</a></li>
<li><a href="http://dev.seacat.cn/index.html" target="_blank" rel="external">Android Wear Google官方教程 <code>穿戴猫</code>汉化版本</a></li>
<li><a href="http://bbs.seacat.cn/forum-106-1.html" target="_blank" rel="external">Android Wear <code>穿戴猫</code>社区原创基础教程</a></li>
<li><a href="http://www.tuicool.com/articles/F7Z3Yj" target="_blank" rel="external">Android Wear - App Structure for Android Wear（应用结构)</a></li>
<li><a href="http://www.cnblogs.com/benhero/p/4273800.html" target="_blank" rel="external">benhero博客_Android Wear开发学习指南</a></li>
<li><a href="http://code.tutsplus.com/tutorials/introduction-to-android-wear-hands-on--cms-22157" target="_blank" rel="external">Android Wear_Hands-On</a></li>
<li><a href="http://code.tutsplus.com/tutorials/creating-an-android-wear-watch-face--cms-23718" target="_blank" rel="external">AndroidWear CanvasWatchFaceService</a></li>
<li><a href="http://code.tutsplus.com/articles/introduction-to-android-wear-the-basics--cms-22042" target="_blank" rel="external">Introduction to Android Wear: The Basics</a></li>
<li><a href="http://code.tutsplus.com/tutorials/enhanced-and-wearable-ready-notifications-on-android--cms-21868" target="_blank" rel="external">Enhanced and Wearable-Ready Notifications on Android</a></li>
<li><a href="http://ask.android-studio.org/?/explore/category-wear" target="_blank" rel="external">Ask AndroidStudio Wear问答社区</a></li>
</ul>
</li>
<li><p>设计类 </p>
<ul>
<li><a href="http://developer.android.com/design/wear/index.html" target="_blank" rel="external">Google 官方Android Wear设计教程（需要翻墙）</a> </li>
<li><a href="http://developer.android.com/design/wear/watchfaces.html" target="_blank" rel="external">Google 官方Android Wear表盘（WatchFace）设计教程（需要翻墙）</a></li>
<li><a href="http://note.youdao.com/share/?id=1a46e80cb5ea07b5c755d38b65ff9576&amp;type=note" target="_blank" rel="external">Google Android Wear 设计规范学习心得 </a></li>
<li><a href="http://tencentos.ui.cn/" target="_blank" rel="external">TencentOS智能手表表盘设计大赛</a></li>
<li><a href="http://facerepo.com/app/" target="_blank" rel="external">FaceRepo for WatchMaker/Facer表盘引擎收集网站</a></li>
</ul>
</li>
</ul>
<h1 id="Google_Play_上热门的Android_Wear应用">Google Play 上热门的Android Wear应用</h1><blockquote>
<p>博主收集了一些谷歌市场上比较热门的Android Wear应用，期待更多朋友的补充和意见，大家可以下载下来体验，翻不了墙的同学请默哀。</p>
</blockquote>
<ul>
<li><p><a href="http://note.youdao.com/share/?id=ee853cdb7e4283bade26e485d6ca2c60&amp;type=note" target="_blank" rel="external">22款很棒的Android Wear表盘应用</a></p>
</li>
<li><p><a href="http://note.youdao.com/share/?id=0037856aa8e5e0c2476b9a9f4950baa5&amp;type=note" target="_blank" rel="external">31款很棒的Android Wear应用</a></p>
</li>
<li><p><a href="http://www.magicwatchface.com/zh_cn" target="_blank" rel="external">Magic WatchFace神奇表盘应用</a></p>
</li>
</ul>
<h1 id="热门的可穿戴技术社区">热门的可穿戴技术社区</h1><blockquote>
<p>收录了一些博主目前暂时所知的”可穿戴技术社区”，期待更多朋友的补充和意见！</p>
</blockquote>
<ul>
<li>国内：<ul>
<li><a href="http://www.seacat.cn/" target="_blank" rel="external">穿戴猫</a></li>
<li><a href="http://duwear.baidu.com/" target="_blank" rel="external">DuWear</a></li>
<li><a href="http://ticwear.com/" target="_blank" rel="external">Ticwear</a></li>
<li><a href="http://watch.tos.cn/" target="_blank" rel="external">Tencent OS for Watch</a></li>
<li><a href="http://www.watchkong.com/forum/forum.php" target="_blank" rel="external">手表控</a></li>
<li><a href="http://www.leikeji.com/" target="_blank" rel="external">雷科技</a></li>
<li><a href="http://wearable.hqbpc.com/" target="_blank" rel="external">可穿戴设备</a></li>
<li><a href="http://www.kongnar.com/" target="_blank" rel="external">控哪儿网</a></li>
<li><a href="http://www.mapelf.com/" target="_blank" rel="external">出行精灵</a></li>
</ul>
</li>
<li>国外：<ul>
<li>由于天朝特殊原因，等以后更新。 </li>
</ul>
</li>
</ul>
<h1 id="Android_Wear相关产品宣传视频">Android Wear相关产品宣传视频</h1><ul>
<li><a href="http://www.cgangs.com/article/3467?source=sinaweibo" target="_blank" rel="external">Google：wear what you want</a></li>
<li><a href="http://www.tudou.com/programs/view/jKv0PSWHdCY/" target="_blank" rel="external">Moto360创意广告</a></li>
<li><a href="http://baidu.fun.tv/watch/2542550633994583670.html" target="_blank" rel="external">Moto360中文应用场景广告</a></li>
<li><a href="http://my.tv.sohu.com/us/243481507/79477160.shtml" target="_blank" rel="external">华为AndroidWear智能手表官方宣传片1</a></li>
<li><a href="http://my.tv.sohu.com/us/5747262/78630855.shtml" target="_blank" rel="external">华为AndroidWear智能手表官方宣传片2</a></li>
</ul>
<h1 id="加入我们">加入我们</h1><p>组织在这里(请猛戳链接)：<a href="https://github.com/AndroidWearDemo" target="_blank" rel="external">AndroidWear-CN</a></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/github_myblogAndroidWear-CN.png" alt=""></p>
<blockquote>
<p><strong>转载</strong>请注明<strong>出处+原文链接+原文作者</strong>，侵权必究，谢谢！<br>持续更新中</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="本文作者">本文作者</h1><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogpicslrme.jpg" alt=""></p>
<h2 id="Jiale_Dai"><a href="http://www.daijiale.cn">Jiale Dai</a></h2><p>成都 电子科技大学 本科生( 其实还没毕业，目前大三 ）</p>
<p>从14年开始一直专研于AndroidWear开发</p>
<blockquote>
<p><strong>摘要：</strong> 本文是Jiale Dai 在学习Google官方视频、开发者文档和实践项目之后整理出来的心得笔记，是以一个个人开发者的角度给大家带来一些侧面对Android Wear开发的看法，不同于一些传统的Android Wear技术开发教程，但是博主希望能通过自己对这些知识的整理和资源的收集，给读者带了一份详尽的、多角度的Android Wear指南。<strong>无论你是程序员，设计师，产品经理，还是手表极客 ，Android Wear用户 or 小白，都能在这篇博文中找到你想要的Android Wear元素。</strong><br>博文会同时托管到Github上，欢迎更多承载着开源精神的有心人加入，分享你对Android Wear的见解。<br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://daijiale.github.io/tags/Android/"/>
    
      <category term="AndroidWear" scheme="http://daijiale.github.io/tags/AndroidWear/"/>
    
      <category term="智能可穿戴" scheme="http://daijiale.github.io/tags/%E6%99%BA%E8%83%BD%E5%8F%AF%E7%A9%BF%E6%88%B4/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Android开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Android%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【个人】我的一点看法关于市面上流行的Git托管服务社区]]></title>
    <link href="http://daijiale.github.io/2015/04/27/%E3%80%90%E4%B8%AA%E4%BA%BA%E3%80%91%E6%88%91%E7%9A%84%E4%B8%80%E7%82%B9%E7%9C%8B%E6%B3%95%E5%85%B3%E4%BA%8E%E7%9B%AE%E5%89%8D%E5%B8%82%E9%9D%A2%E4%B8%8A%E6%B5%81%E8%A1%8C%E7%9A%84Git%E6%89%98%E7%AE%A1%E6%9C%8D%E5%8A%A1%E7%A4%BE%E5%8C%BA/"/>
    <id>http://daijiale.github.io/2015/04/27/【个人】我的一点看法关于目前市面上流行的Git托管服务社区/</id>
    <published>2015-04-27T03:39:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<p><code>git</code> 服务社区越来越多，无论是国外的还是国内的，免费公益的还是按需收费的，我们该如何选择呢？</p>
<p>这里整理了一些我自己接触过的，给大家参考一下：</p>
<a id="more"></a>
<h1 id="市面上流行的Git服务社区：">市面上流行的Git服务社区：</h1><ul>
<li>1、<code>Github</code>：不解释。</li>
<li><p>2、<code>GitLab</code>：在github上全开源，CE私有库免费，现在很多新生git社区的内核，后面提到的Git@OSC就是基于它做的。<br>两个版本 ：GitLab 社区版（CE）是可用而不下MIT许可证的任何费用。<br>GitLab企业版（EE） ，包括额外的功能，这对于拥有超过100个用户的组织最有用的。要访问的EE和支持，请成为用户。</p>
</li>
<li><p>3、<code>GitCafe</code>：私有库收费，企业版还TM未开放。。。唯一的优点可能就是国内优秀的合作伙伴（等等）比较多！</p>
</li>
<li><p>4、<code>Git@OSC</code>：每人可以1000个库，无论是私有还是公有，和Team@OSC，Sonar@OSC，PaaS@OSC可以配套使用，形成闭环，整个生态基本全部免费，专业化集成度最高！<br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogpicgitosc.PNG" alt=""></p>
</li>
<li><p>5、<code>Gogs</code>：新生力量，前段时间在好友<a href="http://blog.paincompiler.us/" target="_blank" rel="external">NastyLeoc</a>的SinaWeiBlog上看到的，基于go语言的超轻量级平台，在github上全开源，支持fork pull协作，私有库免费，听说性能也很不错，前景比较大，膜拜一下四位缔造者：<br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogpicgogs.PNG" alt=""></p>
</li>
</ul>
<ul>
<li>6、<code>Bitbucket</code>：性质和github差不多，元老级社区，但是。。。被github完虐！</li>
<li>7、<code>coding</code>：我个人最喜欢的一个协作环境，支持复用开发环境是其最大的亮点，同时也可以体验云端编程的快感，移动端的支持也很给力，目前Android和IOS的两个客户端都很稳定，码农社交圈也在慢慢扩大。自己目前正有把私有项目全都搬过去的打算(私有仓库还TM是免费的）。<a href="http://blog.coding.net/blog/why-coding-does-not-equals-github" target="_blank" rel="external">但coding绝对不是“中国的github”</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><code>git</code> 服务社区越来越多，无论是国外的还是国内的，免费公益的还是按需收费的，我们该如何选择呢？</p>
<p>这里整理了一些我自己接触过的，给大家参考一下：</p>]]>
    
    </summary>
    
      <category term="工具神器" scheme="http://daijiale.github.io/tags/%E5%B7%A5%E5%85%B7%E7%A5%9E%E5%99%A8/"/>
    
      <category term="git" scheme="http://daijiale.github.io/tags/git/"/>
    
      <category term="代码托管" scheme="http://daijiale.github.io/tags/%E4%BB%A3%E7%A0%81%E6%89%98%E7%AE%A1/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【摄影】单反自学笔记]]></title>
    <link href="http://daijiale.github.io/2015/04/26/%E3%80%90%E6%91%84%E5%BD%B1%E3%80%91%E5%8D%95%E5%8F%8D%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://daijiale.github.io/2015/04/26/【摄影】单反自学笔记/</id>
    <published>2015-04-26T13:26:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<p><strong>PS：</strong>2015年4月在<a href="http://mp.weixin.qq.com/s?__biz=MzAxMDM5MTIwMw==&amp;mid=204127766&amp;idx=1&amp;sn=7c6a4b87110f472a1ced270b6daafc10&amp;scene=5#rd" target="_blank" rel="external">胖哥（Axl、隔壁老王）</a>的唆使下，我入手了人身第一台<a href="http://baike.baidu.com/link?url=lUwpC5ksAq3Sh_zqGsNAZ4NmcxmiPul3P6SV-QXO5vdWItnvlm7GjvBreNyqoFYWoj-bbozDnDd0yU6lnqsKy7tsVn5qpNJ7BrEFqh_-k1Ml32XcaLvK0FlHUbbrL_eifzZoMYNglLhc-aX8K1XCd_" target="_blank" rel="external">单反</a>…（迈入继耳机之后的又一深坑）这篇Blog是最近学习新技能时做的笔记：</p>
<h1 id="单反自学笔记_新人篇">单反自学笔记_新人篇</h1><ul>
<li><a href="http://note.youdao.com/share/?id=48a8f388b8f5cb21ab3cd50d169a665f&amp;type=note" target="_blank" rel="external">新人第一课：井字构图法</a></li>
<li><a href="http://note.youdao.com/share/?id=a6ec10c8127835dc4bd08ab923c7708f&amp;type=note" target="_blank" rel="external">新人第二课：如何把照片拍得更为清晰</a></li>
</ul>
<a id="more"></a>
<h1 id="我的相机">我的相机</h1><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/小枫摄影danfan2.jpg" alt=""></p>
<p> <img src="http://7xi6qz.com1.z0.glb.clouddn.com/小枫摄影danfan1.jpg" alt=""></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里简单介绍下我的第一款相机：</p>
<ul>
<li><a href="http://baike.baidu.com/link?url=8wdswo_z6JsR1FqR-6-FWvETzJBPEZKDB4aZGss_ZDonkqxxdMAB-wfLZgpAbdwJBzuV-pR9TuC-CZ3nsF2QTa" target="_blank" rel="external">机身：Canon EOS 700D</a></li>
<li><a href="http://lens.zol.com.cn/316/3166968.html" target="_blank" rel="external">镜头：24-105-F4</a></li>
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其实对于入门级小白来讲，这个机身还是挺适合的，不过镜头……呵呵，胖哥直接带我上了<strong>红圈</strong>（他说一步到位，5年之内不用换了），大出血了一回，在朋友圈里也是被骂惨了。不过拍出来的照片真的很逆天，回头会持续更新我自己的实战使用心得…</p>
<h1 id="作品集">作品集</h1><p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/小枫摄影小枫摄影_xs1.jpg" alt=""></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>持续更新中</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>PS：</strong>2015年4月在<a href="http://mp.weixin.qq.com/s?__biz=MzAxMDM5MTIwMw==&amp;mid=204127766&amp;idx=1&amp;sn=7c6a4b87110f472a1ced270b6daafc10&amp;scene=5#rd">胖哥（Axl、隔壁老王）</a>的唆使下，我入手了人身第一台<a href="http://baike.baidu.com/link?url=lUwpC5ksAq3Sh_zqGsNAZ4NmcxmiPul3P6SV-QXO5vdWItnvlm7GjvBreNyqoFYWoj-bbozDnDd0yU6lnqsKy7tsVn5qpNJ7BrEFqh_-k1Ml32XcaLvK0FlHUbbrL_eifzZoMYNglLhc-aX8K1XCd_">单反</a>…（迈入继耳机之后的又一深坑）这篇Blog是最近学习新技能时做的笔记：</p>
<h1 id="单反自学笔记_新人篇">单反自学笔记_新人篇</h1><ul>
<li><a href="http://note.youdao.com/share/?id=48a8f388b8f5cb21ab3cd50d169a665f&amp;type=note">新人第一课：井字构图法</a></li>
<li><a href="http://note.youdao.com/share/?id=a6ec10c8127835dc4bd08ab923c7708f&amp;type=note">新人第二课：如何把照片拍得更为清晰</a></li>
</ul>]]>
    
    </summary>
    
      <category term="个人故事" scheme="http://daijiale.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%95%85%E4%BA%8B/"/>
    
      <category term="拍照摄影" scheme="http://daijiale.github.io/tags/%E6%8B%8D%E7%85%A7%E6%91%84%E5%BD%B1/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="单反自学笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/%E5%8D%95%E5%8F%8D%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Hackathon】百度第十二届Hackathon Coding Party小记]]></title>
    <link href="http://daijiale.github.io/2015/04/15/%E3%80%90Hackathon%E3%80%91%E7%99%BE%E5%BA%A6%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%B1%8AHackathon%20Coding%20Party%E5%B0%8F%E8%AE%B0/"/>
    <id>http://daijiale.github.io/2015/04/15/【Hackathon】百度第十二届Hackathon Coding Party小记/</id>
    <published>2015-04-15T12:23:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>时间：2015.4.11-2015.4.14</p>
<p>地点：北京 百度大厦</p>
<p>Team Name: Action</p>
<p>团队人员：小枫，Axl胖哥，解鑫，王彬杨峰，潘灿，Eclipse，韶华无根</p>
<p>What’s happened? : Do it , Be Cool, Have Fun !</p>
</blockquote>
<h1 id="题记">题记</h1><p>有幸在<code>大三实习期间</code>赶上了<code>百度的第十二届黑客马拉松</code>，“与直达号相关的移动o2o”为主题，和众多百度大牛们同台竞技，虽然结果soso，但是享受了过程，结交了很多好友，收获很多，特此撰写Blog一篇，以资鼓励自己！<br><a id="more"></a></p>
<h1 id="正文">正文</h1><p>这是一个难忘的一天，连续20个小时的头脑风暴+极速编程，从早上9点到第二天凌晨4点。这之间的酸爽，真得是谁用谁知道了！<br>        被胖哥从睡梦中拉起来，意识清醒后已经是9点了（平常上班都是9点半起，何况那天才是周末）。打了个专车，来到百度大厦的五福（爱斯基摩人堡），和其他队友见面，阵容还是挺豪华的：4位RD+2位PM（兼职UE）。简单确定分工和需求强度之后，直接开干，咱们的Idea还是挺不错的—— <code>“基于百度地图的问答社区”</code>，下面简单介绍下：</p>
<ul>
<li><p><strong>简介：</strong>创意要解决的问题: 解决地图用户基于LBS的知识获取需求。 创意的亮点/创新点:基于地图用户，使用UGC的模式解决用户在出行以及O2O中遇到的各种问题。</p>
</li>
<li><p><strong>创意背景：</strong>地图用户在使用地图时，在陌生的地点总会遇到各种需求，而这些LBS的需求有些是我们现有搜索无法很好的满足的，例如最后一公里等问题，我们生活中最常见的方式I就是向周围熟悉的人问问题，从而解决自己的疑惑。本创意主要是想基于地图用户的UGC方式来解决这种需求的满足。</p>
<ul>
<li><p><strong>解决方案：</strong></p>
<ul>
<li>1 用户在进入地图后，搜索具体的POI点进入详情页，详情页提供提问入口，用户可以使用该入口语音或文字输入方式提出问题；</li>
<li>2 问题提出后会及时根据问题类型以及距离远近扩散给周围的地图用户或者知道用户、贴吧用户，使得地图用户的问题能够及时得到答案，满足用户的需求。</li>
</ul>
</li>
<li><p><strong>预期效果：</strong>基于该创意，如果地图用户可以在问题提出后得到很好的答案，地图用户会形成基于LBS的问答社区，一方面使得我们产生一种有别于大众点评的UGC生态数据，另一方面可以使得地图用户对于我们地图详情页更加依赖，增强用户的粘性，最终使得用户由“出门就查百度地图”的习惯进一步延伸为“出门就查百度地图，有问题就问百度地图”。        </p>
</li>
</ul>
<p>个人刚接到P5解鑫的需求时的感觉的是：很适合hackathon的题目，符合连接人与服务的特性，2天差不多就可以技术落地，创新性很强。。。（当然我也没想到最后砍需求砍得只把TA做成了一个<code>基于百度地图的对讲机。</code>）<br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/baiduhackathondefault.jpeg" alt=""><br><strong>我们的分工：</strong></p>
<ul>
<li><code>我和王彬（T4）</code>主要负责<code>Android端</code>和<code>Server端</code>的<code>通信模块</code>，即<code>语音文件的上传与下发</code>，<code>Question和Answer的分类识别</code>，和<code>回答事件锁</code>的实现。</li>
<li><code>胖哥</code>负责<code>地图LBS的Question</code>和<code>Answer的TAG扩散效果</code>和<code>Android端UI</code>模块。</li>
<li>还有两位<code>北大的研究生</code>负责<code>用户语音的获取</code>，<code>语音文件SD Card存放</code>和<code>TAG绑定语音文件</code>的模块。</li>
<li>至于几位PM就很好分工了：倒饮料，递零食，PPT，砍需求（全都写死）。。。<br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/baiduhackathondefault2.jpeg" alt=""><br>在当天下午，我就和胖哥他们LBS基础业务部的小伙伴们迅速打成一片（毕竟码农和程序猿之间对话永远那么简单），还认识了UESTC的一位电工学长（另外一组Hackathon），因为我对大厦旁边比较熟，就请大家在辉煌国际一起吃了餐湖南菜（虽然钱不是我付的）。之后，我们便进入了此次hackathon的高潮——CodingNight：<br>离开五福后，我们在百度大厦找了个高大上的会议室，CodingNight Start…….我已经不记得踩过多少的坑和写死过多少次Bug。。。总之直到晚饭后，我的模块才正式完成，瞅了一眼胖哥，扩散效果不错，但是和<code>事件锁功能</code>爆发出无限Bug和Crash，只能在一旁为他默哀了。之后优化了下程序，刚好对面的北大研究生也完成了他的模块，于是我俩开始了蛋疼的合代码过程……</li>
</ul>
</li>
</ul>
<p>午夜12点：外面开始下暴雨，可我们还点了麦当劳外卖（有点为难送餐小哥了）。。。代码整合完成，测试良好，我和北大研究生们终于解脱了，一身轻松。胖哥任务最艰巨了，主程序在他那，最后打整合也得在他那完成。。。所以稍作休息后，我们一起凑过去给他看代码。。。<br><img src="http://7xi6qz.com1.z0.glb.clouddn.com/baiduhackathondefault1.jpeg" alt=""><br>凌晨2点：我撑不住了，找了间大厦的员工休息室睡觉去了（同时还发现休息室里，还真有在公司过夜的。。。）</p>
<p>凌晨4点：楼上一阵欢呼，我被胖哥电话惊醒。。。睡眼朦胧的我被告知App成型，Bug全部Fix（我估计又是写死了），终于。。。我们在22小时之内做出了一款<code>基于百度地图的对讲机</code> 。。。（求亲喷）</p>
<p>PS：上图和App下载链接：</p>
<p><img src="" alt=""></p>
<p>凌晨5点：自豪的宣布：“我见过凌晨5点的百度之后”，和胖哥和UESTC学长一起打了辆专车，回家，倒头就睡。。。</p>
<p> <img src="http://7xi6qz.com1.z0.glb.clouddn.com/baiduhackathondefault3.jpeg" alt=""></p>
<h1 id="文尾">文尾</h1><p>最终的现场展示没能去成（实在太累，在家补觉），有点可惜，但是我们的作品还是得到了Robin（李彦宏）和Estaff们的很多好评和建议。在高手纷纭的决赛中，我们遗憾无缘黑马奖，但通过1天的hackathon，我们<code>Do it , Be Cool, and Have Fun !</code>,我想，这，就足够了！</p>
<p>PS：Hackathon这种竞赛模式对开发者的要求更高，可以很好的考量极速编程能力和团队协作能力，比以前我拿过奖的很多校园型开发者大赛更具挑战性，以后我会参加更多的hackathon，落地更多极具创意的思维，享受自己成长的过程，期待志同道合的朋友Join me！</p>
<embed src="http://music.163.com/style/swf/widget.swf?sid=28949412&type=2&auto=1&width=320&height=66" width="340" height="86" allownetworking="all">]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>时间：2015.4.11-2015.4.14</p>
<p>地点：北京 百度大厦</p>
<p>Team Name: Action</p>
<p>团队人员：小枫，Axl胖哥，解鑫，王彬杨峰，潘灿，Eclipse，韶华无根</p>
<p>What’s happened? : Do it , Be Cool, Have Fun !</p>
</blockquote>
<h1 id="题记">题记</h1><p>有幸在<code>大三实习期间</code>赶上了<code>百度的第十二届黑客马拉松</code>，“与直达号相关的移动o2o”为主题，和众多百度大牛们同台竞技，虽然结果soso，但是享受了过程，结交了很多好友，收获很多，特此撰写Blog一篇，以资鼓励自己！<br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://daijiale.github.io/tags/Android/"/>
    
      <category term="Hackathon" scheme="http://daijiale.github.io/tags/Hackathon/"/>
    
      <category term="个人故事" scheme="http://daijiale.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%95%85%E4%BA%8B/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Android开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Android%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【前端】AjaxReview]]></title>
    <link href="http://daijiale.github.io/2015/04/09/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91AjaxReview/"/>
    <id>http://daijiale.github.io/2015/04/09/【前端】AjaxReview/</id>
    <published>2015-04-09T10:30:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<p><strong>PS：</strong>写这篇Blog主要有两个三个动机：</p>
<ul>
<li>对以前自己所学知识的一个系统化review</li>
<li>刚好给徒弟漫漫制作一份比较全面的Ajax教程</li>
<li>帮助更多的，对此知识有需要的童鞋<a id="more"></a>
</li>
</ul>
<p><embed src="http://music.163.com/style/swf/widget.swf?sid=29561077&type=2&auto=1&width=320&height=66" width="340" height="86" allownetworking="all"></p>
<h1 id="概念介绍">概念介绍</h1><p>   在介绍<code>Ajax</code>的概念之前，我觉得有必要先说明一下<strong>“同步”和“异步”</strong>的问题：</p>
<h2 id="同步：">同步：</h2><p>举个例子——“在以前，我们填写100个字段的网页表单(需要联系人，密码，姓名，用户名等等)最后，我们点击提交，结果发现等了5分钟，服务器告诉你邮箱字段填写错误，然后很自然的提交失败，打回重新写过…”（来回三次以上我估计你差不多就疯了）</p>
<p>这就是一个<strong>同步流程</strong>：</p>
<blockquote>
<p><strong>p1-pn:客户端浏览器请求-&gt;等待服务器端处理-&gt;之后响应-&gt;页面才能载入更新状态</strong></p>
</blockquote>
<p>无疑这种机制对于现实来说很扯蛋。所以有了下面的<strong>异步机制</strong>。</p>
<h2 id="异步：">异步：</h2><p>还是上面的例子：在填写表单的过程中，每填写一个字段就同时像服务器提交一次请求，在你编辑其他内容的同时，也会同步你的请求，随时得到服务器端反馈的结果，可以实时保存你填写的字段内容，也可以及时得到填写错误的反馈。</p>
<p><strong>异步流程：</strong></p>
<blockquote>
<p><strong>p1:客户端-&gt;请求-&gt;服务端处理-&gt;响应-&gt;页面载入</strong></p>
<p><strong>p2:客户端-&gt;请求-&gt;服务端处理-&gt;响应-&gt;页面载入</strong></p>
<p><strong>p3:客户端-&gt;请求-&gt;服务端处理-&gt;响应-&gt;页面载入</strong></p>
<p><strong>……</strong></p>
<p><strong>pn:客户端-&gt;请求-&gt;服务端处理-&gt;响应-&gt;页面载入</strong></p>
</blockquote>
<p>这种异步方式起源于<code>XMLHttpRequest</code>对象的诞生，具体信息请戳链接<a href="http://baike.baidu.com/link?url=URNRyvoOrqtF_qSUI2iiYgpkhs2_N5aFFwjdRnwJ9ReioxiBvdkERVP3Uvb6QXYziaSHv28GLklZ0VXolav0J_" target="_blank" rel="external">百度百科——XMLHTTPRequest</a>，这里就不重点介绍了…</p>
<h2 id="Ajax的概念：">Ajax的概念：</h2><p>即<strong>Asyn-Javascript-XML</strong>，通过在后台与服务器进行少量数据交换，这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。（即实现异步机制）</p>
<h1 id="Ajax学习前需要具备的基础">Ajax学习前需要具备的基础</h1><ul>
<li>运用HTML和CSS来实现页面，表达信息</li>
<li>运用XMLHttpRequest和Web服务器进行数据的异步交互</li>
<li>运用JS操作DOM，实现动态局部刷新</li>
</ul>
<p><strong>PS</strong>：（这些都不会就可以不用往下看了）</p>
<h1 id="XHR的使用">XHR的使用</h1><p>首先声明XHR对象</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var request = new XMLHttpRequest//不支持IE5 IE6</span><br></pre></td></tr></table></figure>
<p><code>珍爱生命，远离IE</code>（虽然嘴上是这样说）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var request;</span><br><span class="line">if（windowXMLHttpRequest）&#123;</span><br><span class="line"> 	request = new XMLHttpRequest();//IE7+;Firefox;Chrome,Opera,Safari...</span><br><span class="line">	&#125; else &#123;</span><br><span class="line">		request=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);//IE5,IE6</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="这里再简单介绍下HTTP：">这里再简单介绍下HTTP：</h2><p>其实就是一群 <code>叫兽</code> 研究出来的一套计算机通信规则。</p>
<p>它的特点需要我们注意：</p>
<ul>
<li>不建立持久连接，</li>
<li>无状态，</li>
<li>不稳定，</li>
<li>无记忆</li>
</ul>
<p>因此，我们一般都只用 <code>http</code> 来充当 <code>请求</code> 操作，通过 <code>TCP</code> 连接来建立持久化的网络通信。</p>
<p><strong>一个完整的HTTP请求过程7步骤</strong>：</p>
<ul>
<li>1.建立 <code>TCP</code> 连接</li>
<li>2.Web浏览器向服务器发送 <code>请求</code> 命令</li>
<li>3.Web浏览器发送请求头信息</li>
<li>4.Web浏览器应答</li>
<li>5.Web服务器发送应答头信息</li>
<li>6.Web服务器向浏览器发送数据</li>
<li>7.Web服务器关闭 <code>TCP</code> 连接</li>
</ul>
<p><strong>HTTP请求结构</strong>：</p>
<ul>
<li>1.HTTP请求的动作：<code>GET</code> or <code>POST</code> <ul>
<li><code>GET</code><ul>
<li>一般用于信息获取</li>
<li>使用URL传递参数</li>
<li>对所发信息的数量有限制（2000个字符左右）</li>
</ul>
</li>
<li><code>POST</code><ul>
<li>一般用于修改服务器上的资源。</li>
<li>对所发信息的数量无限制</li>
</ul>
</li>
</ul>
</li>
<li>2.正在请求的 <code>URL</code> ，总得知道请求地址吧</li>
<li>3.请求头，包含一些客户端环境信息，身份验证信息等</li>
<li>4.请求体，也就是请求正文，可以包含客户提交的查询字符串信息，表单信息等等</li>
</ul>
<p><strong>HTTP响应组成</strong>：</p>
<ul>
<li>1.一个<strong>数字和文字</strong>组成的<strong>状态码</strong>，用来显示成功还是失败<ul>
<li>状态码：<ul>
<li>1xx：信息类，表示收到web浏览器请求，正在进一步处理中</li>
<li>2xx：成功，200 ok</li>
<li>3xx：重定向，表示请求没有成功，客户必须采取进一步动作</li>
<li>4xx：客户端错误，表示客户端提交的请求有错误，如 404 Not Found</li>
<li>5xx：服务器错误，不能完成对请求的处理，如 500</li>
</ul>
</li>
</ul>
</li>
<li>2.响应头，包含服务器类型，日期时间，内容类型和长度等</li>
<li>3.响应体，也就是响应正文</li>
</ul>
<h2 id="XHR发送请求">XHR发送请求</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">request.open(method,url,async);</span><br><span class="line">request.send(string);</span><br></pre></td></tr></table></figure>
<p><strong>eg:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">request.open(&quot;POST&quot;,&quot;127.0.0.1/post.php&quot;,true);</span><br><span class="line">request.setRequestHeader(&quot;Content-type&quot;,&quot;application/x-www-form-urlencoded&quot;);</span><br><span class="line">request.send(&quot;name=daijiale&amp;sex=man&quot;);</span><br></pre></td></tr></table></figure></p>
<h2 id="XHR取得响应">XHR取得响应</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">responseText//获得字符串形式的响应数据</span><br><span class="line">responseXML//获得XML形式的响应数据</span><br><span class="line">status//以数字形式返回HTTP状态码</span><br><span class="line">statusText//以文本形式返回HTTP状态码</span><br><span class="line">getALLResponseHeader()//获取所有响应报头</span><br><span class="line">getResponseHeader()//查询响应中的某个字段的值</span><br></pre></td></tr></table></figure>
<p>这里重点需要关注下 <code>readyState</code> 属性</p>
<ul>
<li>0：请求未初始化，open还没有调用</li>
<li>1：服务器连接已建立，open已经调用</li>
<li>2：请求已接受，也就是收到了头信息</li>
<li>3：请求处理中，也就是接收到响应主体了</li>
<li>4：请求已完成，且响应已就绪，也就是响应完成了</li>
</ul>
<p>因此，通过监听此属性的值，可以得到对应响应结果。方法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var request = new XMLHttpRequest();</span><br><span class="line">request.open(&quot;GET&quot;,&quot;127.0.0.1/get.php&quot;,true);</span><br><span class="line">request.send();</span><br><span class="line">request.onreadystatechange = function()&#123;</span><br><span class="line">if(request.readyState===4 &amp;&amp; request.status===200）｛</span><br><span class="line">//do some thing here </span><br><span class="line">//request.responseText</span><br><span class="line">	&#125;</span><br><span class="line">｝</span><br></pre></td></tr></table></figure></p>
<h1 id="Ajax_Demo">Ajax Demo</h1><ul>
<li><a href="http://www.w3school.com.cn/tiy/t.asp?f=ajax_httprequest_js" target="_blank" rel="external">Ajax加载XML</a></li>
<li><a href="http://www.w3school.com.cn/ajax/ajax_example_suggest.asp" target="_blank" rel="external">Ajax实现Web通信 </a></li>
<li><a href="http://www.w3school.com.cn/tiy/t.asp?f=ajax_httprequest_js_4" target="_blank" rel="external">Ajax加载html表格元素</a></li>
<li><a href="http://www.w3school.com.cn/php/php_ajax_database.asp" target="_blank" rel="external">PHP-MySQL使用Ajax进行数据交互</a></li>
</ul>
<h1 id="JQuery_Ajax">JQuery Ajax</h1><p>很多初学者，很容易把这 <code>Jquery Ajax</code> 和 <code>Ajax</code>搞混，这里单独给大家区分一下。<br>首先，我们先了解下: </p>
<h2 id="JQuery_和_ajax_的关系：">JQuery 和 ajax 的关系：</h2><ul>
<li><code>jQuery</code> 提供多个与 <code>AJAX</code> 有关的方法。</li>
<li>通过 <code>jQuery AJAX</code> 方法，您能够使用 <code>HTTP Get</code> 和 <code>HTTP Post</code> 从远程服务器上请求 <code>文本</code>、<code>HTML</code>、<code>XML</code> 或 <code>JSON</code></li>
<li>同时能够把这些外部数据直接载入网页的被选元素中。</li>
<li>如果没有 <code>jQuery</code>，<code>AJAX</code> 编程还是有些难度的。</li>
<li>编写常规的 <code>AJAX</code> 代码并不容易，因为不同的浏览器对 <code>AJAX</code> 的实现并不相同。这意味着您必须编写额外的代码对浏览器进行测试。不过，<code>jQuery 团队</code>为我们解决了这个难题，我们只需要一行简单的代码，就可以实现 <code>AJAX</code> 功能。</li>
<li><strong>综上： <code>jQuery</code> 对 <code>Ajax</code> 进行了又一次的封装，使得其主体功能用起来更为方便，简单，现在大部分开发者都很少直接用js写原生ajax，都是引入了jquery ajax方法。但是由于依赖于<code>jQuery</code>，导致不灵活，有其局限性。</strong></li>
</ul>
<h2 id="JQuery_Ajax的使用方法">JQuery Ajax的使用方法</h2><p>基本语法格式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;#button_name&quot;).click(function()&#123;</span><br><span class="line">   $.ajax(&#123;</span><br><span class="line">		type:&quot;POST&quot;,</span><br><span class="line">		url:&quot;127.0.0.1/get.php&quot;,</span><br><span class="line">        data:&#123;</span><br><span class="line">		    name:$(&quot;#staffname&quot;).val(),</span><br><span class="line">			password:$(&quot;#staffpassword&quot;).val(),</span><br><span class="line">		&#125;,</span><br><span class="line">        dataType:&quot;json&quot;,</span><br><span class="line">		success:function(data)&#123;</span><br><span class="line">			if(data.success)&#123;</span><br><span class="line">				$(&quot;#button_click_result&quot;).html(data.msg);</span><br><span class="line">				&#125;else&#123;</span><br><span class="line">				$(&quot;#button_click_result&quot;).html(&quot;error&quot;+data.msg);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">		error:function(jqXHR)&#123;</span><br><span class="line">			alert(&quot;error：&quot;+jqXHR.status);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>jQuery load()//简单而强大</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).load(URL,data,callback);</span><br></pre></td></tr></table></figure>
<p>load()方法直接从服务器加载数据，并把返回的数据放入被选元素中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script src=&quot;/jquery/jquery-1.11.1.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;button&quot;).click(function()&#123;</span><br><span class="line">$(&quot;#div1&quot;).load(&quot;/example/jquery/demo_test.txt&quot;,function(responseTxt,statusTxt,xhr)&#123;</span><br><span class="line">  if(statusTxt==&quot;success&quot;)</span><br><span class="line">alert(&quot;外部内容加载成功！&quot;);</span><br><span class="line">  if(statusTxt==&quot;error&quot;)</span><br><span class="line">alert(&quot;Error: &quot;+xhr.status+&quot;: &quot;+xhr.statusText);</span><br><span class="line">&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;div1&quot;&gt;&lt;h2&gt;使用 jQuery AJAX 来改变文本&lt;/h2&gt;&lt;/div&gt;</span><br><span class="line">&lt;button&gt;获得外部内容&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>本例<a href="http://www.w3school.com.cn/tiy/t.asp?f=jquery_ajax_load_callback" target="_blank" rel="external">Demo效果</a></p>
<p>更多请参见 <a href="http://www.w3school.com.cn/jquery/jquery_ref_ajax.asp" target="_blank" rel="external">jQuery Ajax操作函数表</a></p>
<h1 id="JSON">JSON</h1><p> 这里补充一下这个知识，和xml一样，经常在ajax数据传输中用到，没什么难的，看看就会了：</p>
<ul>
<li>概念：javascript对象表示法</li>
<li>JSON是存储和交换文本信息的语法，类似XML。采用键值对的方式来组织，易于人们阅读和编写，同时也易于机器解析和生成。</li>
<li>JSON是独立于语言的，也就是说不管什么语言，都可以解析json，只需要按照json的规则来就行。</li>
</ul>
<h2 id="与XML进行对比：">与XML进行对比：</h2><ul>
<li>json的长度和xml格式比起来很短小</li>
<li>json读写的速度更快</li>
<li>json可以使用JavaScript内建的方法直接进行解析，转换成Javascript对象，非常方便。</li>
</ul>
<h2 id="JSON数据格式和Serialize数据格式的异同和使用">JSON数据格式和Serialize数据格式的异同和使用</h2><h3 id="相同点">相同点</h3><ul>
<li>都是把其他数据类型转换成一个可以传输的字符串</li>
<li>都是结构性数据</li>
</ul>
<h3 id="不同点">不同点</h3><ul>
<li><code>Serialize</code>序列化后的数据格式保存数据原有类型</li>
<li>JSON数据格式要简洁相比<code>Serialize</code>序列化之后的数据格式</li>
</ul>
<h3 id="使用场景">使用场景</h3><ul>
<li>JSON适合数据量大，不要求保留原有数据类型的情况下使用</li>
<li><code>Serialize</code>适合存储带有加密方式的数据串，防止数据被中途窃取反序列化破解</li>
</ul>
<h2 id="书写类型：">书写类型：</h2><p><strong>eg：</strong>“name”:”戴嘉乐”</p>
<h2 id="JSON解析：">JSON解析：</h2><p>不要使用 <code>eval</code> 来解析，<code>eval</code>会解析内置函数，造成安全隐患.尽量用 <code>JSON.parse</code>.</p>
<h2 id="JSON校验工具：">JSON校验工具：</h2><ul>
<li><a href="http://jsonlint.com/" target="_blank" rel="external">JSONLint</a></li>
</ul>
<p> <code>json</code> 更多教材：<a href="http://www.w3school.com.cn/json/" target="_blank" rel="external">传送门</a></p>
<h1 id="跨域问题">跨域问题</h1><p>之前在长虹实习的时候，和海阳遇到了这样的问题，这里也拎出来提一下。</p>
<h2 id="什么是跨域？">什么是跨域？</h2><ul>
<li>一个域名地址的组成：<ul>
<li><code>http://</code> 协议</li>
<li><code>www.</code> 子域名</li>
<li><code>abc.com</code> 主域名</li>
<li><code>:8080</code> 端口号</li>
<li><code>script/jquery.js</code> 请求资源地址</li>
</ul>
</li>
<li>当协议、子域名、主域名、端口号中任意一个不相同时，都算作不同域。</li>
<li>不同域之间相互请求资源，就算做<strong>“跨域”</strong><ul>
<li>eg：<a href="http://www.daijiale.cn/index.html请求http://daijiale.github.io/service.php" target="_blank" rel="external">http://www.daijiale.cn/index.html请求http://daijiale.github.io/service.php</a></li>
</ul>
</li>
</ul>
<p><strong>PS:</strong></p>
<p>Javascript处出去安全方面的考虑，不允许跨域调用其他页面的对象（这不废话，肯定不允许啊）</p>
<p>所以很多新手在本机调试程序的时候容易乱写 <code>127.0.0.1</code> 和 <code>localhost:8080</code> ，这也算作跨域</p>
<p>协议不同（<code>http</code> 和  <code>https</code> 也算作跨域)</p>
<h2 id="处理跨越访问的方法">处理跨越访问的方法</h2><h3 id="一、代理">一、代理</h3><ul>
<li>通过在同域名的web服务器端创建一个代理：</li>
<li>北京服务器www.beijing.com 上海服务器www.shanghai.com</li>
<li>通过北京web服务器后台（www.beijing.com/proxy-shanghaiservice.php)来调用上海服务器（www.shanghai.com/service.php)的服务，然后再把响应结果返回给前端，这样前端调用北京同域名的服务就和调用上海的服务效果相同了。</li>
</ul>
<h3 id="二、JSONP">二、JSONP</h3><p><code>JSONP</code> 可用于解决<strong>主流</strong>浏览器的跨域数据访问的问题。</p>
<p><strong>eg：</strong></p>
<p>在www.aaa.com页面中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">function jsonp(json)&#123;</span><br><span class="line"></span><br><span class="line">	alert(json[&quot;name&quot;]):</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;http://www.bbb.com/jsonp.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>在www.bbb.com页面中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jsonp(&#123;&apos;name&apos;:&apos;洪七&apos;,&apos;age&apos;:24&#125;);</span><br></pre></td></tr></table></figure>
<p>JSONP只支持 <code>GET</code> 请求，存在局限性：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;#button_name&quot;).click(function()&#123;</span><br><span class="line">   $.ajax(&#123;</span><br><span class="line">		type:&quot;GET&quot;,//JSONP只支持GET,存在局限性</span><br><span class="line">		url:&quot;127.0.0.1/get.php&quot;,</span><br><span class="line">        dataType:&quot;jsonp&quot;,//主要修改这</span><br><span class="line">		jsonp:&quot;callback&quot;,//前端脚本语言需要新建变量对象来获取名为“callback”的jsonp</span><br><span class="line">		success:function(data)&#123;</span><br><span class="line">			if(data.success)&#123;</span><br><span class="line">				$(&quot;#button_click_result&quot;).html(data.msg);</span><br><span class="line">				&#125;else&#123;</span><br><span class="line">				$(&quot;#button_click_result&quot;).html(&quot;error&quot;+data.msg);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">		error:function(jqXHR)&#123;</span><br><span class="line">			alert(&quot;error：&quot;+jqXHR.status);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="三、XHR2">三、XHR2</h3><ul>
<li>html5提供的XMLHttpRequest Level2 已经实现了跨域访问以及其他的一些新功能</li>
<li>IE10以下版本不支持</li>
<li>在服务器端做一些小小的改造即可：<ul>
<li>header(‘Access-Control-Allow-Origin:*’);</li>
<li>header(‘Access-Control-Allow-Methods:POST,GET’);</li>
</ul>
</li>
</ul>
<p>还是那句话 <code>珍爱生命，远离IE</code>，强烈推荐第三种方法解决跨域，低成本。</p>
<h1 id="反向Ajax技术">反向Ajax技术</h1><p>关于 <code>Reverse Ajax</code> 我会单独另起一篇博文对该技术进行介绍，之前在自己的“Web远程控制系统”中用到了该技术，觉得很有必要提及一下：<br><a href="">传送门正在更新中</a></p>
<h1 id="总结">总结</h1><p>Ajax在web前端开发中的地位不言而喻，高频的使用率以及其不可替代的定位是每个前端工程师都无法质疑的。现在，类似于Jquery Ajax的快速开发框架也层出不穷，对于我们来说无疑是福音，但是理解其内涵和工作原理，我们才能在以后的实践项目中应用得当。下面是一些Ajax的常用场景：</p>
<h3 id="场景1-_用Ajax进行数据验证">场景1. 用Ajax进行数据验证</h3><p>在填写表单内容时，需要保证数据的唯一性（例如新用户注册填写的用户名），因此必须对用户输入的内容进行数据验证。</p>
<p>数据验证通常有两种方式：</p>
<p>一种是直接填写，然后提交表单，这种方式需要将这个页面提交到服务器端进行验证，整个过程不仅时间长而且造成了服务器不必要的负担；</p>
<p>第二种方式是改进了的验证过程，用户可以通过点击相应的验证按钮，打开新窗口查看验证结果，但是这样需要新开一个浏览器窗口或者对话框，还需要专门编写验证的页面，比较耗费系统资源。</p>
<p>而使用Ajax技术，可以由XMLHttpRequest对象发出验证请求，根据返回的HTTP响应判断验证是否成功，整个过程不需要弹出新窗口，也不需要将整个页面提交到服务器，快速而又不加重服务器负担。</p>
<h3 id="场景2-按需取数据">场景2.按需取数据</h3><p>分类树或者树形结构在web应用系统中使用得非常广泛，例如部门结构，文档得分类结构常常使用树形空间呈现。</p>
<p>以前每次对分类树得操作都会引起页面重载，为了避免这种情况出现，一般不采用每次调用后台得方式，而是一次性将分类结果中得数据一次性读取出来并写入数组，然后根据用户的操作，用JavaScript来控制节点的呈现，这样虽然解决了操作响应速度，不重复载入页面以及避免向服务器频繁发送请求的问题，但是如果用户不对分类进行操作或者只对分类树中的一部分数据进行操作的话（这种情况很普遍的），那么读取的数据中就会有相当大的冗余，浪费了用户的资源。特别是在分类结构复杂，数据庞大的情况下，这种弊端就更加明显了。</p>
<p>现在应用Ajax改进分类树的实现机制。在初始化页面时，只获取第一级子分类的数据并且显示；当用户点开一级分类的第一节点时，页面会通过Ajax向服务器请求当前分类所属的二级子分类的所有数据；如果再请求已经呈现的二级分类的某一节点时，再次向服务器请求当前分类所属的三级子分类的所有数据，以此类推。页面会根据用户的操作向服务器请求它所需要的数据，这样就不会存在数据的冗余，减少了数据下载总量。同时，更新页面时不需要重载所有内容，只更新需要更新的那部分内容即可，相对于以前后台处理并且重载的方式，大大缩短了用户的等待时间。</p>
<h3 id="场景3-自动更新页面">场景3.自动更新页面</h3><p>在web应用中有很多数据的变化时十分迅速的，例如最新的热点新闻，天气预报以及聊天室内容等。在Ajax出现之前，用户为了即使了解相应的内容必须不断刷新页面，查看是否有新的内容变化，或者页面本身实现定时刷新的功能（大多数聊天室页面就是这样做的）。</p>
<p>有可能会发生这种情况；有一段时间网页的内容没有发生任何变化，但是用户并不知道，仍然不断的刷新页面；或者用户失去了耐心，放弃了刷新页面，却很有可能在此有新的消息出现，这样就错过了第一时间得到消息的机会。</p>
<p>应用Ajax可以改善这种这种情况，页面加载以后，会通过Ajax引擎在后台进行定时的轮询，向服务器发送请求，查看是否有最新的消息。如果有则将新的数据（而不是所有数据）下载并且在页面上进行动态的更新，通过一定的方式通知用户（实现这样的功能正是JavaScript的强项）。</p>
<p>这样即避免了用户不断手工刷新页面的不便，也不会因为重复刷新页面造成资源浪费。</p>
<p>既然你己经对Ajax产生了兴趣，还要知道重要的一点，即什么时候应该使用Ajax技术，而什么时候不该用。首先，不要害怕在应用中尝试新的方法。我们相信.几乎每个web应用都能从Ajax技术中获益，只不过不要矫杠过正，过于离谱就行了。从验证开始就很合适，但是不要限制你的主动性。你当然可以使用Ajax提交数据，但也许不能把它作为提交数据的主要方法。</p>
<p>其次，惟一会影响你应用Ajax的就是浏览器问题。如果大量用户(或者特别重要的用户)还在使用比较旧的浏览器，如IE 5 , Safari 1.2或Mozilla 1.0之前的版本，Ajax技术就不能奏效。如果这是一些很重要的用户，你就要使用针对目标用户的跨浏览器的方法，而放弃Ajax，或者开发一个可以妥善降级的网站。浏览器支持可能不是一个重要因素，因为netscape Navigaxar 4在市场上的份额很小。不过，还是应该查看Web日志，看看你的应用适用什么技术。</p>
<p>如前所述，验证和表单填写就非常适合采用Ajax实现。还可以使用DOM的“拖”技术建立真正动态的网站，如google的个性化主页.</p>
<p>可以看到，Ajax为Web应用开发提供了新的机会。你不会再因为以往的专用技术或技术折中方案而受到妨碍。利用Ajax，胖客户与瘦客户之间的界限不再分明，真正的赢家则是你的用户。</p>
<blockquote>
<p>更多Ajax与PHP与json跨域交互的Demo源码，请参考我的github项目:<a href="https://github.com/daijiale/DaiJiale-Front-End/tree/master/ajax_demo" target="_blank" rel="external">DaiJiale’s Ajax Demo</a></p>
<p>原创博文</p>
<p>作者：戴嘉乐 </p>
<p>转载请注明出处，谢谢！</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>PS：</strong>写这篇Blog主要有两个三个动机：</p>
<ul>
<li>对以前自己所学知识的一个系统化review</li>
<li>刚好给徒弟漫漫制作一份比较全面的Ajax教程</li>
<li>帮助更多的，对此知识有需要的童鞋]]>
    
    </summary>
    
      <category term="Javascript" scheme="http://daijiale.github.io/tags/Javascript/"/>
    
      <category term="Ajax" scheme="http://daijiale.github.io/tags/Ajax/"/>
    
      <category term="Json" scheme="http://daijiale.github.io/tags/Json/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="Web开发笔记" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/Web%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【个人】记我的高中——南昌二中]]></title>
    <link href="http://daijiale.github.io/2015/04/03/%E3%80%90%E4%B8%AA%E4%BA%BA%E3%80%91%E8%AE%B0%E5%8D%97%E6%98%8C%E4%BA%8C%E4%B8%AD/"/>
    <id>http://daijiale.github.io/2015/04/03/【个人】记南昌二中/</id>
    <published>2015-04-03T05:20:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="硬件">硬件</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;二中在硬件上最大的特点就是壕！第一次来二中参加考试时便被壕气外露的红砖绿叶迷住了。还有人造草皮的足球场，三年一遇的游泳馆（三年就上过一次课），堆满了电脑随便用的图书馆。学校里四处都是花花草草，校门的花坛一月一换，班上的一体机切水果什么的信手拈来。就是任性就是壕！<br><a id="more"></a></p>
<h1 id="师资">师资</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;二中的老师阵容十分强大，但随着这几年扩招老师资源也变得有些吃紧了。重点班尚能保证豪华阵容，在江西可以说不会逊色于任何学校的重点班，但平行班就会有很多刚进校不久的年轻老师了。当然不是说年轻老师一定不好，但是在高中尤其是高三，老师的经验与鼓舞对班级的提高是很有用的。所以二中这几年也在拼命招揽人才，目前一大批年轻老师已经走上一线，师资整体实力依然很强大。<br>3.理念：二中多年来一直重视综合素质教育，社团和各种活动巨多！学校也给很大的支持，每一届都会产生许多交际花。不过由于近年高考成绩不理想，15届开始进行了一些改革，加大了学业方面的侧重。所以未来二中也许会少一些交际花多一批学霸。</p>
<h1 id="总结">总结</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;二中是一个神奇的地方，不论是在晨会上考试中挥斥方遒碾压众人的大神，还是走廊上树林旁对老师阿鲁巴时杀伐果断的凌厉，或是操场边天台上情侣基友看西山日落时的静谧，又抑或是顶楼学霸们在下课铃响时冲下楼梯直奔食堂的气势，它们一起组成了二中独一无二的体验。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;它壕气却又不失秀气，三年中拍的二中风景随便拎出一张都能胜任南昌市旅游明信片。它庄重却又不失亲和，老师们一个个才高八斗学富五车，却又能和学生们打成一片课上开撕。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;二中就是这样一个地方，简约而不简单，无论你来自哪里，在这里你总会找到最浓重的归属感。</p>
<p><strong>－－－－－－－－－－－－－－－－－－－－－－－华丽的分割线，多图预警－－－－－－－－－－－－－－－－－－－－</strong></p>
<p><img src="http://7xi6qz.com1.z0.glb.clouddn.com/djlblogpicnanchang2zhong.jpg" alt=""></p>
<p>－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="硬件">硬件</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;二中在硬件上最大的特点就是壕！第一次来二中参加考试时便被壕气外露的红砖绿叶迷住了。还有人造草皮的足球场，三年一遇的游泳馆（三年就上过一次课），堆满了电脑随便用的图书馆。学校里四处都是花花草草，校门的花坛一月一换，班上的一体机切水果什么的信手拈来。就是任性就是壕！<br>]]>
    
    </summary>
    
      <category term="个人故事" scheme="http://daijiale.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%95%85%E4%BA%8B/"/>
    
      <category term="转载博文" scheme="http://daijiale.github.io/categories/%E8%BD%AC%E8%BD%BD%E5%8D%9A%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【舞蹈】关于PoppinDance的一点心得]]></title>
    <link href="http://daijiale.github.io/2015/04/03/%E3%80%90%E8%88%9E%E8%B9%88%E3%80%91poppin%20dance/"/>
    <id>http://daijiale.github.io/2015/04/03/【舞蹈】poppin dance/</id>
    <published>2015-04-03T05:20:09.000Z</published>
    <updated>2016-11-07T06:48:32.000Z</updated>
    <content type="html"><![CDATA[<p> <strong>Author:</strong> <a href="http://www.daijiale.cn" target="_blank" rel="external">Dancer小枫</a></p>
<p><strong>舞龄：</strong>2年</p>
<p><strong>舞种：</strong>poppin</p>
<p>这里是小枫这几年跳舞的心得，持续更新中。</p>
<a id="more"></a>
<h3 id="一、关于听音乐的方式和方法">一、关于听音乐的方式和方法</h3><ul>
<li><p>不要听音乐的时候觉得这首歌好听，就一直放着，然后脑子里就去想其他的事去了。这样只会浪费时间，没有任何意义。一步一步来，先听出来它的feeling，是funky的，是soft的，是smooth的，是light的，还是heavy的，或者是robot的。然后认真的听beat，即使是没听过的歌也要争取在八拍之内，听清楚它的beat，不要乱做pop。最后，听清楚它的音效，就是八拍，八拍的倍数拍必然出现特殊音效。 </p>
</li>
<li><p>认真的去听，音乐不是拿给你听起娱乐的。 锻炼自己听音乐的能力，没听过的一样可以跳。就像hozin说的，没听过就凭经验跳就是这么回事。</p>
</li>
</ul>
<h3 id="二、关于poppin的立体化">二、关于poppin的立体化</h3><ul>
<li><p>battle的时候，对面是对手，右边是观众，左边是judge。所以要立体，改掉自己在镜子前面跳的，只有一个面的习惯，poppin一定是立体的。 面有左右，有前后，有高低。全部都要做到。用walk out，用flex，用neck of klex，用pop go。用wave等等都可以换面。 </p>
</li>
<li><p>高级一点的，是用roll来带，全身的都可以，cobra，snake都是后话了。重心变化很重要，参照古冲轴思想。 </p>
</li>
<li><p>dino说的很好，立体就是，跳了左边就要有右边，跳了上面就一定有下面，有快的就一定有慢的。 </p>
</li>
<li><p>还有，变化你的拍子。不是一直都一拍一拍得跳，有时候可以慢下来，做做两拍的。也是立体的一个方面。</p>
</li>
</ul>
<h3 id="三、关于poppin与music结合（三个阶段）">三、关于poppin与music结合（三个阶段）</h3><ul>
<li><p>第一阶段，dance to the beat。跳的时候，把歌里的所有beat都卡住，大的，小的，强的，弱的，全部都要。或许有些快速的pop你跟不上，你就多练pop的速度，多练哈double pop。直到你可以随便卡一首歌里面的所有pop。 </p>
</li>
<li><p>第二阶段，dance to the music。跳的时候，多给自己找，跳八拍的感觉，也就是多听音乐，听到吐了还是要继续。用各种基础和元素去做音效，wave，roll，pop，都可以。和pop的质感一样，用身体去模拟音效，主要是卡音效的timin。 </p>
</li>
</ul>
<ul>
<li><p>关于卡歌词，不是卡它唱的什么，也是卡timin。但是也有特殊的，比较明显的歌词可以卡，比如yeah之类的，具体参照kod6，dino vs kite，第一个round的dino的ending pose。<br>但是beat不能不做，既要做beat，也要做音效出来。这就是所谓的把音乐跳满，也就是最简单的切分音乐。 </p>
<ul>
<li>第三阶段，这个比较难，dance to the feeling。一听到歌，就知道自己用怎样的风格去跳。我喜欢的funky，你喜欢的smooth，还有heavy等等，多去听，去体会这首歌的feeling，然后跳出它的feeling来。<br>依然要带感情去跳，才不空洞。sad的，流畅的，要听得出来，看廖博的我怀念的你就明白了吧。 </li>
</ul>
</li>
<li><p>无论跳什么，都要灌上你的feeling，无论是pop，wave，还是roll，walk out等等。<br>要明确自己不是用跳舞来表现这首歌，而是自己跳出来的东西就是一首歌。我原来说过，舞蹈和音乐是一体的。 只有这样，才能每次跳出来都是新的东西，不会重复，不会让人感觉无聊。 你也记得上次hozin说过的吧，那些进不了海选的就是没有feeling，或者一直是一种feeling的人。 即使不喜欢，也要去尝试跳不同的音乐，不同的feeling</p>
</li>
</ul>
<h3 id="四、pop的质感">四、pop的质感</h3><ul>
<li><p>歌里的pop是什么样子的，就要把自己的pop做成什么样子。不是每次做pop都是strong的，也有小一点的，用自己的身体去模拟歌里头pop的质感。 参照arab gangsta beat和beat 6里面的“砰”，就不是你只是简单地用pop的强与弱能表达的。</p>
</li>
<li><p>包括last one stand 2011里头的歌，也就是LA的曲子，参照Linguistic_Feat_Stray。 也包括用tick去模拟pop之类的。 “啪”也有很多种，有干脆的，也有没收音的。自己仔细听，不要忽略质感这个重要的东西。</p>
</li>
</ul>
<h3 id="五、关于三种风格（跳舞的模式）">五、关于三种风格（跳舞的模式）</h3><ul>
<li><p>跳poppin有三种风格，animation，boogaloo，poppin。</p>
</li>
<li><p>三种风格的运用，一开始可以是animation感觉的，做点控制，也可以用tick，灌animation感觉来做一些基础walk out，flex，king tut之类的，再换boogaloo的感觉来跳基础和一些基本的元素，再换poppin感觉的。这样，就算你做一个walk out，也可以做出三种感觉来，更何况walk out只是个框架，再加点roll进去，怎么可能没有动作跳？ </p>
</li>
<li><p>用不同的风格去做同样的基础，就是不同的感觉，不同的味道。不至于让人看你一直在做重复的动作，干巴巴的。 要找到自己跳舞的模式，不要出来就乱跳，不知道自己要跳什么，跟了一会儿beat，累了，不跟了。听到音效来了，又手忙脚乱的做音效，这样跳出来内行看了就知道你不行，或许外行看了觉得你厉害，又在做音效，又在跟beat。要有个很清晰的思路来跳，这几个八拍我要做animation的东西，Isolation什么的。下几个八拍我就做boogaloo的东西，在哪里又开始变成poppin。要有思路和模式来跳舞。舞佳舞的大神们虽然卡同一个音效的动作不一样，但是他们卡音效的理念是一样的。这个就是思路和模式。</p>
</li>
<li><p>跳poppin，无论是solo还是battle，你都要把这些东西跳完。不要battle的时候，上去1分半钟，就做个一分半钟的poppin或者animation什么的，不对的。即使你的控制很牛B，你一分半全部都robot了，全场炸翻了，judge还是会判你输。因为你的poppin是片面的，不完整的。 根本就不存在什么没动作跳之类的。</p>
<h3 id="六、关于感情变化（高潮和低潮）">六、关于感情变化（高潮和低潮）</h3></li>
<li><p>上场不要急于做pop之类的，先做做up&amp;down，带点groovin，把自己的律动打开。 </p>
</li>
<li><p>要跳出高潮和，低潮。一共一分半，不能一直是一个频率的，一个节奏的，自己要很好的区分开来。 可以先做做两拍，然后变一拍。 </p>
</li>
<li><p>根据歌的feeling来做感情变化。 </p>
</li>
<li><p>我们平时听的funkymusic其实一般分为两种，p funk和g funk。我们平时经常听的和喜欢听的，大多是p funk，有高潮低潮的，节奏变化也明显，所以做这个感情变化也比较容易的。但是g funk完全不同，参照专辑Return To The G Style - Slick Dogg，每个八拍的音效和beat都一模一样，就比较难跳出不一样的东西来，但是也要尽量做到4个八拍就一变化</p>
<h3 id="七、关于牛B和不牛B">七、关于牛B和不牛B</h3></li>
<li>整个在poppin的过程中，舞蹈是以一种很顺畅的方式在流动的，所以对流畅度的要求特别高。 </li>
<li>你要做的beat和音效是完全包含在你的舞蹈里的，不是说你为了刻意去卡一个音效，抛弃你开始很流畅的舞蹈，卡完这个音效后再去做一舞蹈，没错，你卡了音效，但是你不牛B。一直很流畅的，让人一看就觉得是音效来配合你的舞蹈，这个才牛B。参照KOD5决赛，dino vs 古冲 第二个round。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p> <strong>Author:</strong> <a href="http://www.daijiale.cn">Dancer小枫</a></p>
<p><strong>舞龄：</strong>2年</p>
<p><strong>舞种：</strong>poppin</p>
<p>这里是小枫这几年跳舞的心得，持续更新中。</p>]]>
    
    </summary>
    
      <category term="街舞" scheme="http://daijiale.github.io/tags/%E8%A1%97%E8%88%9E/"/>
    
      <category term="poppin" scheme="http://daijiale.github.io/tags/poppin/"/>
    
      <category term="原创博文" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/"/>
    
      <category term="关于舞蹈" scheme="http://daijiale.github.io/categories/%E5%8E%9F%E5%88%9B%E5%8D%9A%E6%96%87/%E5%85%B3%E4%BA%8E%E8%88%9E%E8%B9%88/"/>
    
  </entry>
  
</feed>